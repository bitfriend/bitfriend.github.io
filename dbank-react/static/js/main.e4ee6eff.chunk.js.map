{"version":3,"sources":["truffle-networks.js","logo.png","App.js","serviceWorker.js","index.js"],"names":["require","config","HDWalletProvider","MNEMONIC","process","ROPSTEN_URL","KOVAN_URL","RINKEBY_URL","MAINNET_URL","module","exports","development","host","port","network_id","ropsten","provider","kovan","rinkeby","mainnet","Header","Layout","Content","Paragraph","Typography","Title","TabPane","Tabs","App","state","account","walletBalance","depositBalance","depositAmount","deposited","borrowBalance","borrowAmount","borrowed","loading","hasError","errorMessage","errorDescription","getWeb3","Promise","resolve","reject","window","addEventListener","ethereum","web3","Web3","enable","then","data","error","console","log","getProvider","onChangeDepositAmount","value","setState","toString","onClickDeposit","deposit","onClickWithdraw","withdraw","onChangeBorrowAmount","onClickBorrow","borrow","onClickPayOff","payOff","render","className","style","height","display","alignItems","src","alt","level","lineHeight","marginBottom","marginLeft","color","flex","textAlign","utils","fromWei","justifyContent","marginTop","type","message","description","closable","onClose","defaultActiveKey","width","tab","key","min","placeholder","onChange","disabled","onClick","position","top","left","backgroundColor","a","this","eth","getAccounts","accounts","envNetworkType","net","getNetworkType","networkType","getId","networkId","getBalance","alert","tokenContract","Contract","Token","abi","networks","address","dbankContract","Dbank","getBlockNumber","recentBlock","watchEvents","dBankAddress","methods","etherBalanceOf","call","isDeposited","collateralEther","isBorrowed","events","Deposit","event","blockNumber","returnValues","toBN","sub","on","Withdraw","userBalance","add","Borrow","collateralBalance","Approval","PayOff","amount","tx","estimateGas","from","toWei","gas","getGasPrice","gasPrice","send","hash","receipt","confirmationNumber","err","tokenBorrowed","txApprove","approve","txPayOff","PureComponent","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e4ee6eff.chunk.js","sourcesContent":["require('dotenv').config(); // To use process.env variable\r\nconst HDWalletProvider = require('@truffle/hdwallet-provider');\r\nconst MNEMONIC = process.env.REACT_APP_MNEMONIC;\r\nconst ROPSTEN_URL = `https://ropsten.infura.io/v3/${process.env.REACT_APP_INFURA_PROJECT_ID}`;\r\nconst KOVAN_URL = `https://kovan.infura.io/v3/${process.env.REACT_APP_INFURA_PROJECT_ID}`;\r\nconst RINKEBY_URL = `https://rinkeby.infura.io/v3/${process.env.REACT_APP_INFURA_PROJECT_ID}`;\r\nconst MAINNET_URL = `https://mainnet.infura.io/v3/${process.env.REACT_APP_INFURA_PROJECT_ID}`;\r\n\r\nmodule.exports = {\r\n  development: {\r\n    host: \"127.0.0.1\",\r\n    port: 7545,\r\n    network_id: \"*\" // Match any network id\r\n  },\r\n  ropsten: {\r\n    provider: () => new HDWalletProvider(MNEMONIC, ROPSTEN_URL),\r\n    network_id: 3\r\n  },\r\n  kovan: {\r\n    provider: () => new HDWalletProvider(MNEMONIC, KOVAN_URL),\r\n    network_id: 42\r\n  },\r\n  rinkeby: {\r\n    provider: () => new HDWalletProvider(MNEMONIC, RINKEBY_URL),\r\n    network_id: 4\r\n  },\r\n  mainnet: {\r\n    provider: () => new HDWalletProvider(MNEMONIC, MAINNET_URL),\r\n    network_id: 1\r\n  }\r\n};","module.exports = __webpack_public_path__ + \"static/media/logo.adca41d3.png\";","import React, { PureComponent } from 'react';\nimport { Alert, Button, InputNumber, Layout, Spin, Tabs, Typography } from 'antd';\nimport 'antd/dist/antd.css';\nimport './App.css';\n\nimport Web3 from 'web3';\nimport Token from './abis/Token.json';\nimport Dbank from './abis/Dbank.json';\nimport networks from './truffle-networks';\n\nconst { Header, Content } = Layout;\nconst { Paragraph, Title } = Typography;\nconst { TabPane } = Tabs;\n\nclass App extends PureComponent {\n  state = {\n    account: '0x0',\n    walletBalance: '0',\n    depositBalance: '0',\n    depositAmount: '0.01',\n    deposited: false,\n    borrowBalance: '0',\n    borrowAmount: '0.01',\n    borrowed: false,\n    loading: false,\n    hasError: false,\n    errorMessage: '',\n    errorDescription: ''\n  }\n\n  async componentDidMount() {\n    this.setState({ loading: true });\n    try {\n      // Get network provider and web3 instance.\n      this.web3 = await this.getWeb3();\n\n      // Use web3 to get the user's accounts.\n      const accounts = await this.web3.eth.getAccounts();\n\n      // Get the contract instance.\n      const envNetworkType = process.env.REACT_APP_NETWORK_TYPE;\n      const networkType = await this.web3.eth.net.getNetworkType();\n      if (networkType !== envNetworkType) {\n        if (!(envNetworkType === 'development' && networkType === 'private')) {\n          this.setState({\n            loading: false,\n            hasError: true,\n            errorMessage: 'Error in Ethereum Network Type',\n            errorDescription: `Current account is of ${networkType} network. Please select account for ${process.env.REACT_APP_NETWORK_TYPE} network.`\n          });\n          return;\n        }\n      }\n      const networkId = await this.web3.eth.net.getId();\n\n      // load wallet balance\n      if (typeof accounts[0] !== 'undefined') {\n        const walletBalance = await this.web3.eth.getBalance(accounts[0]);\n        this.setState({\n          account: accounts[0],\n          walletBalance\n        });\n      } else {\n        window.alert('Please login with MetaMask');\n      }\n\n      // load contracts\n      this.tokenContract = new this.web3.eth.Contract(Token.abi, Token.networks[networkId].address);\n      this.dbankContract = new this.web3.eth.Contract(Dbank.abi, Dbank.networks[networkId].address);\n\n      // Install event watch\n      this.recentBlock = await this.web3.eth.getBlockNumber();\n      this.watchEvents();\n\n      this.dBankAddress = Dbank.networks[networkId].address;\n      const depositBalance = await this.dbankContract.methods.etherBalanceOf(accounts[0]).call();\n      const deposited = await this.dbankContract.methods.isDeposited(accounts[0]).call();\n      const borrowBalance = await this.dbankContract.methods.collateralEther(accounts[0]).call();\n      const borrowed = await this.dbankContract.methods.isBorrowed(accounts[0]).call();\n\n      this.setState({\n        loading: false,\n        depositBalance,\n        deposited,\n        borrowBalance,\n        borrowed\n      });\n    } catch (error) {\n      this.setState({ loading: false }, () => {\n        console.log(error);\n      });\n    }\n  }\n\n  getWeb3 = () => new Promise((resolve, reject) => {\n    // Wait for loading completion to avoid race conditions with web3 injection timing.\n    window.addEventListener('load', () => {\n      // Modern dapp browsers...\n      if (window.ethereum) {\n        const web3 = new Web3(window.ethereum);\n        try {\n          // Request account access if needed\n          window.ethereum.enable().then(data => {\n            // Acccounts now exposed\n            resolve(web3);\n          });\n        } catch (error) {\n          reject(error);\n        }\n      }\n      // Legacy dapp browsers...\n      else if (window.web3) {\n        // Use Mist/MetaMask's provider.\n        const web3 = window.web3;\n        console.log(\"Injected web3 detected.\");\n        resolve(web3);\n      }\n      // Fallback to localhost; use dev console port by default...\n      else {\n        const web3 = new Web3(this.getProvider());\n        console.log('No web3 instance injected, using Local web3.');\n        resolve(web3);\n      }\n    });\n  })\n\n  getProvider() {\n    if (process.env.REACT_APP_NETWORK_TYPE === 'development') {\n      return new Web3.providers.HttpProvider(`http://${networks.development.host}:${networks.development.port}`);\n    }\n    return networks[process.env.REACT_APP_NETWORK_TYPE].provider();\n  }\n\n  watchEvents() {\n    this.dbankContract.events.Deposit({}, (error, event) => {\n      // Network operation ends here\n      console.log('Deposit event', event);\n      if (event.blockNumber <= this.recentBlock) {\n        return;\n      }\n      if (event.returnValues[0] !== this.state.account) {\n        return;\n      }\n      if (!error) {\n        let { walletBalance } = this.state;\n        walletBalance = this.web3.utils.toBN(walletBalance).sub(this.web3.utils.toBN(event.returnValues[1])).toString();\n        this.setState({\n          walletBalance,\n          depositBalance: event.returnValues[1],\n          depositAmount: null,\n          deposited: true,\n          loading: false\n        });\n      } else {\n        this.setState({ loading: false });\n      }\n    }).on('data', event => {\n      console.log('Deposit event data', event);\n    }).on('error', console.error);\n\n    this.dbankContract.events.Withdraw({}, (error, event) => {\n      // Network operation ends here\n      console.log('Withdraw event', event);\n      if (event.blockNumber <= this.recentBlock) {\n        return;\n      }\n      if (event.returnValues[0] !== this.state.account) {\n        return;\n      }\n      if (!error) {\n        let { walletBalance } = this.state;\n        const userBalance = event.returnValues[1];\n        const depositTime = event.returnValues[2];\n        const interest = event.returnValues[3];\n        walletBalance = this.web3.utils.toBN(walletBalance).add(this.web3.utils.toBN(userBalance)).toString();\n        this.setState({\n          walletBalance,\n          depositBalance: '0',\n          deposited: false,\n          loading: false\n        });\n      } else {\n        this.setState({ loading: false });\n      }\n    }).on('data', event => {\n      console.log('Withdraw event data', event);\n    }).on('error', console.error);\n\n    this.dbankContract.events.Borrow({}, (error, event) => {\n      // Network operation ends here\n      console.log('Borrow event', event);\n      if (event.blockNumber <= this.recentBlock) {\n        return;\n      }\n      if (event.returnValues[0] !== this.state.account) {\n        return;\n      }\n      const collateralBalance = event.returnValues[1];\n      const tokensToMint = event.returnValues[2];\n      if (!error) {\n        this.setState({\n          borrowBalance: collateralBalance,\n          borrowAmount: null,\n          borrowed: true,\n          loading: false\n        });\n      } else {\n        this.setState({ loading: false });\n      }\n    }).on('data', event => {\n      console.log('Borrow event data', event);\n    }).on('error', console.error);\n\n    this.tokenContract.events.Approval({}, (error, event) => {\n      // Network operation ends here\n      console.log('Approval event', event);\n      if (event.blockNumber <= this.recentBlock) {\n        return;\n      }\n      if (event.returnValues[0] !== this.state.account) {\n        return;\n      }\n      if (!error) {\n        const spender = event.returnValues[1];\n        const amount = event.returnValues[2];\n        this.setState({ loading: false });\n      } else {\n        this.setState({ loading: false });\n      }\n    }).on('data', event => {\n      console.log('Approval event data', event);\n    }).on('error', console.error);\n\n    this.dbankContract.events.PayOff({}, (error, event) => {\n      // Network operation ends here\n      console.log('PayOff event', event);\n      if (event.blockNumber <= this.recentBlock) {\n        return;\n      }\n      if (event.returnValues[0] !== this.state.account) {\n        return;\n      }\n      if (!error) {\n        const fee = event.returnValues[1];\n        this.setState({\n          borrowBalance: '0',\n          borrowed: false,\n          loading: false\n        });\n      } else {\n        this.setState({ loading: false });\n      }\n    }).on('data', event => {\n      console.log('PayOff event data', event);\n    }).on('error', console.error);\n  }\n\n  async deposit(amount) {\n    // if gas and gasPrice is insufficient, \"deposit\" method may be failed\n    const tx = this.dbankContract.methods.deposit();\n    const gas = await tx.estimateGas({\n      from: this.state.account,\n      value: this.web3.utils.toWei(amount, 'ether')\n    });\n    const gasPrice = await this.web3.eth.getGasPrice();\n    tx.send({\n      gas,\n      gasPrice,\n      value: this.web3.utils.toWei(amount, 'ether'),\n      from: this.state.account\n    }).on('transactionHash', (hash) => {\n      // User clicked Confirm button in MetaMask\n      console.log('hash', hash);\n      // Network operation starts here\n      this.setState({ loading: true });\n    }).on('receipt', (receipt) => {\n      console.log('receipt', receipt);\n    }).on('confirmation', (confirmationNumber, receipt) => {\n      console.log('confirmation-number', confirmationNumber);\n      console.log('confirmation-receipt', receipt);\n    }).on('error', (err) => {\n      console.error(err);\n    });\n  }\n\n  async withdraw() {\n    // if gas and gasPrice is insufficient, \"withdraw\" method may be failed\n    const tx = this.dbankContract.methods.withdraw();\n    const gas = await tx.estimateGas({\n      from: this.state.account\n    });\n    const gasPrice = await this.web3.eth.getGasPrice();\n    tx.send({\n      gas,\n      gasPrice,\n      from: this.state.account\n    }).on('transactionHash', (hash) => {\n      // User clicked Confirm button in MetaMask\n      console.log('hash', hash);\n      // Network operation starts here\n      this.setState({ loading: true });\n    }).on('receipt', (receipt) => {\n      console.log('receipt', receipt);\n    }).on('confirmation', (confirmationNumber, receipt) => {\n      console.log('confirmation-number', confirmationNumber);\n      console.log('confirmation-receipt', receipt);\n    }).on('error', (err) => {\n      console.error(err);\n    });\n  }\n\n  async borrow(amount) {\n    // if gas and gasPrice is insufficient, \"borrow\" method may be failed\n    const tx = this.dbankContract.methods.borrow();\n    const gas = await tx.estimateGas({\n      from: this.state.account,\n      value: this.web3.utils.toWei(amount, 'ether')\n    });\n    const gasPrice = await this.web3.eth.getGasPrice();\n    tx.send({\n      gas,\n      gasPrice,\n      value: this.web3.utils.toWei(amount, 'ether'),\n      from: this.state.account\n    }).on('transactionHash', (hash) => {\n      // User clicked Confirm button in MetaMask\n      console.log('hash', hash);\n      // Network operation starts here\n      this.setState({ loading: true });\n    }).on('receipt', (receipt) => {\n      console.log('receipt', receipt);\n    }).on('confirmation', (confirmationNumber, receipt) => {\n      console.log('confirmation-number', confirmationNumber);\n      console.log('confirmation-receipt', receipt);\n    }).on('error', (err) => {\n      console.error(err);\n    });\n  }\n\n  async payOff() {\n    // if gas and gasPrice is insufficient, \"payOff\" method may be failed\n    const tokenBorrowed = this.state.borrowBalance / 2;\n    const txApprove = this.tokenContract.methods.approve(this.dBankAddress, tokenBorrowed.toString());\n    let gas = await txApprove.estimateGas({\n      from: this.state.account\n    });\n    const gasPrice = await this.web3.eth.getGasPrice();\n    await txApprove.send({\n      gas,\n      gasPrice,\n      from: this.state.account\n    }).on('transactionHash', (hash) => {\n      // User clicked Confirm button in MetaMask\n      console.log('hash', hash);\n      // Network operation starts here\n      this.setState({ loading: true });\n    }).on('receipt', (receipt) => {\n      console.log('receipt', receipt);\n    }).on('confirmation', (confirmationNumber, receipt) => {\n      console.log('confirmation-number', confirmationNumber);\n      console.log('confirmation-receipt', receipt);\n    }).on('error', (err) => {\n      console.error(err);\n    });\n\n    // if gas and gasPrice is insufficient, \"payOff\" method may be failed\n    const txPayOff = this.dbankContract.methods.payOff();\n    gas = await txPayOff.estimateGas({\n      from: this.state.account\n    });\n    await txPayOff.send({\n      gas,\n      gasPrice,\n      from: this.state.account\n    }).on('transactionHash', (hash) => {\n      // User clicked Confirm button in MetaMask\n      console.log('hash', hash);\n      // Network operation starts here\n      this.setState({ loading: true });\n    }).on('receipt', (receipt) => {\n      console.log('receipt', receipt);\n    }).on('confirmation', (confirmationNumber, receipt) => {\n      console.log('confirmation-number', confirmationNumber);\n      console.log('confirmation-receipt', receipt);\n    }).on('error', (err) => {\n      console.error(err);\n    });\n  }\n\n  onChangeDepositAmount = (value) => this.setState({ depositAmount: value.toString() })\n\n  onClickDeposit = () => {\n    this.deposit(this.state.depositAmount);\n  }\n\n  onClickWithdraw = () => {\n    this.withdraw();\n  }\n\n  onChangeBorrowAmount = (value) => this.setState({ borrowAmount: value.toString() })\n\n  onClickBorrow = () => {\n    this.borrow(this.state.borrowAmount);\n  }\n\n  onClickPayOff = () => {\n    this.payOff();\n  }\n\n  render = () => (\n    <div className=\"App\">\n      <Layout style={{ height: '100vh' }}>\n        <Header>\n          <div style={{ height: '100%', display: 'flex', alignItems: 'center' }}>\n            <img src={require('./logo.png')} alt=\"logo\" height={32} />\n            <Title level={1} style={{\n              lineHeight: 'unset',\n              marginBottom: 'unset',\n              marginLeft: '0.5em',\n              color: 'white'\n            }}>d₿ank</Title>\n            <Title level={5} style={{\n              flex: 1,\n              textAlign: 'right',\n              lineHeight: 'unset',\n              marginBottom: 'unset',\n              marginLeft: '0.5em',\n              color: 'white'\n            }}>Wallet Balance: {this.web3 && this.web3.utils.fromWei(this.state.walletBalance)} ETH</Title>\n            <Title level={5} style={{\n              flex: 1,\n              textAlign: 'right',\n              lineHeight: 'unset',\n              marginBottom: 'unset',\n              marginLeft: '0.5em',\n              color: 'white'\n            }}>Deposit Balance: {this.web3 && this.web3.utils.fromWei(this.state.depositBalance)} ETH</Title>\n            <Title level={5} style={{\n              flex: 1,\n              textAlign: 'right',\n              lineHeight: 'unset',\n              marginBottom: 'unset',\n              marginLeft: '0.5em',\n              color: 'white'\n            }}>Borrow Balance: {this.web3 && this.web3.utils.fromWei(this.state.borrowBalance)} ETH</Title>\n          </div>\n        </Header>\n        <Content style={{\n          display: 'flex',\n          justifyContent: 'center'\n        }}>\n          <div style={{ marginTop: 20 }}>\n            {this.state.hasError && (\n              <Alert\n                type=\"warning\"\n                message={this.state.errorMessage}\n                description={this.state.errorDescription}\n                closable\n                onClose={() => this.setState({ hasError: false })}\n              />\n            )}\n            <div style={{ textAlign: 'center' }}>\n              <Title level={1}>Welcome to d₿ank</Title>\n              <Tabs defaultActiveKey=\"1\" type=\"card\" style={{ width: '100%' }}>\n                <TabPane tab=\"Deposit\" key=\"1\" style={{\n                  width: '100%',\n                  textAlign: 'center'\n                }}>\n                  <Paragraph>How much do you want to deposit?</Paragraph>\n                  <Paragraph>(min. amount is 0.01 ETH)</Paragraph>\n                  <Paragraph>(1 deposit is possible at the time)</Paragraph>\n                  <InputNumber\n                    min={0.01}\n                    value={this.state.depositAmount}\n                    placeholder=\"amount...\"\n                    style={{\n                      marginBottom: 30,\n                      display: 'block',\n                      width: '100%'\n                    }}\n                    onChange={this.onChangeDepositAmount}\n                    disabled={this.state.deposited}\n                  />\n                  <Button\n                    type=\"primary\"\n                    style={{\n                      marginBottom: 20\n                    }}\n                    onClick={this.onClickDeposit}\n                    disabled={this.state.deposited}\n                  >DEPOSIT</Button>\n                  {this.state.deposited && (\n                    <Paragraph>Already you deposited</Paragraph>\n                  )}\n                </TabPane>\n                <TabPane tab=\"Withdraw\" key=\"2\" style={{\n                  width: '100%',\n                  textAlign: 'center'\n                }}>\n                  <Paragraph>Do you want to withdraw + take interest?</Paragraph>\n                  <Button\n                    type=\"primary\"\n                    style={{\n                      marginBottom: 20\n                    }}\n                    onClick={this.onClickWithdraw}\n                    disabled={!this.state.deposited}\n                  >WITHDRAW</Button>\n                  {!this.state.deposited && (\n                    <Paragraph>Nothing deposited</Paragraph>\n                  )}\n                </TabPane>\n                <TabPane tab=\"Borrow\" key=\"3\" style={{\n                  width: '100%',\n                  textAlign: 'center'\n                }}>\n                  <Paragraph>Do you want to borrow token?</Paragraph>\n                  <Paragraph>(You'll get 50% of collateral, in Tokens)</Paragraph>\n                  <Paragraph>Type collateral amount (in ETH)</Paragraph>\n                  <InputNumber\n                    min={0.01}\n                    value={this.state.borrowAmount}\n                    placeholder=\"amount...\"\n                    style={{\n                      marginBottom: 30,\n                      display: 'block',\n                      width: '100%'\n                    }}\n                    onChange={this.onChangeBorrowAmount}\n                    disabled={this.state.borrowed}\n                  />\n                  <Button\n                    type=\"primary\"\n                    style={{\n                      marginBottom: 20\n                    }}\n                    onClick={this.onClickBorrow}\n                    disabled={this.state.borrowed}\n                  >BORROW</Button>\n                  {this.state.borrowed && (\n                    <Paragraph>Already you borrowed</Paragraph>\n                  )}\n                </TabPane>\n                <TabPane tab=\"Payoff\" key=\"4\" style={{\n                  width: '100%',\n                  textAlign: 'center'\n                }}>\n                  <Paragraph>Do you want to payoff the loan?</Paragraph>\n                  <Paragraph>(You'll receive your collateral - fee)</Paragraph>\n                  <Button\n                    type=\"primary\"\n                    style={{\n                      marginBottom: 20\n                    }}\n                    onClick={this.onClickPayOff}\n                    disabled={!this.state.borrowed}\n                  >PAYOFF</Button>\n                  {!this.state.borrowed && (\n                    <Paragraph>Nothing borrowed</Paragraph>\n                  )}\n                </TabPane>\n              </Tabs>\n            </div>\n          </div>\n        </Content>\n      </Layout>\n      {this.state.loading && (\n        <div style={{\n          position: 'absolute',\n          top: 0,\n          left: 0,\n          width: '100vw',\n          height: '100vh',\n          backgroundColor: 'rgba(255, 255, 255, 0.8)',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center'\n        }}>\n          <Spin />\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}