{"version":3,"sources":["state/farms/fetchPublicFarmData.ts","state/farms/fetchFarm.ts","state/farms/fetchFarms.ts","state/farms/fetchFarmsPrices.ts","state/farms/fetchFarmUser.ts","state/farms/index.ts","config/constants/meta.ts","components/layout/Page.tsx","utils/bscscan.ts","hooks/useAuth.ts","utils/getRpcUrl.ts","utils/wallet.ts","components/layout/Container.tsx","utils/web3React.ts","hooks/useWeb3.ts","config/constants/index.ts","hooks/useRefresh.ts","state/pools/helpers.ts","components/UnlockButton.tsx","contexts/Localization/helpers.ts","contexts/Localization/Provider.tsx","contexts/Localization/useTranslation.ts","components/Tags.tsx","hooks/useApprove.ts","hooks/useStake.ts","state/block.ts","utils/compoundApyHelpers.ts","components/ApyCalculatorModal.tsx","utils/farmsPriceHelpers.ts","contexts/ThemeContext.tsx","config/constants/contracts.ts","utils/addressHelpers.ts","contexts/ToastsContext/Provider.tsx","hooks/useTabVisibility.ts","contexts/RefreshContext.tsx","utils/bigNumber.ts","hooks/usePersistState.ts","utils/formatBalance.ts","utils/latinise.ts","utils/apr.ts","hooks/useUnstake.ts","hooks/useHarvest.ts","utils/farmHelpers.ts","config/index.ts","components/Balance.tsx","components/layout/Flex.tsx","components/PageHeader.tsx","components/SearchInput.tsx","components/Select.tsx","hooks/useDelayedUnmount.ts","utils/multicall.ts","hooks/useContract.ts","config/constants/pools.ts","utils/web3.ts","config/constants/endpoints.ts","state/actions.ts","utils/callHelpers.ts","state/hooks.ts","utils/settings.ts","utils/contractHelpers.ts","state/index.ts","hooks/useTheme.ts","config/constants/tokens.ts","config/localization/languages.ts","views/Pools/components/ToggleView.tsx","hooks/useEagerConnect.ts","style/Global.tsx","components/Menu/config.ts","components/Menu/index.tsx","components/SuspenseWithChunkError.tsx","components/ToastListener.tsx","components/PageLoader.tsx","components/EasterEgg.tsx","views/Pools/helpers.tsx","views/Pools/components/PoolCard/AprRow.tsx","views/Pools/components/PoolCard/StyledCard.tsx","views/Pools/components/PoolCard/CardFooter/ExpandedFooter.tsx","views/Pools/components/PoolCard/CardFooter/index.tsx","views/Pools/components/PoolCard/StyledCardHeader.tsx","views/Pools/components/PoolCard/CardActions/ApprovalAction.tsx","views/Pools/components/PoolCard/Modals/NotEnoughTokensModal.tsx","views/Pools/components/PoolCard/Modals/PercentageButton.tsx","views/Pools/components/PoolCard/Modals/StakeModal.tsx","views/Pools/components/PoolCard/CardActions/StakeActions.tsx","views/Pools/components/PoolCard/Modals/CollectModal.tsx","views/Pools/components/PoolCard/CardActions/HarvestActions.tsx","views/Pools/components/PoolCard/CardActions/index.tsx","views/Pools/components/PoolCard/index.tsx","views/Pools/components/PoolTabButtons.tsx","views/Pools/components/HelpButton.tsx","views/Pools/components/PoolsTable/Cells/BaseCell.tsx","views/Pools/components/PoolsTable/Cells/NameCell.tsx","views/Pools/components/PoolsTable/Cells/EarningsCell.tsx","views/Pools/components/PoolsTable/Apr.tsx","views/Pools/components/PoolsTable/Cells/AprCell.tsx","views/Pools/components/PoolsTable/Cells/TotalStakedCell.tsx","views/Pools/components/PoolsTable/Cells/EndsInCell.tsx","views/Pools/components/PoolsTable/Cells/ExpandActionCell.tsx","views/Pools/components/PoolsTable/ActionPanel/styles.ts","views/Pools/components/PoolsTable/ActionPanel/Harvest.tsx","views/Pools/components/PoolsTable/ActionPanel/Stake.tsx","views/Pools/components/PoolsTable/ActionPanel/ActionPanel.tsx","views/Pools/components/PoolsTable/PoolRow.tsx","views/Pools/components/PoolsTable/PoolsTable.tsx","views/Pools/index.tsx","components/RollingDice/index.tsx","views/Dice/index.tsx","views/Dice/PageHeader.tsx","views/Dice/HistoryRow.tsx","views/Dice/HistoryTable.tsx","routerHistory.ts","App.tsx","Providers.tsx","index.tsx","state/pools/fetchPools.ts","state/pools/fetchPoolsUser.ts","state/pools/index.ts","hooks/useToast.ts","config/constants/types.ts","config/constants/farms.ts"],"names":["fetchFarm","farm","a","pid","lpAddresses","token","quoteToken","lpAddress","getAddress","calls","address","name","params","getMasterChefAddress","multicall","erc20","tokenBalanceLP","quoteTokenBalanceLP","lpTokenBalanceMC","lpTotalSupply","tokenDecimals","quoteTokenDecimals","lpTokenRatio","BigNumber","div","tokenAmountTotal","BIG_TEN","pow","quoteTokenAmountTotal","tokenAmountMc","times","quoteTokenAmountMc","lpTotalInQuoteToken","masterchefABI","info","totalAllocPoint","allocPoint","_hex","BIG_ZERO","poolWeight","toJSON","tokenPriceVsQuote","multiplier","toString","fetchPublicFarmData","farmPublicData","fetchFarms","farmsToFetch","Promise","all","map","farmConfig","data","getFarmFromTokenSymbol","farms","tokenSymbol","preferredQuoteTokens","farmsWithTokenSymbol","filter","symbol","filterFarmsByQuoteToken","getFarmBaseTokenPrice","quoteTokenFarm","bnbPriceBusd","hasTokenPriceVsQuote","Boolean","quoteTokenInBusd","getFarmQuoteTokenPrice","BIG_ONE","fetchFarmsPrices","bnbBusdFarm","find","farmsWithPrices","baseTokenPrice","quoteTokenPrice","busdPrice","fetchFarmUserAllowances","account","masterChefAddress","erc20ABI","rawLpAllowances","parsedLpAllowances","lpBalance","fetchFarmUserTokenBalances","rawTokenBalances","parsedTokenBalances","tokenBalance","fetchFarmUserStakedBalances","rawStakedBalances","parsedStakedBalances","stakedBalance","fetchFarmUserEarnings","rawEarnings","parsedEarnings","earnings","initialState","farmsConfig","userData","allowance","loadArchivedFarmsData","userDataLoaded","nonArchivedFarms","isArchivedPid","fetchFarmsPublicDataAsync","createAsyncThunk","pids","includes","farmsWithoutHelperLps","fetchFarmUserDataAsync","userFarmAllowances","userFarmTokenBalances","userStakedBalances","userFarmEarnings","farmAllowance","index","farmsSlice","createSlice","reducers","setLoadArchivedFarmsData","state","action","payload","extraReducers","builder","addCase","fulfilled","liveFarmData","farmData","forEach","userDataEl","findIndex","actions","DEFAULT_META","title","description","image","StyledPage","styled","Container","theme","mediaQueries","sm","lg","PageMeta","t","useTranslation","pathname","useLocation","cakePriceUsd","usePriceCakeBusd","cakePriceUsdDisplay","gt","toNumber","toLocaleString","undefined","minimumFractionDigits","maximumFractionDigits","pageMeta","path","getCustomMeta","pageTitle","join","property","content","Page","children","props","getBscScanAddressUrl","BASE_BSC_SCAN_URL","getBscScanBlockCountdownUrl","block","useAuth","useWeb3React","activate","deactivate","toastError","useToast","login","useCallback","connectorID","connector","connectorsByName","error","UnsupportedChainIdError","setupNetwork","window","localStorage","removeItem","connectorLocalStorageKey","NoEthereumProviderError","NoBscProviderError","UserRejectedRequestErrorInjected","UserRejectedRequestErrorWalletConnect","WalletConnectConnector","walletConnectProvider","message","logout","getItem","walletconnect","close","nodes","process","getNodeUrl","randomIndex","random","length","provider","ethereum","chainId","parseInt","request","method","chainName","nativeCurrency","decimals","rpcUrls","blockExplorerUrls","console","registerToken","tokenAddress","tokenImage","type","options","tokenAdded","rpcUrl","injected","InjectedConnector","supportedChainIds","rpc","bridge","qrcode","pollingInterval","bscConnector","BscConnector","ConnectorNames","Injected","WalletConnect","BSC","getLibrary","useWeb3","library","refEth","useRef","useState","Web3","web3NoAccount","web3","setweb3","useEffect","current","useRefresh","useContext","RefreshContext","fastRefresh","fast","slowRefresh","slow","transformUserData","stakingTokenBalance","pendingReward","transformPool","pool","totalStaked","stakingLimit","rest","getTokenPricesFromFarm","reduce","prices","quoteTokenAddress","toLocaleLowerCase","StyledButton","Button","UnlockButton","onPresentConnectModal","useWalletModal","onClick","LS_KEY","fetchLocale","locale","fetch","response","json","getLanguageCodeFromLS","EN","isFetching","currentLanguage","languageMap","Map","set","translations","LanguageContext","createContext","LanguageProvider","codeFromStorage","languages","setState","enLocale","get","currentLocale","prevState","fetchInitialLocales","setLanguage","language","has","setItem","translate","key","translatedText","match","interpolatedText","Object","keys","dataKey","templateKey","RegExp","replace","Provider","value","languageContext","Error","CoreTag","variant","outline","startIcon","width","color","mr","CommunityTag","DualTag","ManualPoolTag","useApprove","lpContract","masterChefContract","useMasterChef","onApprove","approve","tx","useSousApprove","sousId","earningTokenSymbol","requestedApproval","setRequestedApproval","toastSuccess","dispatch","useAppDispatch","sousChefContract","useSousChef","handleApprove","updateUserAllowance","useSousStake","isUsingBnb","handleStake","amount","referrer","stake","sousStakeBnb","sousStake","updateUserStakedBalance","updateUserBalance","onStake","useStake","txHash","blockSlice","currentBlock","initialBlock","setBlock","tokenEarnedPerThousandDollarsCompounding","numberOfDays","farmApr","tokenPrice","roundingDecimals","compoundFrequency","performanceFee","timesCompounded","aprAsDecimal","daysAsDecimalOfYear","principal","finalAmount","parseFloat","toFixed","getRoi","amountEarned","amountInvested","Grid","GridItem","GridHeaderItem","ApyCalculatorModal","onDismiss","apr","linkLabel","linkHref","oneThousandDollarsWorthOfToken","tokenEarnedPerThousand1D","tokenEarnedPerThousand7D","tokenEarnedPerThousand30D","tokenEarnedPerThousand365D","fontSize","bold","textTransform","mb","ml","num","style","maxWidth","justifyContent","textAlign","freq","mt","fee","href","preferredFarm","some","CACHE_KEY","ThemeContext","React","isDark","toggleTheme","ThemeContextProvider","isDarkUserSetting","JSON","parse","setIsDark","stringify","dark","light","97","56","MAINNET_CHAIN_ID","getCakeAddress","tokens","cake","addresses","getMulticallAddress","getWbnbAddress","wbnb","getReferralAddress","isAddress","getEthAddress","ToastsContext","ToastsProvider","toasts","setToasts","toast","prevToasts","id","kebabCase","currentToasts","prevToast","clear","remove","toastTypes","DANGER","toastInfo","INFO","SUCCESS","toastWarning","WARNING","useTabVisibility","tabVisibleRef","onVisibilityChange","document","hidden","addEventListener","removeEventListener","RefreshContextProvider","setSlow","setFast","interval","setInterval","prev","clearInterval","defaultOptions","hydrate","identity","dehydrate","usePersistState","initialValue","userOptions","localStorageKey","valueFromLS","setValue","getDecimalAmount","getBalanceAmount","dividedBy","getBalanceNumber","balance","getFullDisplayBalance","decimalsToAppear","formatNumber","number","minPrecision","maxPrecision","Latinise","latin_map","τ","Τ","latinise","input","x","getPoolApr","stakingTokenPrice","rewardTokenPrice","tokenPerBlock","totalRewardPricePerYear","BLOCKS_PER_YEAR","totalStakingTokenInPool","isNaN","isFinite","getFarmApr","poolLiquidityUsd","CAKE_PER_YEAR","useSousUnstake","enableEmergencyWithdraw","handleUnstake","unstake","sousEmergencyUnstake","sousUnstake","updateUserPendingReward","onUnstake","useUnstake","useHarvest","farmPid","onReward","harvest","useSousHarvest","handleHarvest","soushHarvestBnb","soushHarvest","config","EXPONENTIAL_AT","DECIMAL_PLACES","CAKE_PER_BLOCK","BASE_URL","BASE_EXCHANGE_URL","BASE_ADD_LIQUIDITY_URL","DEFAULT_TOKEN_DECIMAL","DEFAULT_GAS_LIMIT","DEFAULT_GAS_PRICE","TESTNET_CHAIN_ID","Balance","isDisabled","unit","prefix","previousValue","start","end","duration","separator","FlexLayout","Outer","Box","background","colors","gradients","bubblegum","Inner","PageHeader","StyledInput","Input","inputFocusedBorder","InputWrapper","SearchInput","onChangeCallback","onChange","placeholder","toggled","setToggled","searchText","setSearchText","debouncedOnChange","useMemo","debounce","e","target","onBlur","DropDownHeader","shadows","inset","DropDownListContainer","zIndices","dropdown","DropDownContainer","isOpen","css","inputSecondary","tooltip","boxShadow","DropDownList","ul","ListItem","li","DropDownIcon","ArrowDropDownIcon","text","Select","containerRef","dropdownRef","setIsOpen","selectedOptionIndex","setSelectedOptionIndex","height","containerSize","setContainerSize","toggling","offsetWidth","offsetHeight","ref","label","option","selectedIndex","useDelayedUnmount","isMounted","delayTime","shouldRender","setShouldRender","timeoutId","setTimeout","clearTimeout","abi","multi","getMulticallContract","itf","Interface","calldata","call","toLowerCase","encodeFunctionData","methods","aggregate","blockNumber","returnData","res","i","decodeFunctionResult","multicallv2","tryAggregate","requireSuccess","result","useERC20","getBep20Contract","getMasterChefContract","getSousChefContract","pools","stakingToken","earningToken","contractAddress","poolCategory","PoolCategory","CORE","sortOrder","isFinished","RPC_URL","getRpcUrl","httpProvider","providers","HttpProvider","timeout","archivedHttpProvider","web3WithArchivedNodeProvider","ethers","constants","MaxUint256","send","from","deposit","gas","on","transactionHash","withdraw","emergencyWithdraw","AddressZero","cakeBnbFarm","Token","usePollFarmsData","includeArchive","farmToFetch","usePollCoreFarmData","usePollBlockNumber","eth","getBlockNumber","useFarms","useSelector","useFarmFromPid","f","useFarmUser","useBusdPriceFromPid","useLpTokenPrice","lpSymbol","farmTokenPriceInUsd","lpTokenPrice","overallValueOfAllTokensInFarm","totalLpTokens","useFetchPublicPoolsData","fetchPoolsPublicDataAsync","fetchPoolsPublicData","fetchPoolsStakingLimitsAsync","usePools","fetchPoolsUserDataAsync","useBlock","GAS_SETTINGS","default","reallyfast","getDefaultSettings","gasPrice","getStorageKey","getSettings","settingsFromLs","getContract","amountInGwei","_web3","Contract","bep20Abi","getErc721Contract","erc721Abi","getLpContract","lpTokenAbi","getCakeContract","cakeAbi","masterChef","MultiCallAbi","poolsConfig","sousChef","getSousChefV2Contract","sousChefV2","getReferralContract","referralsAbi","store","configureStore","devTools","reducer","blockReducer","farmsReducer","poolsReducer","useDispatch","useTheme","StyledThemeContext","primary","secondary","success","warning","backgroundDisabled","textDisabled","textSubtle","menu","topBarColor","leftBarColor","radii","card","toggle","checkedHandleColor","uncheckedHandleColor","bnb","projectLink","usdt","btcb","busd","code","languageList","values","ViewMode","_binanceChainListener","resolve","defineProperty","this","bsc","useEagerConnect","connectorId","isConnectorBinanceChain","isBinanceChainDefined","Reflect","then","GlobalStyle","createGlobalStyle","icon","items","Menu","currentLang","langs","setLang","links","SuspenseWithChunkError","hasError","isJsChunkLoadError","isCssChunkLoadError","isChunkLoadError","isRecoveringFromChunkError","history","nextState","replaceState","location","reload","fallback","Component","ToastListener","onRemove","Wrapper","PageLoader","EasterEgg","show","setShow","startFalling","useKonamiCheatCode","onAnimationEnd","memo","getAprData","earningTokenPrice","isHighValueToken","Math","round","getPoolBlockInfo","startBlock","endBlock","shouldShowBlockCountdown","blocksUntilStart","max","blocksRemaining","hasPoolStarted","blocksToDisplay","AprRow","tooltipContent","useTooltip","placement","targetRef","tooltipVisible","earningsPercentageToDisplay","apyModalLink","useModal","onPresentApyModal","alignItems","scale","PromotedGradient","keyframes","StyledCard","Card","step","isPromoted","primaryBright","isDesktop","StyledCardInner","ExpandedWrapper","Flex","ExpandedFooter","poolContractAddress","imageSrc","isMetaMaskInScope","isMetaMask","flexDirection","small","external","p","ExpandableButtonWrapper","Footer","isExpanded","setIsExpanded","manualTooltipText","expanded","CardHeader","StyledCardHeader","stakingTokenSymbol","isStaking","poolImageSrc","isCakePool","src","alt","ApprovalAction","isLoading","stakingTokenContract","endIcon","spin","disabled","StyledLink","Link","NotEnoughTokensModal","headerBackground","cardHeader","as","PercentageButton","mx","StakeModal","isBnbPool","isRemovingStake","pendingTx","setPendingTx","stakeAmount","setStakeAmount","hasReachedStakeLimit","setHasReachedStakedLimit","percent","setPercent","getCalculatedStakingLimit","usdValueStaked","fullDecimalStakeAmount","plus","handleChangePercent","sliderPercent","percentageOfStakingMax","multipliedBy","amountToStake","handleConfirmClick","minWidth","onUserInput","convertedInput","percentage","floor","min","currencyValue","isWarning","onValueChanged","valueLabel","StakeAction","isStaked","stakedTokenBalance","stakedTokenDollarBalance","onPresentTokenRequired","onPresentStake","onPresentUnstake","reachStakingLimit","gte","CollectModal","formattedBalance","fullBalance","earningsDollarValue","isCompoundPool","shouldCompound","setShouldCompound","tooltipOffset","handleHarvestConfirm","activeIndex","onItemClick","pb","HarvestActions","earningTokenBalance","earningTokenDollarBalance","hasEarnings","onPresentCollect","display","InlineText","Text","CardActions","BINANCE","needsApproval","StakeActions","PoolCard","accountHasStakedBalance","ribbon","variantColor","CardFooter","CardButton","IconButton","TableButton","ToggleView","viewMode","onToggle","handleToggle","mode","CARD","TABLE","StyledMenu","ButtonMenu","PoolTabButtons","stakedOnly","setStakedOnly","hasStakeInFinishedPools","setViewMode","useRouteMatch","url","isExact","useMatchBreakpoints","isXs","isSm","viewModeToggle","liveOrFinishedSwitch","to","borderRadius","paddingLeft","paddingRight","backgroundColor","stakedOnlySwitch","checked","flexWrap","gap","ButtonText","xs","HelpButton","px","BaseCell","CellContent","StyledCell","NameCell","iconFile","isManualCakePool","showStakedTag","subtitle","showSubtitle","role","EarningsCell","labelText","asset","event","stopPropagation","Apr","showIcon","openRoiModal","md","AprCell","TotalStakedCell","totalStakedBalance","EndsInCell","renderBlocks","flex","showLoading","ArrowIcon","ChevronDownIcon","isFullLayout","ActionContainer","xl","ActionTitles","ActionContent","HarvestAction","displayBalance","actionTitle","pt","alignSelf","lineHeight","marginTop","IconButtonWrapper","Staked","isNotVaultAndHasStake","expandAnimation","collapseAnimation","StyledActionPanel","InfoSection","ActionPanel","breakpoints","isMd","totalStakedTargetRef","totalStakedTooltip","totalStakedTooltipVisible","tagTargetRef","tagTooltip","tagTooltipVisible","maxStakeRow","blocksRow","aprRow","totalStakedRow","Harvest","Stake","StyledRow","PoolRow","isLg","isXl","setExpanded","shouldRenderActionPanel","ExpandActionCell","StyledTable","StyledTableBorder","cardBorder","ScrollButtonContainer","PoolsTable","tableWrapperEl","scrollIntoView","behavior","CardLayout","PoolControls","SearchSortContainer","ControlStretch","Title","Heading","attrs","backgroundAlt","Description","Pools","substring","log","numberOfPoolsVisible","setNumberOfPoolsVisible","observerIsSet","setObserverIsSet","loadMoreRef","searchQuery","setSearchQuery","sortOption","setSortOption","partition","finishedPools","openPools","stakedOnlyFinishedPools","isGreaterThan","IntersectionObserver","entries","isIntersecting","poolsCurrentlyVisible","rootMargin","threshold","observe","showFinishedPools","poolsToShow","chosenPools","lowercaseQuery","poolsToSort","orderBy","sortPools","slice","cardLayout","tableLayout","position","top","right","getRandom","xRnd","yRnd","RollingDice","cubeRef","tabIndex","evt","preventDefault","transform","webkitTransform","onKeyPress","noop","className","StyledFlex","Outcome","HistoryRow","bets","outcome","renderSide","side","filled","size","createElement","GiDiceSixFacesOne","GiInvertedDice1","GiDiceSixFacesTwo","GiInvertedDice2","GiDiceSixFacesThree","GiInvertedDice3","GiDiceSixFacesFour","GiInvertedDice4","GiDiceSixFacesFive","GiInvertedDice5","GiDiceSixFacesSix","GiInvertedDice6","Table","HistoryTable","records","tableRef","record","LeftLogo","Image","RightLogo","GradientPanel","InfoLayout","CardsLayout","PickUpLayout","BaseLayout","WhitePanel","Label","Value","SideWrapper","Side","fakeRecords","j","push","ceil","Dice","sideToggles","setSideToggles","handleSideClick","toggles","zIndex","getWinningChance","createBrowserHistory","basename","Home","lazy","Farms","NotFound","Referrals","App","Global","exact","component","iterations","Providers","ReactDOM","render","StrictMode","getElementById","fetchPoolsBlockLimits","poolsWithEnd","callsStartBlock","poolConfig","callsEndBlock","sousChefABI","starts","ends","cakePoolConfig","fetchPoolsTotalStaking","nonBnbPools","bnbPool","callsNonBnbPools","callsBnbPools","cakeABI","nonBnbPoolsTotalStaked","wbnbABI","bnbPoolsTotalStaked","fetchPoolStakingLimit","sousContract","poolLimitPerUser","fetchPoolsStakingLimits","poolsWithStakingLimit","validPools","stakingLimitPromises","validPool","stakingLimits","accum","bnbPools","nonMasterPools","fetchPoolsAllowance","allowances","acc","fetchUserBalances","tokenBalancesRaw","tokenBalances","getBalance","bnbBalance","bnbBalances","fetchUserStakeBalances","userInfo","stakedBalances","masterPoolAmount","0","fetchUserPendingRewards","pendingRewards","pendingHSW","getState","blockLimits","totalStakings","liveData","blockLimit","entry","totalStaking","isPoolEndBlockExceeded","Number","isPoolFinished","stakingTokenAddress","earningTokenAddress","setPoolsPublicData","stakingLimitData","stakingTokenBalances","setPoolsUserData","updatePoolsUserData","field","PoolsSlice","livePoolsData","livePoolData","userPoolData","toastContext","PoolIds"],"mappings":"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","file":"static/js/main.40754705.chunk.js","sourcesContent":["import BigNumber from 'bignumber.js'\r\nimport masterchefABI from 'config/abi/masterchef.json'\r\nimport erc20 from 'config/abi/erc20.json'\r\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\r\nimport { BIG_TEN, BIG_ZERO } from 'utils/bigNumber'\r\nimport multicall from 'utils/multicall'\r\nimport { Farm, SerializedBigNumber } from '../types'\r\n\r\ntype PublicFarmData = {\r\n  tokenAmountMc: SerializedBigNumber\r\n  quoteTokenAmountMc: SerializedBigNumber\r\n  tokenAmountTotal: SerializedBigNumber\r\n  quoteTokenAmountTotal: SerializedBigNumber\r\n  lpTotalInQuoteToken: SerializedBigNumber\r\n  lpTotalSupply: SerializedBigNumber\r\n  tokenPriceVsQuote: SerializedBigNumber\r\n  poolWeight: SerializedBigNumber\r\n  multiplier: string\r\n}\r\n\r\nconst fetchFarm = async (farm: Farm): Promise<PublicFarmData> => {\r\n  const { pid, lpAddresses, token, quoteToken } = farm\r\n  const lpAddress = getAddress(lpAddresses)\r\n  const calls = [\r\n    // Balance of token in the LP contract\r\n    {\r\n      address: getAddress(token.address),\r\n      name: 'balanceOf',\r\n      params: [lpAddress],\r\n    },\r\n    // Balance of quote token on LP contract\r\n    {\r\n      address: getAddress(quoteToken.address),\r\n      name: 'balanceOf',\r\n      params: [lpAddress],\r\n    },\r\n    // Balance of LP tokens in the master chef contract\r\n    {\r\n      address: lpAddress,\r\n      name: 'balanceOf',\r\n      params: [getMasterChefAddress()],\r\n    },\r\n    // Total supply of LP tokens\r\n    {\r\n      address: lpAddress,\r\n      name: 'totalSupply',\r\n    },\r\n    // Token decimals\r\n    {\r\n      address: getAddress(token.address),\r\n      name: 'decimals',\r\n    },\r\n    // Quote token decimals\r\n    {\r\n      address: getAddress(quoteToken.address),\r\n      name: 'decimals',\r\n    },\r\n  ]\r\n\r\n  const [tokenBalanceLP, quoteTokenBalanceLP, lpTokenBalanceMC, lpTotalSupply, tokenDecimals, quoteTokenDecimals] =\r\n    await multicall(erc20, calls)\r\n\r\n  // Ratio in % of LP tokens that are staked in the MC, vs the total number in circulation\r\n  const lpTokenRatio = new BigNumber(lpTokenBalanceMC).div(new BigNumber(lpTotalSupply))\r\n\r\n  // Raw amount of token in the LP, including those not staked\r\n  const tokenAmountTotal = new BigNumber(tokenBalanceLP).div(BIG_TEN.pow(tokenDecimals))\r\n  const quoteTokenAmountTotal = new BigNumber(quoteTokenBalanceLP).div(BIG_TEN.pow(quoteTokenDecimals))\r\n\r\n  // Amount of token in the LP that are staked in the MC (i.e amount of token * lp ratio)\r\n  const tokenAmountMc = tokenAmountTotal.times(lpTokenRatio)\r\n  const quoteTokenAmountMc = quoteTokenAmountTotal.times(lpTokenRatio)\r\n\r\n  // Total staked in LP, in quote token value\r\n  const lpTotalInQuoteToken = quoteTokenAmountMc.times(new BigNumber(2))\r\n\r\n  // Only make masterchef calls if farm has pid\r\n  const [info, totalAllocPoint] =\r\n    pid || pid === 0\r\n      ? await multicall(masterchefABI, [\r\n          {\r\n            address: getMasterChefAddress(),\r\n            name: 'poolInfo',\r\n            params: [pid],\r\n          },\r\n          {\r\n            address: getMasterChefAddress(),\r\n            name: 'totalAllocPoint',\r\n          },\r\n        ])\r\n      : [null, null]\r\n\r\n  const allocPoint = info ? new BigNumber(info.allocPoint?._hex) : BIG_ZERO\r\n  const poolWeight = totalAllocPoint ? allocPoint.div(new BigNumber(totalAllocPoint)) : BIG_ZERO\r\n\r\n  return {\r\n    tokenAmountMc: tokenAmountMc.toJSON(),\r\n    quoteTokenAmountMc: quoteTokenAmountMc.toJSON(),\r\n    tokenAmountTotal: tokenAmountTotal.toJSON(),\r\n    quoteTokenAmountTotal: quoteTokenAmountTotal.toJSON(),\r\n    lpTotalSupply: new BigNumber(lpTotalSupply).toJSON(),\r\n    lpTotalInQuoteToken: lpTotalInQuoteToken.toJSON(),\r\n    tokenPriceVsQuote: quoteTokenAmountTotal.div(tokenAmountTotal).toJSON(),\r\n    poolWeight: poolWeight.toJSON(),\r\n    multiplier: `${allocPoint.div(100).toString()}X`,\r\n  }\r\n}\r\n\r\nexport default fetchFarm\r\n","import { Farm } from 'state/types'\r\nimport fetchPublicFarmData from './fetchPublicFarmData'\r\n\r\nconst fetchFarm = async (farm: Farm): Promise<Farm> => {\r\n  const farmPublicData = await fetchPublicFarmData(farm)\r\n\r\n  return { ...farm, ...farmPublicData }\r\n}\r\n\r\nexport default fetchFarm\r\n","import { FarmConfig } from 'config/constants/types'\r\nimport fetchFarm from './fetchFarm'\r\n\r\nconst fetchFarms = async (farmsToFetch: FarmConfig[]) => {\r\n  const data = await Promise.all(\r\n    farmsToFetch.map(async (farmConfig) => {\r\n      const farm = await fetchFarm(farmConfig)\r\n      return farm\r\n    }),\r\n  )\r\n  return data\r\n}\r\n\r\nexport default fetchFarms\r\n","import BigNumber from 'bignumber.js'\r\nimport { BIG_ONE, BIG_ZERO } from 'utils/bigNumber'\r\nimport { filterFarmsByQuoteToken } from 'utils/farmsPriceHelpers'\r\nimport { Farm } from 'state/types'\r\n\r\nconst getFarmFromTokenSymbol = (farms: Farm[], tokenSymbol: string, preferredQuoteTokens?: string[]): Farm => {\r\n  const farmsWithTokenSymbol = farms.filter((farm) => farm.token.symbol === tokenSymbol)\r\n  const filteredFarm = filterFarmsByQuoteToken(farmsWithTokenSymbol, preferredQuoteTokens)\r\n  return filteredFarm\r\n}\r\n\r\nconst getFarmBaseTokenPrice = (farm: Farm, quoteTokenFarm: Farm, bnbPriceBusd: BigNumber): BigNumber => {\r\n  const hasTokenPriceVsQuote = Boolean(farm.tokenPriceVsQuote)\r\n\r\n  if (farm.quoteToken.symbol === 'BUSD') {\r\n    return hasTokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : BIG_ZERO\r\n  }\r\n\r\n  if (farm.quoteToken.symbol === 'wBNB') {\r\n    return hasTokenPriceVsQuote ? bnbPriceBusd.times(farm.tokenPriceVsQuote) : BIG_ZERO\r\n  }\r\n\r\n  // We can only calculate profits without a quoteTokenFarm for BUSD/BNB farms\r\n  if (!quoteTokenFarm) {\r\n    return BIG_ZERO\r\n  }\r\n\r\n  // Possible alternative farm quoteTokens:\r\n  // UST (i.e. MIR-UST), pBTC (i.e. PNT-pBTC), BTCB (i.e. bBADGER-BTCB), ETH (i.e. SUSHI-ETH)\r\n  // If the farm's quote token isn't BUSD or wBNB, we then use the quote token, of the original farm's quote token\r\n  // i.e. for farm PNT - pBTC we use the pBTC farm's quote token - BNB, (pBTC - BNB)\r\n  // from the BNB - pBTC price, we can calculate the PNT - BUSD price\r\n  if (quoteTokenFarm.quoteToken.symbol === 'wBNB') {\r\n    const quoteTokenInBusd = bnbPriceBusd.times(quoteTokenFarm.tokenPriceVsQuote)\r\n    return hasTokenPriceVsQuote && quoteTokenInBusd\r\n      ? new BigNumber(farm.tokenPriceVsQuote).times(quoteTokenInBusd)\r\n      : BIG_ZERO\r\n  }\r\n\r\n  if (quoteTokenFarm.quoteToken.symbol === 'BUSD') {\r\n    const quoteTokenInBusd = quoteTokenFarm.tokenPriceVsQuote\r\n    return hasTokenPriceVsQuote && quoteTokenInBusd\r\n      ? new BigNumber(farm.tokenPriceVsQuote).times(quoteTokenInBusd)\r\n      : BIG_ZERO\r\n  }\r\n\r\n  // Catch in case token does not have immediate or once-removed BUSD/wBNB quoteToken\r\n  return BIG_ZERO\r\n}\r\n\r\nconst getFarmQuoteTokenPrice = (farm: Farm, quoteTokenFarm: Farm, bnbPriceBusd: BigNumber): BigNumber => {\r\n  if (farm.quoteToken.symbol === 'BUSD') {\r\n    return BIG_ONE\r\n  }\r\n\r\n  if (farm.quoteToken.symbol === 'wBNB') {\r\n    return bnbPriceBusd\r\n  }\r\n\r\n  if (!quoteTokenFarm) {\r\n    return BIG_ZERO\r\n  }\r\n\r\n  if (quoteTokenFarm.quoteToken.symbol === 'wBNB') {\r\n    return quoteTokenFarm.tokenPriceVsQuote ? bnbPriceBusd.times(quoteTokenFarm.tokenPriceVsQuote) : BIG_ZERO\r\n  }\r\n\r\n  if (quoteTokenFarm.quoteToken.symbol === 'BUSD') {\r\n    return quoteTokenFarm.tokenPriceVsQuote ? new BigNumber(quoteTokenFarm.tokenPriceVsQuote) : BIG_ZERO\r\n  }\r\n\r\n  return BIG_ZERO\r\n}\r\n\r\nconst fetchFarmsPrices = async (farms) => {\r\n  const bnbBusdFarm = farms.find((farm: Farm) => farm.pid === 252)\r\n  const bnbPriceBusd = bnbBusdFarm.tokenPriceVsQuote ? BIG_ONE.div(bnbBusdFarm.tokenPriceVsQuote) : BIG_ZERO\r\n\r\n  const farmsWithPrices = farms.map((farm) => {\r\n    const quoteTokenFarm = getFarmFromTokenSymbol(farms, farm.quoteToken.symbol)\r\n    const baseTokenPrice = getFarmBaseTokenPrice(farm, quoteTokenFarm, bnbPriceBusd)\r\n    const quoteTokenPrice = getFarmQuoteTokenPrice(farm, quoteTokenFarm, bnbPriceBusd)\r\n    const token = { ...farm.token, busdPrice: baseTokenPrice.toJSON() }\r\n    const quoteToken = { ...farm.quoteToken, busdPrice: quoteTokenPrice.toJSON() }\r\n    return { ...farm, token, quoteToken }\r\n  })\r\n\r\n  return farmsWithPrices\r\n}\r\n\r\nexport default fetchFarmsPrices\r\n","import BigNumber from 'bignumber.js'\r\nimport erc20ABI from 'config/abi/erc20.json'\r\nimport masterchefABI from 'config/abi/masterchef.json'\r\nimport multicall from 'utils/multicall'\r\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\r\nimport { FarmConfig } from 'config/constants/types'\r\n\r\nexport const fetchFarmUserAllowances = async (account: string, farmsToFetch: FarmConfig[]) => {\r\n  const masterChefAddress = getMasterChefAddress()\r\n\r\n  const calls = farmsToFetch.map((farm) => {\r\n    const lpContractAddress = getAddress(farm.lpAddresses)\r\n    return { address: lpContractAddress, name: 'allowance', params: [account, masterChefAddress] }\r\n  })\r\n\r\n  const rawLpAllowances = await multicall(erc20ABI, calls)\r\n  const parsedLpAllowances = rawLpAllowances.map((lpBalance) => {\r\n    return new BigNumber(lpBalance).toJSON()\r\n  })\r\n  return parsedLpAllowances\r\n}\r\n\r\nexport const fetchFarmUserTokenBalances = async (account: string, farmsToFetch: FarmConfig[]) => {\r\n  const calls = farmsToFetch.map((farm) => {\r\n    const lpContractAddress = getAddress(farm.lpAddresses)\r\n    return {\r\n      address: lpContractAddress,\r\n      name: 'balanceOf',\r\n      params: [account],\r\n    }\r\n  })\r\n\r\n  const rawTokenBalances = await multicall(erc20ABI, calls)\r\n  const parsedTokenBalances = rawTokenBalances.map((tokenBalance) => {\r\n    return new BigNumber(tokenBalance).toJSON()\r\n  })\r\n  return parsedTokenBalances\r\n}\r\n\r\nexport const fetchFarmUserStakedBalances = async (account: string, farmsToFetch: FarmConfig[]) => {\r\n  const masterChefAddress = getMasterChefAddress()\r\n\r\n  const calls = farmsToFetch.map((farm) => {\r\n    return {\r\n      address: masterChefAddress,\r\n      name: 'userInfo',\r\n      params: [farm.pid, account],\r\n    }\r\n  })\r\n\r\n  const rawStakedBalances = await multicall(masterchefABI, calls)\r\n  const parsedStakedBalances = rawStakedBalances.map((stakedBalance) => {\r\n    return new BigNumber(stakedBalance[0]._hex).toJSON()\r\n  })\r\n  return parsedStakedBalances\r\n}\r\n\r\nexport const fetchFarmUserEarnings = async (account: string, farmsToFetch: FarmConfig[]) => {\r\n  const masterChefAddress = getMasterChefAddress()\r\n\r\n  const calls = farmsToFetch.map((farm) => {\r\n    return {\r\n      address: masterChefAddress,\r\n      name: 'pendingHSW',\r\n      params: [farm.pid, account],\r\n    }\r\n  })\r\n\r\n  const rawEarnings = await multicall(masterchefABI, calls)\r\n  const parsedEarnings = rawEarnings.map((earnings) => {\r\n    return new BigNumber(earnings).toJSON()\r\n  })\r\n  return parsedEarnings\r\n}\r\n","/* eslint-disable no-param-reassign */\r\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\r\nimport farmsConfig from 'config/constants/farms'\r\nimport isArchivedPid from 'utils/farmHelpers'\r\nimport fetchFarms from './fetchFarms'\r\nimport fetchFarmsPrices from './fetchFarmsPrices'\r\nimport {\r\n  fetchFarmUserEarnings,\r\n  fetchFarmUserAllowances,\r\n  fetchFarmUserTokenBalances,\r\n  fetchFarmUserStakedBalances,\r\n} from './fetchFarmUser'\r\nimport { FarmsState, Farm } from '../types'\r\n\r\nconst noAccountFarmConfig = farmsConfig.map((farm) => ({\r\n  ...farm,\r\n  userData: {\r\n    allowance: '0',\r\n    tokenBalance: '0',\r\n    stakedBalance: '0',\r\n    earnings: '0',\r\n  },\r\n}))\r\n\r\nconst initialState: FarmsState = { data: noAccountFarmConfig, loadArchivedFarmsData: false, userDataLoaded: false }\r\n\r\nexport const nonArchivedFarms = farmsConfig.filter(({ pid }) => !isArchivedPid(pid))\r\n\r\n// Async thunks\r\nexport const fetchFarmsPublicDataAsync = createAsyncThunk<Farm[], number[]>(\r\n  'farms/fetchFarmsPublicDataAsync',\r\n  async (pids) => {\r\n    const farmsToFetch = farmsConfig.filter((farmConfig) => pids.includes(farmConfig.pid))\r\n\r\n    const farms = await fetchFarms(farmsToFetch)\r\n    const farmsWithPrices = await fetchFarmsPrices(farms)\r\n\r\n    // Filter out price helper LP config farms\r\n    const farmsWithoutHelperLps = farmsWithPrices.filter((farm: Farm) => {\r\n      return farm.pid || farm.pid === 0\r\n    })\r\n\r\n    return farmsWithoutHelperLps\r\n  },\r\n)\r\n\r\ninterface FarmUserDataResponse {\r\n  pid: number\r\n  allowance: string\r\n  tokenBalance: string\r\n  stakedBalance: string\r\n  earnings: string\r\n}\r\n\r\nexport const fetchFarmUserDataAsync = createAsyncThunk<FarmUserDataResponse[], { account: string; pids: number[] }>(\r\n  'farms/fetchFarmUserDataAsync',\r\n  async ({ account, pids }) => {\r\n    const farmsToFetch = farmsConfig.filter((farmConfig) => pids.includes(farmConfig.pid))\r\n    const userFarmAllowances = await fetchFarmUserAllowances(account, farmsToFetch)\r\n    const userFarmTokenBalances = await fetchFarmUserTokenBalances(account, farmsToFetch)\r\n    const userStakedBalances = await fetchFarmUserStakedBalances(account, farmsToFetch)\r\n    const userFarmEarnings = await fetchFarmUserEarnings(account, farmsToFetch)\r\n\r\n    return userFarmAllowances.map((farmAllowance, index) => {\r\n      return {\r\n        pid: farmsToFetch[index].pid,\r\n        allowance: userFarmAllowances[index],\r\n        tokenBalance: userFarmTokenBalances[index],\r\n        stakedBalance: userStakedBalances[index],\r\n        earnings: userFarmEarnings[index],\r\n      }\r\n    })\r\n  },\r\n)\r\n\r\nexport const farmsSlice = createSlice({\r\n  name: 'Farms',\r\n  initialState,\r\n  reducers: {\r\n    setLoadArchivedFarmsData: (state, action) => {\r\n      const loadArchivedFarmsData = action.payload\r\n      state.loadArchivedFarmsData = loadArchivedFarmsData\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    // Update farms with live data\r\n    builder.addCase(fetchFarmsPublicDataAsync.fulfilled, (state, action) => {\r\n      state.data = state.data.map((farm) => {\r\n        const liveFarmData = action.payload.find((farmData) => farmData.pid === farm.pid)\r\n        return { ...farm, ...liveFarmData }\r\n      })\r\n    })\r\n\r\n    // Update farms with user data\r\n    builder.addCase(fetchFarmUserDataAsync.fulfilled, (state, action) => {\r\n      action.payload.forEach((userDataEl) => {\r\n        const { pid } = userDataEl\r\n        const index = state.data.findIndex((farm) => farm.pid === pid)\r\n        state.data[index] = { ...state.data[index], userData: userDataEl }\r\n      })\r\n      state.userDataLoaded = true\r\n    })\r\n  },\r\n})\r\n\r\n// Actions\r\nexport const { setLoadArchivedFarmsData } = farmsSlice.actions\r\n\r\nexport default farmsSlice.reducer\r\n","import { ContextApi } from 'contexts/Localization/types'\r\nimport { PageMeta } from './types'\r\n\r\nexport const DEFAULT_META: PageMeta = {\r\n  title: 'PancakeSwap',\r\n  description:\r\n    'The most popular AMM on BSC by user count! Earn CAKE through yield farming or win it in the Lottery, then stake it in Syrup Pools to earn more tokens! Initial Farm Offerings (new token launch model pioneered by PancakeSwap), NFTs, and more, on a platform you can trust.',\r\n  image: 'https://pancakeswap.finance/images/hero.png',\r\n}\r\n\r\nexport const getCustomMeta = (path: string, t: ContextApi['t']): PageMeta => {\r\n  switch (path) {\r\n    case '/':\r\n      return {\r\n        title: `${t('Home')} | ${t('PancakeSwap')}`,\r\n      }\r\n    case '/competition':\r\n      return {\r\n        title: `${t('Trading Battle')} | ${t('PancakeSwap')}`,\r\n      }\r\n    case '/prediction':\r\n      return {\r\n        title: `${t('Prediction')} | ${t('PancakeSwap')}`,\r\n      }\r\n    case '/farms':\r\n      return {\r\n        title: `${t('Farms')} | ${t('PancakeSwap')}`,\r\n      }\r\n    case '/pools':\r\n      return {\r\n        title: `${t('Pools')} | ${t('PancakeSwap')}`,\r\n      }\r\n    case '/lottery':\r\n      return {\r\n        title: `${t('Lottery')} | ${t('PancakeSwap')}`,\r\n      }\r\n    case '/collectibles':\r\n      return {\r\n        title: `${t('Collectibles')} | ${t('PancakeSwap')}`,\r\n      }\r\n    case '/ifo':\r\n      return {\r\n        title: `${t('Initial Farm Offering')} | ${t('PancakeSwap')}`,\r\n      }\r\n    case '/teams':\r\n      return {\r\n        title: `${t('Leaderboard')} | ${t('PancakeSwap')}`,\r\n      }\r\n    case '/profile/tasks':\r\n      return {\r\n        title: `${t('Task Center')} | ${t('PancakeSwap')}`,\r\n      }\r\n    case '/profile':\r\n      return {\r\n        title: `${t('Your Profile')} | ${t('PancakeSwap')}`,\r\n      }\r\n    default:\r\n      return null\r\n  }\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { Helmet } from 'react-helmet-async'\r\nimport { useLocation } from 'react-router'\r\nimport { DEFAULT_META, getCustomMeta } from 'config/constants/meta'\r\nimport { usePriceCakeBusd } from 'state/hooks'\r\nimport Container from './Container'\r\n\r\nconst StyledPage = styled(Container)`\r\n  min-height: calc(100vh - 64px);\r\n  padding-top: 16px;\r\n  padding-bottom: 16px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    padding-top: 24px;\r\n    padding-bottom: 24px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    padding-top: 32px;\r\n    padding-bottom: 32px;\r\n  }\r\n`\r\n\r\nconst PageMeta = () => {\r\n  const { t } = useTranslation()\r\n  const { pathname } = useLocation()\r\n  const cakePriceUsd = usePriceCakeBusd()\r\n  const cakePriceUsdDisplay = cakePriceUsd.gt(0)\r\n    ? `$${cakePriceUsd.toNumber().toLocaleString(undefined, {\r\n        minimumFractionDigits: 3,\r\n        maximumFractionDigits: 3,\r\n      })}`\r\n    : ''\r\n\r\n  const pageMeta = getCustomMeta(pathname, t) || {}\r\n  const { title, description, image } = { ...DEFAULT_META, ...pageMeta }\r\n  const pageTitle = cakePriceUsdDisplay ? [title, cakePriceUsdDisplay].join(' - ') : title\r\n\r\n  return (\r\n    <Helmet>\r\n      <title>{pageTitle}</title>\r\n      <meta property=\"og:title\" content={title} />\r\n      <meta property=\"og:description\" content={description} />\r\n      <meta property=\"og:image\" content={image} />\r\n    </Helmet>\r\n  )\r\n}\r\n\r\nconst Page: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({ children, ...props }) => {\r\n  return (\r\n    <>\r\n      <PageMeta />\r\n      <StyledPage {...props}>{children}</StyledPage>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Page\r\n","import { BASE_BSC_SCAN_URL } from 'config'\r\n\r\nexport const getBscScanAddressUrl = (address: string) => {\r\n  return `${BASE_BSC_SCAN_URL}/address/${address}`\r\n}\r\n\r\nexport const getBscScanTransactionUrl = (transactionHash: string) => {\r\n  return `${BASE_BSC_SCAN_URL}/tx/${transactionHash}`\r\n}\r\n\r\nexport const getBscScanBlockNumberUrl = (block: string | number) => {\r\n  return `${BASE_BSC_SCAN_URL}/block/${block}`\r\n}\r\n\r\nexport const getBscScanBlockCountdownUrl = (block: string | number) => {\r\n  return `${BASE_BSC_SCAN_URL}/block/countdown/${block}`\r\n}\r\n","import { useCallback } from 'react'\r\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\r\nimport { NoBscProviderError } from '@binance-chain/bsc-connector'\r\nimport {\r\n  NoEthereumProviderError,\r\n  UserRejectedRequestError as UserRejectedRequestErrorInjected,\r\n} from '@web3-react/injected-connector'\r\nimport {\r\n  UserRejectedRequestError as UserRejectedRequestErrorWalletConnect,\r\n  WalletConnectConnector,\r\n} from '@web3-react/walletconnect-connector'\r\nimport { ConnectorNames, connectorLocalStorageKey } from '@heswap/uikit'\r\nimport { connectorsByName } from 'utils/web3React'\r\nimport { setupNetwork } from 'utils/wallet'\r\nimport useToast from 'hooks/useToast'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nconst useAuth = () => {\r\n  const { t } = useTranslation()\r\n  const { activate, deactivate } = useWeb3React()\r\n  const { toastError } = useToast()\r\n\r\n  const login = useCallback(\r\n    (connectorID: ConnectorNames) => {\r\n      const connector = connectorsByName[connectorID]\r\n      if (connector) {\r\n        activate(connector, async (error: Error) => {\r\n          if (error instanceof UnsupportedChainIdError) {\r\n            const hasSetup = await setupNetwork()\r\n            if (hasSetup) {\r\n              activate(connector)\r\n            }\r\n          } else {\r\n            window.localStorage.removeItem(connectorLocalStorageKey)\r\n            if (error instanceof NoEthereumProviderError || error instanceof NoBscProviderError) {\r\n              toastError(t('Provider Error'), t('No provider was found'))\r\n            } else if (\r\n              error instanceof UserRejectedRequestErrorInjected ||\r\n              error instanceof UserRejectedRequestErrorWalletConnect\r\n            ) {\r\n              if (connector instanceof WalletConnectConnector) {\r\n                const walletConnector = connector as WalletConnectConnector\r\n                walletConnector.walletConnectProvider = null\r\n              }\r\n              toastError(t('Authorization Error'), t('Please authorize to access your account'))\r\n            } else {\r\n              toastError(error.name, error.message)\r\n            }\r\n          }\r\n        })\r\n      } else {\r\n        toastError(t('Unable to find connector'), t('The connector config is wrong'))\r\n      }\r\n    },\r\n    [t, activate, toastError],\r\n  )\r\n\r\n  const logout = useCallback(() => {\r\n    deactivate()\r\n    // This localStorage key is set by @web3-react/walletconnect-connector\r\n    if (window.localStorage.getItem('walletconnect')) {\r\n      connectorsByName.walletconnect.close()\r\n      connectorsByName.walletconnect.walletConnectProvider = null\r\n    }\r\n  }, [deactivate])\r\n\r\n  return { login, logout }\r\n}\r\n\r\nexport default useAuth\r\n","import random from 'lodash/random'\r\n\r\n// Array of available nodes to connect to\r\nexport const nodes = [process.env.REACT_APP_NODE_1, process.env.REACT_APP_NODE_2, process.env.REACT_APP_NODE_3]\r\n\r\nconst getNodeUrl = () => {\r\n  const randomIndex = random(0, nodes.length - 1)\r\n  return nodes[randomIndex]\r\n}\r\n\r\nexport default getNodeUrl\r\n","// Set of helper functions to facilitate wallet setup\r\n\r\nimport { BASE_BSC_SCAN_URL } from 'config'\r\nimport { nodes } from './getRpcUrl'\r\n\r\n/**\r\n * Prompt the user to add BSC as a network on Metamask, or switch to BSC if the wallet is on a different network\r\n * @returns {boolean} true if the setup succeeded, false otherwise\r\n */\r\nexport const setupNetwork = async () => {\r\n  const provider = (window as WindowChain).ethereum\r\n  if (provider) {\r\n    const chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\r\n    try {\r\n      await provider.request({\r\n        method: 'wallet_addEthereumChain',\r\n        params: [\r\n          {\r\n            chainId: `0x${chainId.toString(16)}`,\r\n            chainName: 'Binance Smart Chain Mainnet',\r\n            nativeCurrency: {\r\n              name: 'BNB',\r\n              symbol: 'bnb',\r\n              decimals: 18,\r\n            },\r\n            rpcUrls: nodes,\r\n            blockExplorerUrls: [`${BASE_BSC_SCAN_URL}/`],\r\n          },\r\n        ],\r\n      })\r\n      return true\r\n    } catch (error) {\r\n      console.error(error)\r\n      return false\r\n    }\r\n  } else {\r\n    console.error(\"Can't setup the BSC network on metamask because window.ethereum is undefined\")\r\n    return false\r\n  }\r\n}\r\n\r\n/**\r\n * Prompt the user to add a custom token to metamask\r\n * @param tokenAddress\r\n * @param tokenSymbol\r\n * @param tokenDecimals\r\n * @param tokenImage\r\n * @returns {boolean} true if the token has been added, false otherwise\r\n */\r\nexport const registerToken = async (\r\n  tokenAddress: string,\r\n  tokenSymbol: string,\r\n  tokenDecimals: number,\r\n  tokenImage: string,\r\n) => {\r\n  const tokenAdded = await (window as WindowChain).ethereum.request({\r\n    method: 'wallet_watchAsset',\r\n    params: {\r\n      type: 'ERC20',\r\n      options: {\r\n        address: tokenAddress,\r\n        symbol: tokenSymbol,\r\n        decimals: tokenDecimals,\r\n        image: tokenImage,\r\n      },\r\n    },\r\n  })\r\n\r\n  return tokenAdded\r\n}\r\n","import styled from 'styled-components'\r\n\r\nconst Container = styled.div`\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  max-width: 1200px;\r\n  padding-left: 16px;\r\n  padding-right: 16px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    padding-left: 24px;\r\n    padding-right: 24px;\r\n  }\r\n`\r\n\r\nexport default Container\r\n","import { InjectedConnector } from '@web3-react/injected-connector'\r\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\r\nimport { BscConnector } from '@binance-chain/bsc-connector'\r\nimport { ConnectorNames } from '@heswap/uikit'\r\nimport Web3 from 'web3'\r\nimport getNodeUrl from './getRpcUrl'\r\n\r\nconst POLLING_INTERVAL = 12000\r\nconst rpcUrl = getNodeUrl()\r\nconst chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\r\n\r\nconst injected = new InjectedConnector({ supportedChainIds: [chainId] })\r\n\r\nconst walletconnect = new WalletConnectConnector({\r\n  rpc: { [chainId]: rpcUrl },\r\n  bridge: 'https://bridge.walletconnect.org/',\r\n  qrcode: true,\r\n  pollingInterval: POLLING_INTERVAL,\r\n})\r\n\r\nconst bscConnector = new BscConnector({ supportedChainIds: [chainId] })\r\n\r\nexport const connectorsByName: { [connectorName in ConnectorNames]: any } = {\r\n  [ConnectorNames.Injected]: injected,\r\n  [ConnectorNames.WalletConnect]: walletconnect,\r\n  [ConnectorNames.BSC]: bscConnector,\r\n}\r\n\r\nexport const getLibrary = (provider): Web3 => {\r\n  return provider\r\n}\r\n","import { useEffect, useState, useRef } from 'react'\r\nimport Web3 from 'web3'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport web3NoAccount from 'utils/web3'\r\n\r\n/**\r\n * Provides a web3 instance using the provider provided by useWallet\r\n * with a fallback of an httpProver\r\n * Recreate web3 instance only if the provider change\r\n */\r\nconst useWeb3 = () => {\r\n  const { library } = useWeb3React()\r\n  const refEth = useRef(library)\r\n  const [web3, setweb3] = useState(library ? new Web3(library) : web3NoAccount)\r\n\r\n  useEffect(() => {\r\n    if (library !== refEth.current) {\r\n      setweb3(library ? new Web3(library) : web3NoAccount)\r\n      refEth.current = library\r\n    }\r\n  }, [library])\r\n\r\n  return web3\r\n}\r\n\r\nexport default useWeb3\r\n","export { default as farmsConfig } from './farms'\r\nexport { default as poolsConfig } from './pools'\r\n","import { useContext } from 'react'\r\nimport { RefreshContext } from 'contexts/RefreshContext'\r\n\r\nconst useRefresh = () => {\r\n  const { fast, slow } = useContext(RefreshContext)\r\n  return { fastRefresh: fast, slowRefresh: slow }\r\n}\r\n\r\nexport default useRefresh\r\n","import BigNumber from 'bignumber.js'\r\nimport { Farm, Pool } from 'state/types'\r\nimport { getAddress } from 'utils/addressHelpers'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\n\r\ntype UserData =\r\n  | Pool['userData']\r\n  | {\r\n      allowance: number | string\r\n      stakingTokenBalance: number | string\r\n      stakedBalance: number | string\r\n      pendingReward: number | string\r\n    }\r\n\r\nexport const transformUserData = (userData: UserData) => {\r\n  return {\r\n    allowance: userData ? new BigNumber(userData.allowance) : BIG_ZERO,\r\n    stakingTokenBalance: userData ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO,\r\n    stakedBalance: userData ? new BigNumber(userData.stakedBalance) : BIG_ZERO,\r\n    pendingReward: userData ? new BigNumber(userData.pendingReward) : BIG_ZERO,\r\n  }\r\n}\r\n\r\nexport const transformPool = (pool: Pool): Pool => {\r\n  const { totalStaked, stakingLimit, userData, ...rest } = pool\r\n\r\n  return {\r\n    ...rest,\r\n    userData: transformUserData(userData),\r\n    totalStaked: new BigNumber(totalStaked),\r\n    stakingLimit: new BigNumber(stakingLimit),\r\n  } as Pool\r\n}\r\n\r\nexport const getTokenPricesFromFarm = (farms: Farm[]) => {\r\n  return farms.reduce((prices, farm) => {\r\n    const quoteTokenAddress = getAddress(farm.quoteToken.address).toLocaleLowerCase()\r\n    const tokenAddress = getAddress(farm.token.address).toLocaleLowerCase()\r\n    /* eslint-disable no-param-reassign */\r\n    if (!prices[quoteTokenAddress]) {\r\n      prices[quoteTokenAddress] = new BigNumber(farm.quoteToken.busdPrice).toNumber()\r\n    }\r\n    if (!prices[tokenAddress]) {\r\n      prices[tokenAddress] = new BigNumber(farm.token.busdPrice).toNumber()\r\n    }\r\n    /* eslint-enable no-param-reassign */\r\n    return prices\r\n  }, {})\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button, useWalletModal } from '@heswap/uikit'\r\nimport useAuth from 'hooks/useAuth'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nconst StyledButton = styled(Button)`\r\n  border-radius: 8px;\r\n`\r\n\r\nconst UnlockButton = (props) => {\r\n  const { t } = useTranslation()\r\n  const { login, logout } = useAuth()\r\n  const { onPresentConnectModal } = useWalletModal(login, logout)\r\n\r\n  return (\r\n    <StyledButton onClick={onPresentConnectModal} {...props}>\r\n      {t('Unlock Wallet')}\r\n    </StyledButton>\r\n  )\r\n}\r\n\r\nexport default UnlockButton\r\n","import { EN } from 'config/localization/languages'\r\n\r\nconst publicUrl = process.env.PUBLIC_URL\r\n\r\nexport const LS_KEY = 'pancakeswap_language'\r\n\r\nexport const fetchLocale = async (locale) => {\r\n  const response = await fetch(`${publicUrl}/locales/${locale}.json`)\r\n  const data = await response.json()\r\n  return data\r\n}\r\n\r\nexport const getLanguageCodeFromLS = () => {\r\n  try {\r\n    const codeFromStorage = localStorage.getItem(LS_KEY)\r\n\r\n    return codeFromStorage || EN.locale\r\n  } catch {\r\n    return EN.locale\r\n  }\r\n}\r\n","import React, { createContext, useCallback, useEffect, useState } from 'react'\r\nimport { Language } from '@heswap/uikit'\r\nimport { EN, languages } from 'config/localization/languages'\r\nimport translations from 'config/localization/translations.json'\r\nimport { ContextApi, ContextData, ProviderState } from './types'\r\nimport { LS_KEY, fetchLocale, getLanguageCodeFromLS } from './helpers'\r\n\r\nconst initialState: ProviderState = {\r\n  isFetching: true,\r\n  currentLanguage: EN,\r\n}\r\n\r\n// Export the translations directly\r\nexport const languageMap = new Map<Language['locale'], Record<string, string>>()\r\nlanguageMap.set(EN.locale, translations)\r\n\r\nexport const LanguageContext = createContext<ContextApi>(undefined)\r\n\r\nexport const LanguageProvider: React.FC = ({ children }) => {\r\n  const [state, setState] = useState<ProviderState>(() => {\r\n    const codeFromStorage = getLanguageCodeFromLS()\r\n\r\n    return {\r\n      ...initialState,\r\n      currentLanguage: languages[codeFromStorage],\r\n    }\r\n  })\r\n  const { currentLanguage } = state\r\n\r\n  useEffect(() => {\r\n    const fetchInitialLocales = async () => {\r\n      const codeFromStorage = getLanguageCodeFromLS()\r\n\r\n      if (codeFromStorage !== EN.locale) {\r\n        const enLocale = languageMap.get(EN.locale)\r\n        const currentLocale = await fetchLocale(codeFromStorage)\r\n        languageMap.set(codeFromStorage, { ...enLocale, ...currentLocale })\r\n      }\r\n\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        isFetching: false,\r\n      }))\r\n    }\r\n\r\n    fetchInitialLocales()\r\n  }, [setState])\r\n\r\n  const setLanguage = async (language: Language) => {\r\n    if (!languageMap.has(language.locale)) {\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        isFetching: true,\r\n      }))\r\n\r\n      const locale = await fetchLocale(language.locale)\r\n      const enLocale = languageMap.get(EN.locale)\r\n\r\n      // Merge the EN locale to ensure that any locale fetched has all the keys\r\n      languageMap.set(language.locale, { ...enLocale, ...locale })\r\n      localStorage.setItem(LS_KEY, language.locale)\r\n\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        isFetching: false,\r\n        currentLanguage: language,\r\n      }))\r\n    } else {\r\n      localStorage.setItem(LS_KEY, language.locale)\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        isFetching: false,\r\n        currentLanguage: language,\r\n      }))\r\n    }\r\n  }\r\n\r\n  const translate = useCallback(\r\n    (key: string, data?: ContextData) => {\r\n      const translationSet = languageMap.has(currentLanguage.locale)\r\n        ? languageMap.get(currentLanguage.locale)\r\n        : languageMap.get(EN.locale)\r\n      const translatedText = translationSet[key] || key\r\n\r\n      // Check the existence of at least one combination of %%, separated by 1 or more non space characters\r\n      const includesVariable = translatedText.match(/%\\S+?%/gm)\r\n\r\n      if (includesVariable && data) {\r\n        let interpolatedText = translatedText\r\n        Object.keys(data).forEach((dataKey) => {\r\n          const templateKey = new RegExp(`%${dataKey}%`, 'g')\r\n          interpolatedText = interpolatedText.replace(templateKey, data[dataKey].toString())\r\n        })\r\n\r\n        return interpolatedText\r\n      }\r\n\r\n      return translatedText\r\n    },\r\n    [currentLanguage],\r\n  )\r\n\r\n  return <LanguageContext.Provider value={{ ...state, setLanguage, t: translate }}>{children}</LanguageContext.Provider>\r\n}\r\n","import { useContext } from 'react'\r\nimport { LanguageContext } from './Provider'\r\n\r\nconst useTranslation = () => {\r\n  const languageContext = useContext(LanguageContext)\r\n\r\n  if (languageContext === undefined) {\r\n    throw new Error('Language context is undefined')\r\n  }\r\n\r\n  return languageContext\r\n}\r\n\r\nexport default useTranslation\r\n","import React from 'react'\r\nimport { Tag, VerifiedIcon, CommunityIcon, BinanceIcon, RefreshIcon, AutoRenewIcon, TagProps } from '@heswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nconst CoreTag: React.FC<TagProps> = (props) => {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <Tag variant=\"secondary\" outline startIcon={<VerifiedIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\r\n      {t('Core')}\r\n    </Tag>\r\n  )\r\n}\r\n\r\nconst CommunityTag: React.FC<TagProps> = (props) => {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <Tag variant=\"failure\" outline startIcon={<CommunityIcon width=\"18px\" color=\"failure\" mr=\"4px\" />} {...props}>\r\n      {t('Community')}\r\n    </Tag>\r\n  )\r\n}\r\n\r\nconst BinanceTag: React.FC<TagProps> = (props) => {\r\n  return (\r\n    <Tag variant=\"binance\" outline startIcon={<BinanceIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\r\n      Binance\r\n    </Tag>\r\n  )\r\n}\r\n\r\nconst DualTag: React.FC<TagProps> = (props) => {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <Tag variant=\"textSubtle\" outline {...props}>\r\n      {t('Dual')}\r\n    </Tag>\r\n  )\r\n}\r\n\r\nconst ManualPoolTag: React.FC<TagProps> = (props) => {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <Tag variant=\"secondary\" outline startIcon={<RefreshIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\r\n      {t('Manual')}\r\n    </Tag>\r\n  )\r\n}\r\n\r\nconst CompoundingPoolTag: React.FC<TagProps> = (props) => {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <Tag variant=\"success\" outline startIcon={<AutoRenewIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\r\n      {t('Auto')}\r\n    </Tag>\r\n  )\r\n}\r\n\r\nexport { CoreTag, CommunityTag, BinanceTag, DualTag, ManualPoolTag, CompoundingPoolTag }\r\n","import { useCallback, useEffect, useState } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { Contract } from 'web3-eth-contract'\r\nimport { ethers } from 'ethers'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useAppDispatch } from 'state'\r\nimport { updateUserAllowance } from 'state/actions'\r\nimport { approve } from 'utils/callHelpers'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useMasterChef, useCake, useSousChef } from './useContract'\r\nimport useToast from './useToast'\r\nimport useLastUpdated from './useLastUpdated'\r\n\r\n// Approve a Farm\r\nexport const useApprove = (lpContract: Contract) => {\r\n  const { account } = useWeb3React()\r\n  const masterChefContract = useMasterChef()\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      const tx = await approve(lpContract, masterChefContract, account)\r\n      return tx\r\n    } catch (e) {\r\n      return false\r\n    }\r\n  }, [account, lpContract, masterChefContract])\r\n\r\n  return { onApprove: handleApprove }\r\n}\r\n\r\n// Approve a Pool\r\nexport const useSousApprove = (lpContract: Contract, sousId, earningTokenSymbol) => {\r\n  const [requestedApproval, setRequestedApproval] = useState(false)\r\n  const { toastSuccess, toastError } = useToast()\r\n  const { t } = useTranslation()\r\n  const dispatch = useAppDispatch()\r\n  const { account } = useWeb3React()\r\n  const sousChefContract = useSousChef(sousId)\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      setRequestedApproval(true)\r\n      const tx = await approve(lpContract, sousChefContract, account)\r\n      dispatch(updateUserAllowance(sousId, account))\r\n      if (tx) {\r\n        toastSuccess(\r\n          t('Contract Enabled'),\r\n          t('You can now stake in the %symbol% pool!', { symbol: earningTokenSymbol }),\r\n        )\r\n        setRequestedApproval(false)\r\n      } else {\r\n        // user rejected tx or didn't go thru\r\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\r\n        setRequestedApproval(false)\r\n      }\r\n    } catch (e) {\r\n      console.error(e)\r\n      toastError(t('Error'), e?.message)\r\n    }\r\n  }, [account, dispatch, lpContract, sousChefContract, sousId, earningTokenSymbol, t, toastError, toastSuccess])\r\n\r\n  return { handleApprove, requestedApproval }\r\n}\r\n","import { useCallback } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useAppDispatch } from 'state'\r\nimport { updateUserStakedBalance, updateUserBalance } from 'state/actions'\r\nimport { stake, sousStake, sousStakeBnb } from 'utils/callHelpers'\r\nimport { useMasterChef, useSousChef } from './useContract'\r\n\r\nconst useStake = (pid: number) => {\r\n  const { account } = useWeb3React()\r\n  const masterChefContract = useMasterChef()\r\n\r\n  const handleStake = useCallback(\r\n    async (amount: string, referrer: string) => {\r\n      const txHash = await stake(masterChefContract, pid, amount, referrer, account)\r\n      console.info(txHash)\r\n    },\r\n    [account, masterChefContract, pid],\r\n  )\r\n\r\n  return { onStake: handleStake }\r\n}\r\n\r\nexport const useSousStake = (sousId: number, isUsingBnb = false) => {\r\n  const dispatch = useAppDispatch()\r\n  const { account } = useWeb3React()\r\n  const masterChefContract = useMasterChef()\r\n  const sousChefContract = useSousChef(sousId)\r\n\r\n  const handleStake = useCallback(\r\n    async (amount: string, decimals: number, referrer: string) => {\r\n      if (sousId === 0) {\r\n        await stake(masterChefContract, 0, amount, referrer, account)\r\n      } else if (isUsingBnb) {\r\n        await sousStakeBnb(sousChefContract, amount, account)\r\n      } else {\r\n        await sousStake(sousChefContract, amount, decimals, account)\r\n      }\r\n      dispatch(updateUserStakedBalance(sousId, account))\r\n      dispatch(updateUserBalance(sousId, account))\r\n    },\r\n    [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId],\r\n  )\r\n\r\n  return { onStake: handleStake }\r\n}\r\n\r\nexport default useStake\r\n","/* eslint-disable no-param-reassign */\r\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport { BlockState } from './types'\r\n\r\nconst initialState: BlockState = { currentBlock: 0, initialBlock: 0 }\r\n\r\nexport const blockSlice = createSlice({\r\n  name: 'Block',\r\n  initialState,\r\n  reducers: {\r\n    setBlock: (state, action: PayloadAction<number>) => {\r\n      if (state.initialBlock === 0) {\r\n        state.initialBlock = action.payload\r\n      }\r\n\r\n      state.currentBlock = action.payload\r\n    },\r\n  },\r\n})\r\n\r\n// Actions\r\nexport const { setBlock } = blockSlice.actions\r\n\r\nexport default blockSlice.reducer\r\n","export const tokenEarnedPerThousandDollarsCompounding = ({\r\n  numberOfDays,\r\n  farmApr,\r\n  tokenPrice,\r\n  roundingDecimals = 2,\r\n  compoundFrequency = 1,\r\n  performanceFee = 0,\r\n}) => {\r\n  // Everything here is worked out relative to a year, with the asset compounding at the compoundFrequency rate. 1 = once per day\r\n  const timesCompounded = 365 * compoundFrequency\r\n  // We use decimal values rather than % in the math for both APY and the number of days being calculates as a proportion of the year\r\n  let aprAsDecimal = farmApr / 100\r\n\r\n  if (performanceFee) {\r\n    // Reduce the APR by the % performance fee\r\n    const feeRelativeToApr = (farmApr / 100) * performanceFee\r\n    const aprAfterFee = farmApr - feeRelativeToApr\r\n    aprAsDecimal = aprAfterFee / 100\r\n  }\r\n\r\n  const daysAsDecimalOfYear = numberOfDays / 365\r\n  // Calculate the starting TOKEN balance with a dollar balance of $1000.\r\n  const principal = 1000 / tokenPrice\r\n  // This is a translation of the typical mathematical compounding APY formula. Details here: https://www.calculatorsoup.com/calculators/financial/compound-interest-calculator.php\r\n  const finalAmount = principal * (1 + aprAsDecimal / timesCompounded) ** (timesCompounded * daysAsDecimalOfYear)\r\n  // To get the TOKEN amount earned, deduct the amount after compounding (finalAmount) from the starting TOKEN balance (principal)\r\n  const interestEarned = finalAmount - principal\r\n\r\n  return parseFloat(interestEarned.toFixed(roundingDecimals))\r\n}\r\n\r\nexport const getRoi = ({ amountEarned, amountInvested }) => {\r\n  const percentage = (amountEarned / amountInvested) * 100\r\n  return percentage\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Modal, Text, LinkExternal, Flex, Box } from '@heswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { tokenEarnedPerThousandDollarsCompounding, getRoi } from 'utils/compoundApyHelpers'\r\n\r\ninterface ApyCalculatorModalProps {\r\n  onDismiss?: () => void\r\n  tokenPrice: number\r\n  apr: number\r\n  linkLabel: string\r\n  linkHref: string\r\n  earningTokenSymbol?: string\r\n  roundingDecimals?: number\r\n  compoundFrequency?: number\r\n  performanceFee?: number\r\n}\r\n\r\nconst Grid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(3, auto);\r\n  grid-template-rows: repeat(4, auto);\r\n  margin-bottom: 12px;\r\n`\r\n\r\nconst GridItem = styled.div``\r\n\r\nconst GridHeaderItem = styled.div`\r\n  max-width: 180px;\r\n`\r\n\r\nconst ApyCalculatorModal: React.FC<ApyCalculatorModalProps> = ({\r\n  onDismiss,\r\n  tokenPrice,\r\n  apr,\r\n  linkLabel,\r\n  linkHref,\r\n  earningTokenSymbol = 'CAKE',\r\n  roundingDecimals = 2,\r\n  compoundFrequency = 1,\r\n  performanceFee = 0,\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const oneThousandDollarsWorthOfToken = 1000 / tokenPrice\r\n\r\n  const tokenEarnedPerThousand1D = tokenEarnedPerThousandDollarsCompounding({\r\n    numberOfDays: 1,\r\n    farmApr: apr,\r\n    tokenPrice,\r\n    roundingDecimals,\r\n    compoundFrequency,\r\n    performanceFee,\r\n  })\r\n  const tokenEarnedPerThousand7D = tokenEarnedPerThousandDollarsCompounding({\r\n    numberOfDays: 7,\r\n    farmApr: apr,\r\n    tokenPrice,\r\n    roundingDecimals,\r\n    compoundFrequency,\r\n    performanceFee,\r\n  })\r\n  const tokenEarnedPerThousand30D = tokenEarnedPerThousandDollarsCompounding({\r\n    numberOfDays: 30,\r\n    farmApr: apr,\r\n    tokenPrice,\r\n    roundingDecimals,\r\n    compoundFrequency,\r\n    performanceFee,\r\n  })\r\n  const tokenEarnedPerThousand365D = tokenEarnedPerThousandDollarsCompounding({\r\n    numberOfDays: 365,\r\n    farmApr: apr,\r\n    tokenPrice,\r\n    roundingDecimals,\r\n    compoundFrequency,\r\n    performanceFee,\r\n  })\r\n\r\n  return (\r\n    <Modal title={t('ROI')} onDismiss={onDismiss}>\r\n      <Grid>\r\n        <GridHeaderItem>\r\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"12px\">\r\n            {t('Timeframe')}\r\n          </Text>\r\n        </GridHeaderItem>\r\n        <GridHeaderItem>\r\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mr=\"12px\" ml=\"12px\" mb=\"12px\">\r\n            {t('ROI')}\r\n          </Text>\r\n        </GridHeaderItem>\r\n        <GridHeaderItem>\r\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"12px\">\r\n            {t('%symbol% per $1,000', { symbol: earningTokenSymbol })}\r\n          </Text>\r\n        </GridHeaderItem>\r\n        {/* 1 day row */}\r\n        <GridItem>\r\n          <Text>{t('%num%d', { num: 1 })}</Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text mr=\"12px\" ml=\"12px\">\r\n            {getRoi({ amountEarned: tokenEarnedPerThousand1D, amountInvested: oneThousandDollarsWorthOfToken }).toFixed(\r\n              roundingDecimals,\r\n            )}\r\n            %\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text>{tokenEarnedPerThousand1D}</Text>\r\n        </GridItem>\r\n        {/* 7 day row */}\r\n        <GridItem>\r\n          <Text>{t('%num%d', { num: 7 })}</Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text mr=\"12px\" ml=\"12px\">\r\n            {getRoi({ amountEarned: tokenEarnedPerThousand7D, amountInvested: oneThousandDollarsWorthOfToken }).toFixed(\r\n              roundingDecimals,\r\n            )}\r\n            %\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text>{tokenEarnedPerThousand7D}</Text>\r\n        </GridItem>\r\n        {/* 30 day row */}\r\n        <GridItem>\r\n          <Text>{t('%num%d', { num: 30 })}</Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text mr=\"12px\" ml=\"12px\">\r\n            {getRoi({\r\n              amountEarned: tokenEarnedPerThousand30D,\r\n              amountInvested: oneThousandDollarsWorthOfToken,\r\n            }).toFixed(roundingDecimals)}\r\n            %\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text>{tokenEarnedPerThousand30D}</Text>\r\n        </GridItem>\r\n        {/* 365 day / APY row */}\r\n        <GridItem style={{ maxWidth: '180px' }}>\r\n          <Text>{t('365d(APY)')}</Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text mr=\"12px\" ml=\"12px\">\r\n            {getRoi({\r\n              amountEarned: tokenEarnedPerThousand365D,\r\n              amountInvested: oneThousandDollarsWorthOfToken,\r\n            }).toFixed(roundingDecimals)}\r\n            %\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text>{tokenEarnedPerThousand365D}</Text>\r\n        </GridItem>\r\n      </Grid>\r\n      <Flex justifyContent=\"center\">\r\n        <Box mb=\"28px\" maxWidth=\"280px\">\r\n          <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\">\r\n            {t(\r\n              'Calculated based on current rates. Compounding %freq%x daily. Rates are estimates provided for your convenience only, and by no means represent guaranteed returns.',\r\n              { freq: compoundFrequency.toLocaleString() },\r\n            )}\r\n          </Text>\r\n          {performanceFee > 0 && (\r\n            <Text mt=\"14px\" fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\">\r\n              {t('All estimated rates take into account this pool’s %fee%% performance fee', { fee: performanceFee })}\r\n            </Text>\r\n          )}\r\n        </Box>\r\n      </Flex>\r\n      <Flex justifyContent=\"center\">\r\n        <LinkExternal href={linkHref}>{linkLabel}</LinkExternal>\r\n      </Flex>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default ApyCalculatorModal\r\n","import { Farm } from 'state/types'\r\n\r\n/**\r\n * Returns the first farm with a quote token that matches from an array of preferred quote tokens\r\n * @param farms Array of farms\r\n * @param preferredQuoteTokens Array of preferred quote tokens\r\n * @returns A preferred farm, if found - or the first element of the farms array\r\n */\r\nexport const filterFarmsByQuoteToken = (farms: Farm[], preferredQuoteTokens: string[] = ['BUSD', 'wBNB']): Farm => {\r\n  const preferredFarm = farms.find((farm) => {\r\n    return preferredQuoteTokens.some((quoteToken) => {\r\n      return farm.quoteToken.symbol === quoteToken\r\n    })\r\n  })\r\n  return preferredFarm || farms[0]\r\n}\r\n\r\nexport default filterFarmsByQuoteToken\r\n","import React, { useState } from 'react'\r\nimport { ThemeProvider as SCThemeProvider } from 'styled-components'\r\nimport { light, dark } from '@heswap/uikit'\r\n\r\nconst CACHE_KEY = 'IS_DARK'\r\n\r\nconst ThemeContext = React.createContext({ isDark: null, toggleTheme: () => null })\r\n\r\nconst ThemeContextProvider = ({ children }) => {\r\n  const [isDark, setIsDark] = useState(() => {\r\n    const isDarkUserSetting = localStorage.getItem(CACHE_KEY)\r\n    return isDarkUserSetting ? JSON.parse(isDarkUserSetting) : false\r\n  })\r\n\r\n  const toggleTheme = () => {\r\n    setIsDark((prevState) => {\r\n      localStorage.setItem(CACHE_KEY, JSON.stringify(!prevState))\r\n      return !prevState\r\n    })\r\n  }\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{ isDark, toggleTheme }}>\r\n      <SCThemeProvider theme={isDark ? dark : light}>{children}</SCThemeProvider>\r\n    </ThemeContext.Provider>\r\n  )\r\n}\r\n\r\nexport { ThemeContext, ThemeContextProvider }\r\n","export default {\r\n  masterChef: {\r\n    97: '0x2CBa4E01838651EbA879B4eF9f0B2E5Cb81386Be',\r\n    56: '',\r\n  },\r\n  sousChef: {\r\n    97: '',\r\n    56: '',\r\n  },\r\n  multiCall: {\r\n    56: '0xfF6FD90A470Aaa0c1B8A54681746b07AcdFedc9B',\r\n    97: '0x1bDb1D4deE8264301B15f26BA7Df956eD940c28f',\r\n  },\r\n  referrals: {\r\n    56: '',\r\n    97: '0xEeFb6d5163aF2227D837e7192BA227FA81612Dfd',\r\n  },\r\n}\r\n","import { MAINNET_CHAIN_ID } from 'config'\r\nimport addresses from 'config/constants/contracts'\r\nimport tokens from 'config/constants/tokens'\r\nimport { Address } from 'config/constants/types'\r\nimport { getAddress as getEthAddress } from '@ethersproject/address'\r\n\r\nexport const getAddress = (address: Address): string => {\r\n  const chainId = process.env.REACT_APP_CHAIN_ID\r\n  return address[chainId] ? address[chainId] : address[MAINNET_CHAIN_ID]\r\n}\r\n\r\nexport const getCakeAddress = () => {\r\n  return getAddress(tokens.cake.address)\r\n}\r\nexport const getMasterChefAddress = () => {\r\n  return getAddress(addresses.masterChef)\r\n}\r\nexport const getMulticallAddress = () => {\r\n  return getAddress(addresses.multiCall)\r\n}\r\nexport const getWbnbAddress = () => {\r\n  return getAddress(tokens.wbnb.address)\r\n}\r\nexport const getReferralAddress = () => {\r\n  return getAddress(addresses.referrals)\r\n}\r\n\r\nexport const isAddress = (value: any): string | false => {\r\n  try {\r\n    return getEthAddress(value)\r\n  } catch {\r\n    return false\r\n  }\r\n}\r\n","import React, { createContext, ReactNode, useCallback, useState } from 'react'\r\nimport { kebabCase } from 'lodash'\r\nimport { Toast, toastTypes } from '@heswap/uikit'\r\nimport { ToastContextApi } from './types'\r\n\r\nexport const ToastsContext = createContext<ToastContextApi>(undefined)\r\n\r\nexport const ToastsProvider: React.FC = ({ children }) => {\r\n  const [toasts, setToasts] = useState<ToastContextApi['toasts']>([])\r\n\r\n  const toast = useCallback(\r\n    ({ title, description, type }: Omit<Toast, 'id'>) => {\r\n      setToasts((prevToasts) => {\r\n        const id = kebabCase(title)\r\n\r\n        // Remove any existing toasts with the same id\r\n        const currentToasts = prevToasts.filter((prevToast) => prevToast.id !== id)\r\n\r\n        return [\r\n          {\r\n            id,\r\n            title,\r\n            description,\r\n            type,\r\n          },\r\n          ...currentToasts,\r\n        ]\r\n      })\r\n    },\r\n    [setToasts],\r\n  )\r\n\r\n  const toastError = (title: string, description?: ReactNode) => {\r\n    return toast({ title, description, type: toastTypes.DANGER })\r\n  }\r\n  const toastInfo = (title: string, description?: ReactNode) => {\r\n    return toast({ title, description, type: toastTypes.INFO })\r\n  }\r\n  const toastSuccess = (title: string, description?: ReactNode) => {\r\n    return toast({ title, description, type: toastTypes.SUCCESS })\r\n  }\r\n  const toastWarning = (title: string, description?: ReactNode) => {\r\n    return toast({ title, description, type: toastTypes.WARNING })\r\n  }\r\n  const clear = () => setToasts([])\r\n  const remove = (id: string) => {\r\n    setToasts((prevToasts) => prevToasts.filter((prevToast) => prevToast.id !== id))\r\n  }\r\n\r\n  return (\r\n    <ToastsContext.Provider value={{ toasts, clear, remove, toastError, toastInfo, toastSuccess, toastWarning }}>\r\n      {children}\r\n    </ToastsContext.Provider>\r\n  )\r\n}\r\n","import { useEffect, useRef } from 'react'\r\n\r\nconst useTabVisibility = () => {\r\n  const tabVisibleRef = useRef(true)\r\n\r\n  useEffect(() => {\r\n    const onVisibilityChange = () => {\r\n      tabVisibleRef.current = !document.hidden\r\n    }\r\n\r\n    window.addEventListener('visibilitychange', onVisibilityChange)\r\n\r\n    return () => {\r\n      window.removeEventListener('visibilitychange', onVisibilityChange)\r\n    }\r\n  }, [])\r\n\r\n  return { tabVisibleRef }\r\n}\r\n\r\nexport default useTabVisibility\r\n","import React, { useState, useEffect } from 'react'\r\nimport useTabVisibility from 'hooks/useTabVisibility'\r\n\r\nconst FAST_INTERVAL = 10000\r\nconst SLOW_INTERVAL = 60000\r\n\r\nconst RefreshContext = React.createContext({ slow: 0, fast: 0 })\r\n\r\n// This context maintain 2 counters that can be used as a dependencies on other hooks to force a periodic refresh\r\nconst RefreshContextProvider = ({ children }) => {\r\n  const [slow, setSlow] = useState(0)\r\n  const [fast, setFast] = useState(0)\r\n  const { tabVisibleRef } = useTabVisibility()\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(async () => {\r\n      if (tabVisibleRef.current) {\r\n        setFast((prev) => prev + 1)\r\n      }\r\n    }, FAST_INTERVAL)\r\n    return () => clearInterval(interval)\r\n  }, [tabVisibleRef])\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(async () => {\r\n      if (tabVisibleRef.current) {\r\n        setSlow((prev) => prev + 1)\r\n      }\r\n    }, SLOW_INTERVAL)\r\n    return () => clearInterval(interval)\r\n  }, [tabVisibleRef])\r\n\r\n  return <RefreshContext.Provider value={{ slow, fast }}>{children}</RefreshContext.Provider>\r\n}\r\n\r\nexport { RefreshContext, RefreshContextProvider }\r\n","import BigNumber from 'bignumber.js'\r\n\r\nexport const BIG_ZERO = new BigNumber(0)\r\nexport const BIG_ONE = new BigNumber(1)\r\nexport const BIG_NINE = new BigNumber(9)\r\nexport const BIG_TEN = new BigNumber(10)\r\n","import identity from 'lodash/identity'\r\nimport { useEffect, useState } from 'react'\r\n\r\ninterface UsePersistStateOptions {\r\n  localStorageKey: string\r\n  hydrate?: (value: any) => any\r\n  dehydrate?: (value: any) => any\r\n}\r\n\r\nconst defaultOptions = {\r\n  hydrate: identity,\r\n  dehydrate: identity,\r\n}\r\n\r\n/**\r\n * Same as \"useState\" but saves the value to local storage each time it changes\r\n */\r\nconst usePersistState = (initialValue: any, userOptions: UsePersistStateOptions) => {\r\n  const { localStorageKey, hydrate, dehydrate } = { ...defaultOptions, ...userOptions }\r\n  const [value, setValue] = useState(() => {\r\n    try {\r\n      const valueFromLS = localStorage.getItem(localStorageKey)\r\n\r\n      return valueFromLS ? hydrate(JSON.parse(valueFromLS)) : initialValue\r\n    } catch (error) {\r\n      return initialValue\r\n    }\r\n  })\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(localStorageKey, JSON.stringify(dehydrate(value)))\r\n  }, [value, localStorageKey, dehydrate])\r\n\r\n  return [value, setValue]\r\n}\r\n\r\nexport default usePersistState\r\n","import BigNumber from 'bignumber.js'\r\nimport { BIG_TEN } from './bigNumber'\r\n\r\n/**\r\n * Take a formatted amount, e.g. 15 BNB and convert it to full decimal value, e.g. 15000000000000000\r\n */\r\nexport const getDecimalAmount = (amount: BigNumber, decimals = 18) => {\r\n  return new BigNumber(amount).times(BIG_TEN.pow(decimals))\r\n}\r\n\r\nexport const getBalanceAmount = (amount: BigNumber, decimals = 18) => {\r\n  return new BigNumber(amount).dividedBy(BIG_TEN.pow(decimals))\r\n}\r\n\r\n/**\r\n * This function is not really necessary but is used throughout the site.\r\n */\r\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\r\n  return getBalanceAmount(balance, decimals).toNumber()\r\n}\r\n\r\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18, decimalsToAppear?: number) => {\r\n  return getBalanceAmount(balance, decimals).toFixed(decimalsToAppear)\r\n}\r\n\r\nexport const formatNumber = (number: number, minPrecision = 2, maxPrecision = 2) => {\r\n  const options = {\r\n    minimumFractionDigits: minPrecision,\r\n    maximumFractionDigits: maxPrecision,\r\n  }\r\n  return number.toLocaleString(undefined, options)\r\n}\r\n","export const Latinise = {\r\n  latin_map: {\r\n    τ: 't',\r\n    Τ: 'T',\r\n  },\r\n}\r\n\r\nexport const latinise = (input: string) => {\r\n  return input.replace(/[^A-Za-z0-9[\\] ]/g, (x) => Latinise.latin_map[x] || x)\r\n}\r\n","import BigNumber from 'bignumber.js'\r\nimport { BLOCKS_PER_YEAR, CAKE_PER_YEAR } from 'config'\r\n\r\n/**\r\n * Get the APR value in %\r\n * @param stakingTokenPrice Token price in the same quote currency\r\n * @param rewardTokenPrice Token price in the same quote currency\r\n * @param totalStaked Total amount of stakingToken in the pool\r\n * @param tokenPerBlock Amount of new cake allocated to the pool for each new block\r\n * @returns Null if the APR is NaN or infinite.\r\n */\r\nexport const getPoolApr = (\r\n  stakingTokenPrice: number,\r\n  rewardTokenPrice: number,\r\n  totalStaked: number,\r\n  tokenPerBlock: number,\r\n): number => {\r\n  const totalRewardPricePerYear = new BigNumber(rewardTokenPrice).times(tokenPerBlock).times(BLOCKS_PER_YEAR)\r\n  const totalStakingTokenInPool = new BigNumber(stakingTokenPrice).times(totalStaked)\r\n  const apr = totalRewardPricePerYear.div(totalStakingTokenInPool).times(100)\r\n  return apr.isNaN() || !apr.isFinite() ? null : apr.toNumber()\r\n}\r\n\r\n/**\r\n * Get farm APR value in %\r\n * @param poolWeight allocationPoint / totalAllocationPoint\r\n * @param cakePriceUsd Cake price in USD\r\n * @param poolLiquidityUsd Total pool liquidity in USD\r\n * @returns\r\n */\r\nexport const getFarmApr = (poolWeight: BigNumber, cakePriceUsd: BigNumber, poolLiquidityUsd: BigNumber): number => {\r\n  const yearlyCakeRewardAllocation = CAKE_PER_YEAR.times(poolWeight)\r\n  const apr = yearlyCakeRewardAllocation.times(cakePriceUsd).div(poolLiquidityUsd).times(100)\r\n  return apr.isNaN() || !apr.isFinite() ? null : apr.toNumber()\r\n}\r\n\r\nexport default null\r\n","import { useCallback } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useAppDispatch } from 'state'\r\nimport { updateUserStakedBalance, updateUserBalance, updateUserPendingReward } from 'state/actions'\r\nimport { unstake, sousUnstake, sousEmergencyUnstake } from 'utils/callHelpers'\r\nimport { useMasterChef, useSousChef } from './useContract'\r\n\r\nconst useUnstake = (pid: number) => {\r\n  const { account } = useWeb3React()\r\n  const masterChefContract = useMasterChef()\r\n\r\n  const handleUnstake = useCallback(\r\n    async (amount: string) => {\r\n      const txHash = await unstake(masterChefContract, pid, amount, account)\r\n      console.info(txHash)\r\n    },\r\n    [account, masterChefContract, pid],\r\n  )\r\n\r\n  return { onUnstake: handleUnstake }\r\n}\r\n\r\nexport const useSousUnstake = (sousId, enableEmergencyWithdraw = false) => {\r\n  const dispatch = useAppDispatch()\r\n  const { account } = useWeb3React()\r\n  const masterChefContract = useMasterChef()\r\n  const sousChefContract = useSousChef(sousId)\r\n\r\n  const handleUnstake = useCallback(\r\n    async (amount: string, decimals: number) => {\r\n      if (sousId === 0) {\r\n        const txHash = await unstake(masterChefContract, 0, amount, account)\r\n        console.info(txHash)\r\n      } else if (enableEmergencyWithdraw) {\r\n        const txHash = await sousEmergencyUnstake(sousChefContract, account)\r\n        console.info(txHash)\r\n      } else {\r\n        const txHash = await sousUnstake(sousChefContract, amount, decimals, account)\r\n        console.info(txHash)\r\n      }\r\n      dispatch(updateUserStakedBalance(sousId, account))\r\n      dispatch(updateUserBalance(sousId, account))\r\n      dispatch(updateUserPendingReward(sousId, account))\r\n    },\r\n    [account, dispatch, enableEmergencyWithdraw, masterChefContract, sousChefContract, sousId],\r\n  )\r\n\r\n  return { onUnstake: handleUnstake }\r\n}\r\n\r\nexport default useUnstake\r\n","import { useCallback } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useAppDispatch } from 'state'\r\nimport { updateUserBalance, updateUserPendingReward } from 'state/actions'\r\nimport { soushHarvest, soushHarvestBnb, harvest } from 'utils/callHelpers'\r\nimport { useMasterChef, useSousChef } from './useContract'\r\n\r\nexport const useHarvest = (farmPid: number) => {\r\n  const { account } = useWeb3React()\r\n  const masterChefContract = useMasterChef()\r\n\r\n  const handleHarvest = useCallback(async () => {\r\n    const txHash = await harvest(masterChefContract, farmPid, account)\r\n    return txHash\r\n  }, [account, farmPid, masterChefContract])\r\n\r\n  return { onReward: handleHarvest }\r\n}\r\n\r\nexport const useSousHarvest = (sousId, isUsingBnb = false) => {\r\n  const dispatch = useAppDispatch()\r\n  const { account } = useWeb3React()\r\n  const sousChefContract = useSousChef(sousId)\r\n  const masterChefContract = useMasterChef()\r\n\r\n  const handleHarvest = useCallback(async () => {\r\n    if (sousId === 0) {\r\n      await harvest(masterChefContract, 0, account)\r\n    } else if (isUsingBnb) {\r\n      await soushHarvestBnb(sousChefContract, account)\r\n    } else {\r\n      await soushHarvest(sousChefContract, account)\r\n    }\r\n    dispatch(updateUserPendingReward(sousId, account))\r\n    dispatch(updateUserBalance(sousId, account))\r\n  }, [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId])\r\n\r\n  return { onReward: handleHarvest }\r\n}\r\n","const ARCHIVED_FARMS_START_PID = 139\r\nconst ARCHIVED_FARMS_END_PID = 250\r\n\r\nconst isArchivedPid = (pid: number) => pid >= ARCHIVED_FARMS_START_PID && pid <= ARCHIVED_FARMS_END_PID\r\n\r\nexport default isArchivedPid\r\n","import BigNumber from 'bignumber.js/bignumber'\r\nimport { BIG_TEN } from 'utils/bigNumber'\r\n\r\nBigNumber.config({\r\n  EXPONENTIAL_AT: 1000,\r\n  DECIMAL_PLACES: 80,\r\n})\r\n\r\nexport const BSC_BLOCK_TIME = 3\r\n\r\n// CAKE_PER_BLOCK details\r\n// 40 CAKE is minted per block\r\n// 20 CAKE per block is sent to Burn pool (A farm just for burning cake)\r\n// 10 CAKE per block goes to CAKE syrup pool\r\n// 10 CAKE per block goes to Yield farms and lottery\r\n// CAKE_PER_BLOCK in config/index.ts = 40 as we only change the amount sent to the burn pool which is effectively a farm.\r\n// CAKE/Block in src/views/Home/components/CakeStats.tsx = 20 (40 - Amount sent to burn pool)\r\n\r\nexport const CAKE_PER_BLOCK = new BigNumber(40)\r\nexport const BLOCKS_PER_YEAR = new BigNumber((60 / BSC_BLOCK_TIME) * 60 * 24 * 365) // 10512000\r\nexport const CAKE_PER_YEAR = CAKE_PER_BLOCK.times(BLOCKS_PER_YEAR)\r\nexport const BASE_URL = 'https://pancakeswap.finance'\r\nexport const BASE_EXCHANGE_URL = 'https://exchange.pancakeswap.finance'\r\nexport const BASE_ADD_LIQUIDITY_URL = `${BASE_EXCHANGE_URL}/#/add`\r\nexport const BASE_LIQUIDITY_POOL_URL = `${BASE_EXCHANGE_URL}/#/pool`\r\nexport const BASE_BSC_SCAN_URL = 'https://bscscan.com'\r\nexport const DEFAULT_TOKEN_DECIMAL = BIG_TEN.pow(18)\r\nexport const DEFAULT_GAS_LIMIT = 200000\r\nexport const DEFAULT_GAS_PRICE = 5\r\nexport const TESTNET_CHAIN_ID = '97'\r\nexport const MAINNET_CHAIN_ID = '56'\r\n","import React, { useEffect, useRef } from 'react'\r\nimport CountUp from 'react-countup'\r\nimport { Text, TextProps } from '@heswap/uikit'\r\n\r\ninterface BalanceProps extends TextProps {\r\n  value: number\r\n  decimals?: number\r\n  unit?: string\r\n  isDisabled?: boolean\r\n  prefix?: string\r\n  onClick?: (event: React.MouseEvent<HTMLElement>) => void\r\n}\r\n\r\nconst Balance: React.FC<BalanceProps> = ({\r\n  value,\r\n  color = 'text',\r\n  decimals = 3,\r\n  isDisabled = false,\r\n  unit,\r\n  prefix,\r\n  onClick,\r\n  ...props\r\n}) => {\r\n  const previousValue = useRef(0)\r\n\r\n  useEffect(() => {\r\n    previousValue.current = value\r\n  }, [value])\r\n  return (\r\n    <Text color={isDisabled ? 'textDisabled' : color} onClick={onClick} {...props}>\r\n      {prefix && <span>{prefix}</span>}\r\n      <CountUp start={previousValue.current} end={value} decimals={decimals} duration={1} separator=\",\" />\r\n      {unit && <span>{unit}</span>}\r\n    </Text>\r\n  )\r\n}\r\n\r\nexport default Balance\r\n","import styled from 'styled-components'\r\n\r\nconst FlexLayout = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-wrap: wrap;\r\n  & > * {\r\n    min-width: 280px;\r\n    max-width: 31.5%;\r\n    width: 100%;\r\n    margin: 0 8px;\r\n    margin-bottom: 32px;\r\n  }\r\n`\r\n\r\nexport default FlexLayout\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Box } from '@heswap/uikit'\r\nimport Container from './layout/Container'\r\n\r\nconst Outer = styled(Box)<{ background?: string }>`\r\n  background: ${({ theme, background }) => background || theme.colors.gradients.bubblegum};\r\n`\r\n\r\nconst Inner = styled(Container)`\r\n  padding-top: 96px;\r\n  padding-bottom: 32px;\r\n`\r\n\r\nconst PageHeader: React.FC<{ background?: string }> = ({ background, children, ...props }) => (\r\n  <Outer background={background} {...props}>\r\n    <Inner>{children}</Inner>\r\n  </Outer>\r\n)\r\n\r\nexport default PageHeader\r\n","import React, { useState, useMemo } from 'react'\r\nimport { Input } from '@heswap/uikit'\r\nimport styled from 'styled-components'\r\nimport debounce from 'lodash/debounce'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nconst StyledInput = styled(Input)`\r\n  background-color: rgb(2, 17, 39);\r\n  border-radius: 8px;\r\n  border: ${({ theme }) => `1px solid ${theme.colors.inputFocusedBorder}`};\r\n  color: rgb(112, 141, 183);\r\n  font-size: 12px;\r\n  height: 40px;\r\n  outline: none;\r\n  padding: 0 16px;\r\n  width: 100%;\r\n  margin-left: auto;\r\n\r\n  &:focus:not(:disabled) {\r\n    box-shadow: none;\r\n    border: 1px solid rgb(18, 99, 241);\r\n  }\r\n`\r\n\r\nconst InputWrapper = styled.div`\r\n  position: relative;\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    display: block;\r\n  }\r\n`\r\n\r\nconst Container = styled.div<{ toggled: boolean }>``\r\n\r\ninterface Props {\r\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void\r\n  placeholder?: string\r\n}\r\n\r\nconst SearchInput: React.FC<Props> = ({ onChange: onChangeCallback, placeholder = 'Search' }) => {\r\n  const [toggled, setToggled] = useState(false)\r\n  const [searchText, setSearchText] = useState('')\r\n\r\n  const { t } = useTranslation()\r\n\r\n  const debouncedOnChange = useMemo(\r\n    () => debounce((e: React.ChangeEvent<HTMLInputElement>) => onChangeCallback(e), 500),\r\n    [onChangeCallback],\r\n  )\r\n\r\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setSearchText(e.target.value)\r\n    debouncedOnChange(e)\r\n  }\r\n\r\n  return (\r\n    <Container toggled={toggled}>\r\n      <InputWrapper>\r\n        <StyledInput\r\n          value={searchText}\r\n          onChange={onChange}\r\n          placeholder={t(placeholder)}\r\n          onBlur={() => setToggled(false)}\r\n        />\r\n      </InputWrapper>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default SearchInput\r\n","import React, { useState, useRef, useEffect } from 'react'\r\nimport styled, { css } from 'styled-components'\r\nimport { ArrowDropDownIcon, Text } from '@heswap/uikit'\r\n\r\nconst DropDownHeader = styled.div`\r\n  width: 100%;\r\n  height: 40px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 0px 16px;\r\n  box-shadow: ${({ theme }) => theme.shadows.inset};\r\n  border-radius: 8px;\r\n  background: rgb(16, 38, 72);\r\n  transition: border-radius 0.15s;\r\n`\r\n\r\nconst DropDownListContainer = styled.div`\r\n  min-width: 136px;\r\n  height: 0;\r\n  position: absolute;\r\n  overflow: hidden;\r\n  background: ${({ theme }) => theme.colors.input};\r\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\r\n  transition: transform 0.15s, opacity 0.15s;\r\n  transform: scaleY(0);\r\n  transform-origin: top;\r\n  opacity: 0;\r\n  width: 100%;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    min-width: 168px;\r\n  }\r\n`\r\n\r\nconst DropDownContainer = styled.div<{ isOpen: boolean; width: number; height: number }>`\r\n  cursor: pointer;\r\n  width: ${({ width }) => width}px;\r\n  position: relative;\r\n  background: rgb(16, 38, 72);\r\n  border-radius: 8px;\r\n  height: 40px;\r\n  min-width: 96px;\r\n  user-select: none;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    min-width: 168px;\r\n  }\r\n\r\n  ${(props) =>\r\n    props.isOpen &&\r\n    css`\r\n      ${DropDownHeader} {\r\n        border-bottom: 1px solid ${({ theme }) => theme.colors.inputSecondary};\r\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\r\n        border-radius: 8px 8px 0 0;\r\n      }\r\n\r\n      ${DropDownListContainer} {\r\n        height: auto;\r\n        transform: scaleY(1);\r\n        opacity: 1;\r\n        border-radius: 0 0 8px 8px;\r\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\r\n      }\r\n    `}\r\n\r\n  svg {\r\n    position: absolute;\r\n    right: 16px;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n  }\r\n`\r\n\r\nconst DropDownList = styled.ul`\r\n  background-color: rgb(16, 38, 72);\r\n  padding: 0;\r\n  margin: 0;\r\n  box-sizing: border-box;\r\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\r\n`\r\n\r\nconst ListItem = styled.li`\r\n  list-style: none;\r\n  padding: 8px 16px;\r\n  &:hover {\r\n    background: ${({ theme }) => theme.colors.inputSecondary};\r\n  }\r\n`\r\n\r\nconst DropDownIcon = styled(ArrowDropDownIcon)`\r\n  right: 2px !important;\r\n  color: ${({ theme }) => theme.colors.text};\r\n`\r\n\r\nexport interface SelectProps {\r\n  options: OptionProps[]\r\n  onChange?: (option: OptionProps) => void\r\n}\r\n\r\nexport interface OptionProps {\r\n  label: string\r\n  value: any\r\n}\r\n\r\nconst Select: React.FunctionComponent<SelectProps> = ({ options, onChange }) => {\r\n  const containerRef = useRef(null)\r\n  const dropdownRef = useRef(null)\r\n  const [isOpen, setIsOpen] = useState(false)\r\n  const [selectedOptionIndex, setSelectedOptionIndex] = useState(0)\r\n  const [containerSize, setContainerSize] = useState({ width: 0, height: 0 })\r\n\r\n  const toggling = () => setIsOpen(!isOpen)\r\n\r\n  const onOptionClicked = (selectedIndex: number) => () => {\r\n    setSelectedOptionIndex(selectedIndex)\r\n    setIsOpen(false)\r\n\r\n    if (onChange) {\r\n      onChange(options[selectedIndex])\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    setContainerSize({\r\n      width: dropdownRef.current.offsetWidth, // Consider border\r\n      height: dropdownRef.current.offsetHeight,\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <DropDownContainer isOpen={isOpen} ref={containerRef} {...containerSize}>\r\n      {containerSize.width !== 0 && (\r\n        <DropDownHeader onClick={toggling}>\r\n          <Text fontSize=\"14px\">{options[selectedOptionIndex].label}</Text>\r\n        </DropDownHeader>\r\n      )}\r\n      <DropDownIcon onClick={toggling} />\r\n      <DropDownListContainer>\r\n        <DropDownList ref={dropdownRef}>\r\n          {options.map((option, index) =>\r\n            index !== selectedOptionIndex ? (\r\n              <ListItem onClick={onOptionClicked(index)} key={option.label}>\r\n                <Text fontSize=\"14px\">{option.label}</Text>\r\n              </ListItem>\r\n            ) : null,\r\n          )}\r\n        </DropDownList>\r\n      </DropDownListContainer>\r\n    </DropDownContainer>\r\n  )\r\n}\r\n\r\nexport default Select\r\n","import { useState, useEffect } from 'react'\r\n\r\n/**\r\n * Use this hook when you want to animate something when it appears on the screen (e.g. when some prop set to true)\r\n * but when its not on the screen you want it to be fully unmounted and not just hidden or height 0.\r\n * This is especially useful when you have a table of 100s rows and each row has expandable element that appears on click.\r\n * If you just set the expanding animation while keeping inactive elements mounted all those 100 elements will load the DOM,\r\n * and if they all receive updates via props you're looking at 100 DOM updates for hidden elements.\r\n * This hook \"shows\" element immediately when the isMounted is true\r\n * but keeps element mounted for delayTime to let unmounting animation happen, after which you unmount element completely.\r\n * delayTime should be the same as animation time in most cases.\r\n */\r\nconst useDelayedUnmount = (isMounted: boolean, delayTime: number) => {\r\n  const [shouldRender, setShouldRender] = useState(false)\r\n\r\n  useEffect(() => {\r\n    let timeoutId: ReturnType<typeof setTimeout>\r\n    if (isMounted && !shouldRender) {\r\n      setShouldRender(true)\r\n    } else if (!isMounted && shouldRender) {\r\n      timeoutId = setTimeout(() => setShouldRender(false), delayTime)\r\n    }\r\n    return () => clearTimeout(timeoutId)\r\n  }, [isMounted, delayTime, shouldRender])\r\n  return shouldRender\r\n}\r\n\r\nexport default useDelayedUnmount\r\n","import Web3 from 'web3'\r\nimport { Interface } from '@ethersproject/abi'\r\nimport web3NoAccount from 'utils/web3'\r\nimport { getMulticallContract } from 'utils/contractHelpers'\r\n\r\ninterface Call {\r\n  address: string // Address of the contract\r\n  name: string // Function name on the contract (example: balanceOf)\r\n  params?: any[] // Function params\r\n}\r\n\r\ninterface MulticallOptions {\r\n  web3?: Web3\r\n  blockNumber?: number\r\n  requireSuccess?: boolean\r\n}\r\n\r\nconst multicall = async (abi: any[], calls: Call[], options: MulticallOptions = {}) => {\r\n  try {\r\n    const multi = getMulticallContract(options.web3 || web3NoAccount)\r\n    const itf = new Interface(abi)\r\n\r\n    const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\r\n    const { returnData } = await multi.methods.aggregate(calldata).call(undefined, options.blockNumber)\r\n    const res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i].name, call))\r\n\r\n    return res\r\n  } catch (error) {\r\n    throw new Error(error)\r\n  }\r\n}\r\n\r\n/**\r\n * Multicall V2 uses the new \"tryAggregate\" function. It is different in 2 ways\r\n *\r\n * 1. If \"requireSuccess\" is false multicall will not bail out if one of the calls fails\r\n * 2. The return inclues a boolean whether the call was successful e.g. [wasSuccessfull, callResult]\r\n */\r\nexport const multicallv2 = async (abi: any[], calls: Call[], options: MulticallOptions = {}) => {\r\n  const multi = getMulticallContract(options.web3 || web3NoAccount)\r\n  const itf = new Interface(abi)\r\n\r\n  const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\r\n  const returnData = await multi.methods\r\n    .tryAggregate(options.requireSuccess === undefined ? true : options.requireSuccess, calldata)\r\n    .call(undefined, options.blockNumber)\r\n  const res = returnData.map((call, i) => {\r\n    const [result, data] = call\r\n    return {\r\n      result,\r\n      data: itf.decodeFunctionResult(calls[i].name, data),\r\n    }\r\n  })\r\n\r\n  return res\r\n}\r\nexport default multicall\r\n","import { useMemo } from 'react'\r\nimport useWeb3 from 'hooks/useWeb3'\r\nimport {\r\n  getBep20Contract,\r\n  getCakeContract,\r\n  getMasterChefContract,\r\n  getSousChefContract,\r\n  getErc721Contract,\r\n} from 'utils/contractHelpers'\r\n\r\n/**\r\n * Helper hooks to get specific contracts (by ABI)\r\n */\r\n\r\nexport const useERC20 = (address: string) => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getBep20Contract(address, web3), [address, web3])\r\n}\r\n\r\n/**\r\n * @see https://docs.openzeppelin.com/contracts/3.x/api/token/erc721\r\n */\r\nexport const useERC721 = (address: string) => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getErc721Contract(address, web3), [address, web3])\r\n}\r\n\r\nexport const useCake = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getCakeContract(web3), [web3])\r\n}\r\n\r\nexport const useMasterChef = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getMasterChefContract(web3), [web3])\r\n}\r\n\r\nexport const useSousChef = (id) => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getSousChefContract(id, web3), [id, web3])\r\n}\r\n","import tokens from './tokens'\r\nimport { PoolConfig, PoolCategory } from './types'\r\n\r\nconst pools: PoolConfig[] = [\r\n  {\r\n    sousId: 0,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.cake,\r\n    contractAddress: {\r\n      97: '0x2CBa4E01838651EbA879B4eF9f0B2E5Cb81386Be',\r\n      56: '',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '10',\r\n    sortOrder: 1,\r\n    isFinished: false,\r\n  },\r\n]\r\n\r\nexport default pools\r\n","import Web3 from 'web3'\r\nimport { HttpProviderOptions } from 'web3-core-helpers'\r\nimport { ARCHIVED_NODE } from 'config/constants/endpoints'\r\nimport getRpcUrl from 'utils/getRpcUrl'\r\n\r\nconst RPC_URL = getRpcUrl()\r\n\r\nconst httpProvider = new Web3.providers.HttpProvider(RPC_URL, { timeout: 10000 } as HttpProviderOptions)\r\nconst web3NoAccount = new Web3(httpProvider)\r\n\r\nconst archivedHttpProvider = new Web3.providers.HttpProvider(ARCHIVED_NODE, { timeout: 10000 } as HttpProviderOptions)\r\nexport const web3WithArchivedNodeProvider = new Web3(archivedHttpProvider)\r\n\r\nexport default web3NoAccount\r\n","export const GRAPH_API_PROFILE = process.env.REACT_APP_GRAPH_API_PROFILE\r\nexport const GRAPH_API_PREDICTION = process.env.REACT_APP_GRAPH_API_PREDICTION\r\nexport const ARCHIVED_NODE = process.env.REACT_APP_ARCHIVED_NODE\r\n","export { fetchFarmsPublicDataAsync, fetchFarmUserDataAsync } from './farms'\r\nexport {\r\n  fetchPoolsPublicDataAsync,\r\n  fetchPoolsUserDataAsync,\r\n  updateUserAllowance,\r\n  updateUserBalance,\r\n  updateUserPendingReward,\r\n  updateUserStakedBalance,\r\n} from './pools'\r\nexport { setBlock } from './block'\r\n","import BigNumber from 'bignumber.js'\r\nimport { AddressZero } from '@ethersproject/constants'\r\nimport { DEFAULT_GAS_LIMIT, DEFAULT_TOKEN_DECIMAL } from 'config'\r\nimport { ethers } from 'ethers'\r\nimport { Pair, TokenAmount, Token } from '@heswap/heswap-sdk'\r\nimport { getLpContract, getMasterChefContract } from 'utils/contractHelpers'\r\nimport farms from 'config/constants/farms'\r\nimport { getAddress, getCakeAddress } from 'utils/addressHelpers'\r\nimport tokens from 'config/constants/tokens'\r\nimport pools from 'config/constants/pools'\r\nimport sousChefABI from 'config/abi/sousChef.json'\r\nimport { multicallv2 } from './multicall'\r\nimport { web3WithArchivedNodeProvider } from './web3'\r\nimport { getBalanceAmount } from './formatBalance'\r\nimport { BIG_TEN, BIG_ZERO } from './bigNumber'\r\n\r\nexport const approve = async (lpContract, masterChefContract, account) => {\r\n  return lpContract.methods\r\n    .approve(masterChefContract.options.address, ethers.constants.MaxUint256)\r\n    .send({ from: account })\r\n}\r\n\r\nexport const stake = async (masterChefContract, pid, amount, referrer, account) => {\r\n  return masterChefContract.methods\r\n    .deposit(pid, new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString(), referrer)\r\n    .send({ from: account, gas: DEFAULT_GAS_LIMIT })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const sousStake = async (sousChefContract, amount, decimals = 18, account) => {\r\n  return sousChefContract.methods\r\n    .deposit(new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString())\r\n    .send({ from: account, gas: DEFAULT_GAS_LIMIT })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const sousStakeBnb = async (sousChefContract, amount, account) => {\r\n  return sousChefContract.methods\r\n    .deposit()\r\n    .send({\r\n      from: account,\r\n      gas: DEFAULT_GAS_LIMIT,\r\n      value: new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString(),\r\n    })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const unstake = async (masterChefContract, pid, amount, account) => {\r\n  return masterChefContract.methods\r\n    .withdraw(pid, new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString())\r\n    .send({ from: account, gas: DEFAULT_GAS_LIMIT })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const sousUnstake = async (sousChefContract, amount, decimals, account) => {\r\n  return sousChefContract.methods\r\n    .withdraw(new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString())\r\n    .send({ from: account, gas: DEFAULT_GAS_LIMIT })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const sousEmergencyUnstake = async (sousChefContract, account) => {\r\n  return sousChefContract.methods\r\n    .emergencyWithdraw()\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const harvest = async (masterChefContract, pid, account) => {\r\n  if (pid === 0) {\r\n    return masterChefContract.methods\r\n      .withdraw(pid, '0')\r\n      .send({ from: account, gas: DEFAULT_GAS_LIMIT })\r\n      .on('transactionHash', (tx) => {\r\n        return tx.transactionHash\r\n      })\r\n  }\r\n\r\n  return masterChefContract.methods\r\n    .deposit(pid, '0', AddressZero)\r\n    .send({ from: account, gas: DEFAULT_GAS_LIMIT })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const soushHarvest = async (sousChefContract, account) => {\r\n  return sousChefContract.methods\r\n    .deposit('0')\r\n    .send({ from: account, gas: DEFAULT_GAS_LIMIT })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const soushHarvestBnb = async (sousChefContract, account) => {\r\n  return sousChefContract.methods\r\n    .deposit()\r\n    .send({ from: account, gas: DEFAULT_GAS_LIMIT, value: BIG_ZERO })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nconst chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\r\nconst cakeBnbPid = 1\r\nconst cakeBnbFarm = farms.find((farm) => farm.pid === cakeBnbPid)\r\n\r\nconst CAKE_TOKEN = new Token(chainId, getCakeAddress(), 18)\r\nconst WBNB_TOKEN = new Token(chainId, tokens.wbnb.address[chainId], 18)\r\nconst CAKE_BNB_TOKEN = new Token(chainId, getAddress(cakeBnbFarm.lpAddresses), 18)\r\n\r\n/**\r\n * Returns the total CAKE staked in the CAKE-BNB LP\r\n */\r\nexport const getUserStakeInCakeBnbLp = async (account: string, block?: number) => {\r\n  try {\r\n    const masterContract = getMasterChefContract(web3WithArchivedNodeProvider)\r\n    const cakeBnbContract = getLpContract(getAddress(cakeBnbFarm.lpAddresses), web3WithArchivedNodeProvider)\r\n    const totalSupplyLP = await cakeBnbContract.methods.totalSupply().call(undefined, block)\r\n    const reservesLP = await cakeBnbContract.methods.getReserves().call(undefined, block)\r\n    const cakeBnbBalance = await masterContract.methods.userInfo(cakeBnbPid, account).call(undefined, block)\r\n\r\n    const pair: Pair = new Pair(\r\n      new TokenAmount(CAKE_TOKEN, reservesLP._reserve0.toString()),\r\n      new TokenAmount(WBNB_TOKEN, reservesLP._reserve1.toString()),\r\n    )\r\n    const cakeLPBalance = pair.getLiquidityValue(\r\n      pair.token0,\r\n      new TokenAmount(CAKE_BNB_TOKEN, totalSupplyLP.toString()),\r\n      new TokenAmount(CAKE_BNB_TOKEN, cakeBnbBalance.amount.toString()),\r\n      false,\r\n    )\r\n\r\n    return new BigNumber(cakeLPBalance.toSignificant(18))\r\n  } catch (error) {\r\n    console.error(`CAKE-BNB LP error: ${error}`)\r\n    return BIG_ZERO\r\n  }\r\n}\r\n\r\n/**\r\n * Gets the cake staked in the main pool\r\n */\r\nexport const getUserStakeInCakePool = async (account: string, block?: number) => {\r\n  try {\r\n    const masterContract = getMasterChefContract(web3WithArchivedNodeProvider)\r\n    const response = await masterContract.methods.userInfo(0, account).call(undefined, block)\r\n\r\n    return getBalanceAmount(new BigNumber(response.amount))\r\n  } catch (error) {\r\n    console.error('Error getting stake in CAKE pool', error)\r\n    return BIG_ZERO\r\n  }\r\n}\r\n\r\n/**\r\n * Returns total staked value of active pools\r\n */\r\nexport const getUserStakeInPools = async (account: string, block?: number) => {\r\n  try {\r\n    const multicallOptions = {\r\n      web3: web3WithArchivedNodeProvider,\r\n      blockNumber: block,\r\n      requireSuccess: false,\r\n    }\r\n    const eligiblePools = pools\r\n      .filter((pool) => pool.sousId !== 0)\r\n      .filter((pool) => pool.isFinished === false || pool.isFinished === undefined)\r\n\r\n    // Get the ending block is eligible pools\r\n    const endBlockCalls = eligiblePools.map((eligiblePool) => ({\r\n      address: getAddress(eligiblePool.contractAddress),\r\n      name: 'bonusEndBlock',\r\n    }))\r\n    const startBlockCalls = eligiblePools.map((eligiblePool) => ({\r\n      address: getAddress(eligiblePool.contractAddress),\r\n      name: 'startBlock',\r\n    }))\r\n    const endBlocks = await multicallv2(sousChefABI, endBlockCalls, multicallOptions)\r\n    const startBlocks = await multicallv2(sousChefABI, startBlockCalls, multicallOptions)\r\n\r\n    // Filter out pools that have ended\r\n    const activePools = eligiblePools.filter((eligiblePool, index) => {\r\n      const endBlock = new BigNumber(endBlocks[index])\r\n      const startBlock = new BigNumber(startBlocks[index])\r\n\r\n      return startBlock.lte(block) && endBlock.gte(block)\r\n    })\r\n\r\n    // Get the user info of each pool\r\n    const userInfoCalls = activePools.map((activePool) => ({\r\n      address: getAddress(activePool.contractAddress),\r\n      name: 'userInfo',\r\n      params: [account],\r\n    }))\r\n    const userInfos = await multicallv2(sousChefABI, userInfoCalls, multicallOptions)\r\n\r\n    return userInfos.reduce((accum: BigNumber, userInfo) => {\r\n      return accum.plus(new BigNumber(userInfo.amount._hex))\r\n    }, new BigNumber(0))\r\n  } catch (error) {\r\n    console.error('Error fetching staked values:', error)\r\n    return BIG_ZERO\r\n  }\r\n}\r\n","import { useEffect, useMemo } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useSelector } from 'react-redux'\r\nimport { useAppDispatch } from 'state'\r\nimport { orderBy } from 'lodash'\r\nimport { farmsConfig } from 'config/constants'\r\nimport web3NoAccount from 'utils/web3'\r\nimport { getBalanceAmount } from 'utils/formatBalance'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport useRefresh from 'hooks/useRefresh'\r\nimport { filterFarmsByQuoteToken } from 'utils/farmsPriceHelpers'\r\nimport { fetchFarmsPublicDataAsync, fetchPoolsPublicDataAsync, fetchPoolsUserDataAsync, setBlock } from './actions'\r\nimport { State, Farm, Pool, FarmsState } from './types'\r\nimport { transformPool } from './pools/helpers'\r\nimport { fetchPoolsStakingLimitsAsync } from './pools'\r\nimport { fetchFarmUserDataAsync, nonArchivedFarms } from './farms'\r\n\r\nexport const usePollFarmsData = (includeArchive = false) => {\r\n  const dispatch = useAppDispatch()\r\n  const { slowRefresh } = useRefresh()\r\n  const { account } = useWeb3React()\r\n\r\n  useEffect(() => {\r\n    const farmsToFetch = includeArchive ? farmsConfig : nonArchivedFarms\r\n    const pids = farmsToFetch.map((farmToFetch) => farmToFetch.pid)\r\n\r\n    dispatch(fetchFarmsPublicDataAsync(pids))\r\n\r\n    if (account) {\r\n      dispatch(fetchFarmUserDataAsync({ account, pids }))\r\n    }\r\n  }, [includeArchive, dispatch, slowRefresh, account])\r\n}\r\n\r\n/**\r\n * Fetches the \"core\" farm data used globally\r\n * 0 = CAKE-BNB LP\r\n * 1 = BUSD-BNB LP\r\n */\r\nexport const usePollCoreFarmData = () => {\r\n  const dispatch = useAppDispatch()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchFarmsPublicDataAsync([0, 1]))\r\n  }, [dispatch, fastRefresh])\r\n}\r\n\r\nexport const usePollBlockNumber = () => {\r\n  const dispatch = useAppDispatch()\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(async () => {\r\n      const blockNumber = await web3NoAccount.eth.getBlockNumber()\r\n      dispatch(setBlock(blockNumber))\r\n    }, 6000)\r\n\r\n    return () => clearInterval(interval)\r\n  }, [dispatch])\r\n}\r\n\r\n// Farms\r\n\r\nexport const useFarms = (): FarmsState => {\r\n  const farms = useSelector((state: State) => state.farms)\r\n  return farms\r\n}\r\n\r\nexport const useFarmFromPid = (pid): Farm => {\r\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.pid === pid))\r\n  return farm\r\n}\r\n\r\nexport const useFarmFromLpSymbol = (lpSymbol: string): Farm => {\r\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.lpSymbol === lpSymbol))\r\n  return farm\r\n}\r\n\r\nexport const useFarmUser = (pid) => {\r\n  const farm = useFarmFromPid(pid)\r\n\r\n  return {\r\n    allowance: farm.userData ? new BigNumber(farm.userData.allowance) : BIG_ZERO,\r\n    tokenBalance: farm.userData ? new BigNumber(farm.userData.tokenBalance) : BIG_ZERO,\r\n    stakedBalance: farm.userData ? new BigNumber(farm.userData.stakedBalance) : BIG_ZERO,\r\n    earnings: farm.userData ? new BigNumber(farm.userData.earnings) : BIG_ZERO,\r\n  }\r\n}\r\n\r\n// Return a farm for a given token symbol. The farm is filtered based on attempting to return a farm with a quote token from an array of preferred quote tokens\r\nexport const useFarmFromTokenSymbol = (tokenSymbol: string, preferredQuoteTokens?: string[]): Farm => {\r\n  const farms = useSelector((state: State) => state.farms.data.filter((farm) => farm.token.symbol === tokenSymbol))\r\n  const filteredFarm = filterFarmsByQuoteToken(farms, preferredQuoteTokens)\r\n  return filteredFarm\r\n}\r\n\r\n// Return the base token price for a farm, from a given pid\r\nexport const useBusdPriceFromPid = (pid: number): BigNumber => {\r\n  const farm = useFarmFromPid(pid)\r\n  return farm && new BigNumber(farm.token.busdPrice)\r\n}\r\n\r\nexport const useBusdPriceFromToken = (tokenSymbol: string): BigNumber => {\r\n  const tokenFarm = useFarmFromTokenSymbol(tokenSymbol)\r\n  const tokenPrice = useBusdPriceFromPid(tokenFarm?.pid)\r\n  return tokenPrice\r\n}\r\n\r\nexport const useLpTokenPrice = (symbol: string) => {\r\n  const farm = useFarmFromLpSymbol(symbol)\r\n  const farmTokenPriceInUsd = useBusdPriceFromPid(farm.pid)\r\n  let lpTokenPrice = BIG_ZERO\r\n\r\n  if (farm.lpTotalSupply && farm.lpTotalInQuoteToken) {\r\n    // Total value of base token in LP\r\n    const valueOfBaseTokenInFarm = farmTokenPriceInUsd.times(farm.tokenAmountTotal)\r\n    // Double it to get overall value in LP\r\n    const overallValueOfAllTokensInFarm = valueOfBaseTokenInFarm.times(2)\r\n    // Divide total value of all tokens, by the number of LP tokens\r\n    const totalLpTokens = getBalanceAmount(new BigNumber(farm.lpTotalSupply))\r\n    lpTokenPrice = overallValueOfAllTokensInFarm.div(totalLpTokens)\r\n  }\r\n\r\n  return lpTokenPrice\r\n}\r\n\r\n// Pools\r\n\r\nexport const useFetchPublicPoolsData = () => {\r\n  const dispatch = useAppDispatch()\r\n  const { slowRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchPoolsPublicData = async () => {\r\n      const blockNumber = await web3NoAccount.eth.getBlockNumber()\r\n      dispatch(fetchPoolsPublicDataAsync(blockNumber))\r\n    }\r\n\r\n    fetchPoolsPublicData()\r\n    dispatch(fetchPoolsStakingLimitsAsync())\r\n  }, [dispatch, slowRefresh])\r\n}\r\n\r\nexport const usePools = (account): { pools: Pool[]; userDataLoaded: boolean } => {\r\n  const { fastRefresh } = useRefresh()\r\n  const dispatch = useAppDispatch()\r\n  useEffect(() => {\r\n    if (account) {\r\n      dispatch(fetchPoolsUserDataAsync(account))\r\n    }\r\n  }, [account, dispatch, fastRefresh])\r\n\r\n  const { pools, userDataLoaded } = useSelector((state: State) => ({\r\n    pools: state.pools.data,\r\n    userDataLoaded: state.pools.userDataLoaded,\r\n  }))\r\n  return { pools: pools.map(transformPool), userDataLoaded }\r\n}\r\n\r\nexport const usePoolFromPid = (sousId: number): Pool => {\r\n  const pool = useSelector((state: State) => state.pools.data.find((p) => p.sousId === sousId))\r\n  return transformPool(pool)\r\n}\r\n\r\n// Price\r\nexport const usePriceCakeBusd = (): BigNumber => {\r\n  const cakeBnbFarm = useFarmFromPid(1)\r\n  return new BigNumber(cakeBnbFarm.token.busdPrice)\r\n}\r\n\r\n// Block\r\nexport const useBlock = () => {\r\n  return useSelector((state: State) => state.block)\r\n}\r\n\r\nexport const useInitialBlock = () => {\r\n  return useSelector((state: State) => state.block.initialBlock)\r\n}\r\n","import BigNumber from 'bignumber.js'\r\nimport { DEFAULT_GAS_PRICE } from 'config'\r\nimport { getDecimalAmount } from './formatBalance'\r\n\r\nexport interface UserSettings {\r\n  gasPrice: number\r\n}\r\n\r\nexport const VERSION = 1.01\r\n\r\nexport const GAS_SETTINGS = {\r\n  default: DEFAULT_GAS_PRICE,\r\n  fast: 10,\r\n  reallyfast: 15,\r\n}\r\n\r\nexport const getGasPriceInWei = (amountInGwei: number) => {\r\n  return getDecimalAmount(new BigNumber(amountInGwei), 9)\r\n}\r\n\r\nexport const getDefaultSettings = (): UserSettings => ({\r\n  gasPrice: GAS_SETTINGS.default,\r\n})\r\n\r\nexport const getStorageKey = (account: string) => {\r\n  return `pancakeswap_settings_${account}_${VERSION}`\r\n}\r\n\r\nexport const getSettings = (account: string): UserSettings => {\r\n  try {\r\n    const settingsFromLs = localStorage.getItem(getStorageKey(account))\r\n    return settingsFromLs ? JSON.parse(settingsFromLs) : getDefaultSettings()\r\n  } catch (error) {\r\n    return getDefaultSettings()\r\n  }\r\n}\r\n\r\nexport const setSettings = (account: string, newSettings: UserSettings) => {\r\n  localStorage.setItem(getStorageKey(account), JSON.stringify(newSettings))\r\n}\r\n\r\nexport const setSetting = (account: string, newSetting: Partial<UserSettings>) => {\r\n  const currentSettings = getSettings(account)\r\n  setSettings(account, { ...currentSettings, ...newSetting })\r\n}\r\n","import Web3 from 'web3'\r\nimport { AbiItem } from 'web3-utils'\r\nimport web3NoAccount from 'utils/web3'\r\nimport { poolsConfig } from 'config/constants'\r\nimport { PoolCategory } from 'config/constants/types'\r\n\r\n// Addresses\r\nimport {\r\n  getAddress,\r\n  getCakeAddress,\r\n  getMasterChefAddress,\r\n  getMulticallAddress,\r\n  getReferralAddress,\r\n} from 'utils/addressHelpers'\r\n\r\n// ABI\r\nimport bep20Abi from 'config/abi/erc20.json'\r\nimport erc721Abi from 'config/abi/erc721.json'\r\nimport lpTokenAbi from 'config/abi/lpToken.json'\r\nimport cakeAbi from 'config/abi/cake.json'\r\nimport masterChef from 'config/abi/masterchef.json'\r\nimport sousChef from 'config/abi/sousChef.json'\r\nimport sousChefV2 from 'config/abi/sousChefV2.json'\r\nimport MultiCallAbi from 'config/abi/Multicall.json'\r\nimport referralsAbi from 'config/abi/referrals.json'\r\nimport { DEFAULT_GAS_PRICE, TESTNET_CHAIN_ID } from 'config'\r\nimport { getSettings, getGasPriceInWei } from './settings'\r\n\r\nexport const getDefaultGasPrice = () => {\r\n  const chainId = process.env.REACT_APP_CHAIN_ID\r\n  if (chainId === TESTNET_CHAIN_ID) {\r\n    return 10\r\n  }\r\n  return DEFAULT_GAS_PRICE\r\n}\r\n\r\nconst getContract = (abi: any, address: string, web3?: Web3, account?: string) => {\r\n  const _web3 = web3 ?? web3NoAccount\r\n  const gasPrice = account ? getSettings(account).gasPrice : getDefaultGasPrice()\r\n\r\n  return new _web3.eth.Contract(abi as unknown as AbiItem, address, {\r\n    gasPrice: getGasPriceInWei(gasPrice).toString(),\r\n  })\r\n}\r\n\r\nexport const getBep20Contract = (address: string, web3?: Web3) => {\r\n  return getContract(bep20Abi, address, web3)\r\n}\r\nexport const getErc721Contract = (address: string, web3?: Web3) => {\r\n  return getContract(erc721Abi, address, web3)\r\n}\r\nexport const getLpContract = (address: string, web3?: Web3) => {\r\n  return getContract(lpTokenAbi, address, web3)\r\n}\r\nexport const getCakeContract = (web3?: Web3) => {\r\n  return getContract(cakeAbi, getCakeAddress(), web3)\r\n}\r\nexport const getMasterChefContract = (web3?: Web3) => {\r\n  return getContract(masterChef, getMasterChefAddress(), web3)\r\n}\r\nexport const getMulticallContract = (web3?: Web3) => {\r\n  return getContract(MultiCallAbi, getMulticallAddress(), web3)\r\n}\r\nexport const getSousChefContract = (id: number, web3?: Web3) => {\r\n  const config = poolsConfig.find((pool) => pool.sousId === id)\r\n  return getContract(sousChef, getAddress(config.contractAddress), web3)\r\n}\r\nexport const getSousChefV2Contract = (id: number, web3?: Web3) => {\r\n  const config = poolsConfig.find((pool) => pool.sousId === id)\r\n  return getContract(sousChefV2, getAddress(config.contractAddress), web3)\r\n}\r\nexport const getReferralContract = (web3?: Web3) => {\r\n  return getContract(referralsAbi, getReferralAddress(), web3)\r\n}\r\n","import { configureStore } from '@reduxjs/toolkit'\r\nimport { useDispatch } from 'react-redux'\r\nimport farmsReducer from './farms'\r\nimport poolsReducer from './pools'\r\nimport blockReducer from './block'\r\n\r\nconst store = configureStore({\r\n  devTools: process.env.NODE_ENV !== 'production',\r\n  reducer: {\r\n    block: blockReducer,\r\n    farms: farmsReducer,\r\n    pools: poolsReducer,\r\n  },\r\n})\r\n\r\n/**\r\n * @see https://redux-toolkit.js.org/usage/usage-with-typescript#getting-the-dispatch-type\r\n */\r\nexport type AppDispatch = typeof store.dispatch\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\r\n\r\nexport default store\r\n","import { useContext } from 'react'\r\nimport { ThemeContext as StyledThemeContext } from 'styled-components'\r\nimport { ThemeContext } from 'contexts/ThemeContext'\r\n\r\nconst useTheme = () => {\r\n  const { isDark, toggleTheme } = useContext(ThemeContext)\r\n  const theme = useContext(StyledThemeContext)\r\n  theme.colors.primary = 'rgb(18, 99, 241)'\r\n  theme.colors.secondary = 'rgb(249, 59, 93)'\r\n  theme.colors.success = 'rgb(29, 200, 114)'\r\n  theme.colors.warning = 'rgb(255, 219, 28)'\r\n  theme.colors.background = 'rgb(7, 22, 45)'\r\n  theme.colors.backgroundDisabled = 'rgb(200, 212, 230)'\r\n  theme.colors.inputFocusedBorder = 'rgb(28, 50, 84)'\r\n  theme.colors.text = 'rgb(112, 141, 183)'\r\n  theme.colors.textDisabled = 'rgb(112, 141, 183)'\r\n  theme.colors.textSubtle = 'rgb(116, 155, 216)'\r\n  theme.colors.gradients.bubblegum = 'linear-gradient(180deg, #071c3c, #002b6f)'\r\n  theme.menu.topBarColor = 'rgb(7, 22, 45)'\r\n  theme.menu.leftBarColor = 'rgb(16, 38, 72)'\r\n  theme.radii.card = '16px'\r\n  theme.shadows.inset = 'rgb(74 74 104 / 10%) 0px 2px 2px -1px inset'\r\n  theme.toggle.checkedHandleColor = theme.colors.success\r\n  theme.toggle.uncheckedHandleColor = theme.colors.textSubtle\r\n  return { isDark, toggleTheme, theme }\r\n}\r\n\r\nexport default useTheme\r\n","const tokens = {\r\n  bnb: {\r\n    symbol: 'BNB',\r\n    projectLink: 'https://www.binance.com/',\r\n  },\r\n  cake: {\r\n    symbol: 'HSW',\r\n    address: {\r\n      56: '',\r\n      97: '0x10658Fc030f90CFf7608b21eC522A29645D515a3',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://pancakeswap.finance/',\r\n  },\r\n  wbnb: {\r\n    symbol: 'wBNB',\r\n    address: {\r\n      56: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\r\n      97: '0xae13d989dac2f0debff460ac112a837c89baa7cd',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://pancakeswap.finance/',\r\n  },\r\n  usdt: {\r\n    symbol: 'USDT',\r\n    address: {\r\n      56: '0x55d398326f99059fF775485246999027B3197955',\r\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://tether.to/',\r\n  },\r\n  btcb: {\r\n    symbol: 'BTCB',\r\n    address: {\r\n      56: '0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c',\r\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://bitcoin.org/',\r\n  },\r\n  busd: {\r\n    symbol: 'BUSD',\r\n    address: {\r\n      56: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\r\n      97: '0xeD24FC36d5Ee211Ea25A80239Fb8C4Cfd80f12Ee',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://www.paxos.com/busd/',\r\n  },\r\n}\r\n\r\nexport default tokens\r\n","import { Language } from '@heswap/uikit'\r\n\r\nexport const AR: Language = { locale: 'ar-SA', language: 'العربية', code: 'ar' }\r\nexport const BN: Language = { locale: 'bn-BD', language: 'বাংলা', code: 'bn' }\r\nexport const EN: Language = { locale: 'en-US', language: 'English', code: 'en' }\r\nexport const DE: Language = { locale: 'de-DE', language: 'Deutsch', code: 'de' }\r\nexport const EL: Language = { locale: 'el-GR', language: 'Ελληνικά', code: 'el' }\r\nexport const ESES: Language = { locale: 'es-ES', language: 'Español', code: 'es-ES' }\r\nexport const FI: Language = { locale: 'fi-FI', language: 'Suomalainen', code: 'fi' }\r\nexport const FIL: Language = { locale: 'fil-PH', language: 'Filipino', code: 'fil' }\r\nexport const FR: Language = { locale: 'fr-FR', language: 'Français', code: 'fr' }\r\nexport const HI: Language = { locale: 'hi-IN', language: 'हिंदी', code: 'hi' }\r\nexport const HU: Language = { locale: 'hu-HU', language: 'Magyar', code: 'hu' }\r\nexport const ID: Language = { locale: 'id-ID', language: 'Bahasa Indonesia', code: 'id' }\r\nexport const IT: Language = { locale: 'it-IT', language: 'Italiano', code: 'it' }\r\nexport const JA: Language = { locale: 'ja-JP', language: '日本語', code: 'ja' }\r\nexport const KO: Language = { locale: 'ko-KR', language: '한국어', code: 'ko' }\r\nexport const NL: Language = { locale: 'nl-NL', language: 'Nederlands', code: 'nl' }\r\nexport const PL: Language = { locale: 'pl-PL', language: 'Polski', code: 'pl' }\r\nexport const PTBR: Language = { locale: 'pt-BR', language: 'Português (Brazil)', code: 'pt-br' }\r\nexport const PTPT: Language = { locale: 'pt-PT', language: 'Português', code: 'pt-pt' }\r\nexport const RO: Language = { locale: 'ro-RO', language: 'Română', code: 'ro' }\r\nexport const RU: Language = { locale: 'ru-RU', language: 'Русский', code: 'ru' }\r\nexport const SVSE: Language = { locale: 'sv-SE', language: 'Svenska', code: 'sv' }\r\nexport const TA: Language = { locale: 'ta-IN', language: 'தமிழ்', code: 'ta' }\r\nexport const TR: Language = { locale: 'tr-TR', language: 'Türkçe', code: 'tr' }\r\nexport const UK: Language = { locale: 'uk-UA', language: 'Українська', code: 'uk' }\r\nexport const VI: Language = { locale: 'vi-VN', language: 'Tiếng Việt', code: 'vi' }\r\nexport const ZHCN: Language = { locale: 'zh-CN', language: '简体中文', code: 'zh-cn' }\r\nexport const ZHTW: Language = { locale: 'zh-TW', language: '繁體中文', code: 'zh-tw' }\r\n\r\nexport const languages = {\r\n  'ar-SA': AR,\r\n  'bn-BD': BN,\r\n  'en-US': EN,\r\n  'de-DE': DE,\r\n  'el-GR': EL,\r\n  'es-ES': ESES,\r\n  'fi-FI': FI,\r\n  'fil-PH': FIL,\r\n  'fr-FR': FR,\r\n  'hi-IN': HI,\r\n  'hu-HU': HU,\r\n  'id-ID': ID,\r\n  'it-IT': IT,\r\n  'ja-JP': JA,\r\n  'ko-KR': KO,\r\n  'nl-NL': NL,\r\n  'pl-PL': PL,\r\n  'pt-BR': PTBR,\r\n  'pt-PT': PTPT,\r\n  'ro-RO': RO,\r\n  'ru-RU': RU,\r\n  'sv-SE': SVSE,\r\n  'ta-IN': TA,\r\n  'tr-TR': TR,\r\n  'uk-UA': UK,\r\n  'vi-VN': VI,\r\n  'zh-CN': ZHCN,\r\n  'zh-TW': ZHTW,\r\n}\r\n\r\nexport const languageList = Object.values(languages)\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { ListViewIcon, CardViewIcon, IconButton } from '@heswap/uikit'\r\nimport useTheme from 'hooks/useTheme'\r\n\r\nexport enum ViewMode {\r\n  TABLE = 'TABLE',\r\n  CARD = 'CARD',\r\n}\r\n\r\ninterface ToggleViewProps {\r\n  viewMode: ViewMode\r\n  onToggle: (mode: ViewMode) => void\r\n}\r\n\r\nconst Container = styled.div`\r\n  border-radius: 8px;\r\n  background-color: rgb(16, 38, 72);\r\n`\r\n\r\nconst CardButton = styled(IconButton)<{ toggled: boolean }>`\r\n  height: 40px;\r\n  border-radius: 8px;\r\n  background-color: ${({ theme, toggled }) => (toggled ? theme.colors.primary : 'transparent')};\r\n`\r\n\r\nconst TableButton = styled(IconButton)<{ toggled: boolean }>`\r\n  height: 40px;\r\n  border-radius: 8px;\r\n  background-color: ${({ theme, toggled }) => (toggled ? theme.colors.primary : 'transparent')};\r\n`\r\n\r\nconst ToggleView: React.FunctionComponent<ToggleViewProps> = ({ viewMode, onToggle }) => {\r\n  const handleToggle = (mode: ViewMode) => {\r\n    if (viewMode !== mode) {\r\n      onToggle(mode)\r\n    }\r\n  }\r\n  const { theme } = useTheme()\r\n\r\n  return (\r\n    <Container>\r\n      <CardButton\r\n        width=\"40px\"\r\n        toggled={viewMode === ViewMode.CARD}\r\n        id=\"clickFarmCardView\"\r\n        onClick={() => handleToggle(ViewMode.CARD)}\r\n      >\r\n        <CardViewIcon color={theme.colors[viewMode === ViewMode.CARD ? 'backgroundAlt' : 'text']} />\r\n      </CardButton>\r\n      <TableButton\r\n        width=\"40px\"\r\n        toggled={viewMode === ViewMode.TABLE}\r\n        id=\"clickFarmTableView\"\r\n        onClick={() => handleToggle(ViewMode.TABLE)}\r\n      >\r\n        <ListViewIcon color={theme.colors[viewMode === ViewMode.TABLE ? 'backgroundAlt' : 'text']} />\r\n      </TableButton>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default ToggleView\r\n","import { useEffect } from 'react'\r\nimport { connectorLocalStorageKey, ConnectorNames } from '@heswap/uikit'\r\nimport useAuth from 'hooks/useAuth'\r\n\r\nconst _binanceChainListener = async () =>\r\n  new Promise<void>((resolve) =>\r\n    Object.defineProperty(window, 'BinanceChain', {\r\n      get() {\r\n        return this.bsc\r\n      },\r\n      set(bsc) {\r\n        this.bsc = bsc\r\n\r\n        resolve()\r\n      },\r\n    }),\r\n  )\r\n\r\nconst useEagerConnect = () => {\r\n  const { login } = useAuth()\r\n\r\n  useEffect(() => {\r\n    const connectorId = window.localStorage.getItem(connectorLocalStorageKey) as ConnectorNames\r\n\r\n    if (connectorId) {\r\n      const isConnectorBinanceChain = connectorId === ConnectorNames.BSC\r\n      const isBinanceChainDefined = Reflect.has(window, 'BinanceChain')\r\n\r\n      // Currently BSC extension doesn't always inject in time.\r\n      // We must check to see if it exists, and if not, wait for it before proceeding.\r\n      if (isConnectorBinanceChain && !isBinanceChainDefined) {\r\n        _binanceChainListener().then(() => login(connectorId))\r\n\r\n        return\r\n      }\r\n\r\n      login(connectorId)\r\n    }\r\n  }, [login])\r\n}\r\n\r\nexport default useEagerConnect\r\n","import { createGlobalStyle } from 'styled-components'\r\n// eslint-disable-next-line import/no-unresolved\r\nimport { HeswapTheme } from '@heswap/uikit/dist/theme'\r\n\r\ndeclare module 'styled-components' {\r\n  /* eslint-disable @typescript-eslint/no-empty-interface */\r\n  export interface DefaultTheme extends HeswapTheme {}\r\n}\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  * {\r\n    font-family: 'CodecPro', sans-serif;\r\n  }\r\n  body {\r\n    background-color: ${({ theme }) => theme.colors.background};\r\n\r\n    img {\r\n      height: auto;\r\n      max-width: 100%;\r\n    }\r\n  }\r\n`\r\n\r\nexport default GlobalStyle\r\n","import { MenuEntry } from '@heswap/uikit'\r\nimport { ContextApi } from 'contexts/Localization/types'\r\n\r\nconst config: (t: ContextApi['t']) => MenuEntry[] = (t) => [\r\n  {\r\n    label: t('Home'),\r\n    icon: 'HomeIcon',\r\n    href: '/',\r\n  },\r\n  {\r\n    label: t('Trade'),\r\n    icon: 'TradeIcon',\r\n    items: [\r\n      {\r\n        label: t('Exchange'),\r\n        href: 'http://101.36.111.81:3002/#/swap',\r\n      },\r\n      {\r\n        label: t('Liquidity'),\r\n        href: 'http://101.36.111.81:3002/#/pool',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    label: t('Farms'),\r\n    icon: 'FarmIcon',\r\n    href: '/farms',\r\n  },\r\n  {\r\n    label: t('Pools'),\r\n    icon: 'PoolIcon',\r\n    href: '/pools',\r\n  },\r\n  {\r\n    label: t('Referrals'),\r\n    icon: 'GroupsIcon',\r\n    href: '/referrals',\r\n  },\r\n  {\r\n    label: t('Dice'),\r\n    icon: 'DiceIcon',\r\n    items: [\r\n      {\r\n        label: 'LKCP',\r\n        icon: 'LkcpIcon',\r\n        href: '/dice?coin=LKCP',\r\n      },\r\n      {\r\n        label: 'BNB',\r\n        icon: 'BnbIcon',\r\n        href: '/dice?coin=BNB',\r\n      },\r\n      {\r\n        label: 'BUSD',\r\n        icon: 'BusdIcon',\r\n        href: '/dice?coin=BUSD',\r\n      },\r\n      {\r\n        label: 'BTCB',\r\n        icon: 'BtcbIcon',\r\n        href: '/dice?coin=BTCB',\r\n      },\r\n      {\r\n        label: 'ETH',\r\n        icon: 'EthIcon',\r\n        href: '/dice?coin=ETH',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    label: t('More'),\r\n    icon: 'MoreIcon',\r\n    items: [\r\n      {\r\n        label: t('Github'),\r\n        href: 'https://github.com/heswap',\r\n      },\r\n    ],\r\n  },\r\n]\r\n\r\nexport default config\r\n","import React from 'react'\r\nimport { AppMenu } from '@heswap/uikit'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { languageList } from 'config/localization/languages'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useTheme from 'hooks/useTheme'\r\nimport useAuth from 'hooks/useAuth'\r\nimport { usePriceCakeBusd } from 'state/hooks'\r\nimport config from './config'\r\n\r\nconst Menu = (props) => {\r\n  const { account } = useWeb3React()\r\n  const { login, logout } = useAuth()\r\n  const { isDark, toggleTheme } = useTheme()\r\n  const cakePriceUsd = usePriceCakeBusd()\r\n  const { currentLanguage, setLanguage, t } = useTranslation()\r\n\r\n  return (\r\n    <AppMenu\r\n      account={account}\r\n      login={login}\r\n      logout={logout}\r\n      isDark={isDark}\r\n      toggleTheme={toggleTheme}\r\n      currentLang={currentLanguage.code}\r\n      langs={languageList}\r\n      setLang={setLanguage}\r\n      cakePriceUsd={cakePriceUsd.toNumber()}\r\n      links={config(t)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport default Menu\r\n","import React, { Suspense, SuspenseProps } from 'react'\r\n\r\ninterface State {\r\n  hasError: boolean\r\n}\r\n\r\nclass SuspenseWithChunkError extends React.Component<SuspenseProps, State> {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = { hasError: false }\r\n  }\r\n\r\n  static getDerivedStateFromError() {\r\n    // Update state so the next render will show the fallback UI.\r\n    return { hasError: true }\r\n  }\r\n\r\n  componentDidCatch(error) {\r\n    const isJsChunkLoadError = error.name === 'ChunkLoadError'\r\n    const isCssChunkLoadError = error.code === 'CSS_CHUNK_LOAD_FAILED'\r\n    const isChunkLoadError = isJsChunkLoadError || isCssChunkLoadError\r\n\r\n    // Save a flag on the window object indicating that we have already had a chunk error.\r\n    // This prevents infinite reloads\r\n    const isRecoveringFromChunkError = !!window.history.state?.isRecoveringFromChunkError\r\n\r\n    // If was a chunk load error, refresh the page\r\n    if (isChunkLoadError && !isRecoveringFromChunkError) {\r\n      const nextState = { ...window.history.state, isRecoveringFromChunkError: true }\r\n      window.history.replaceState(nextState, '')\r\n      window.location.reload()\r\n      return\r\n    }\r\n\r\n    throw error\r\n  }\r\n\r\n  render() {\r\n    const { hasError } = this.state\r\n    const { fallback } = this.props\r\n\r\n    if (hasError) {\r\n      return fallback\r\n    }\r\n\r\n    return <Suspense {...this.props} />\r\n  }\r\n}\r\n\r\nexport default SuspenseWithChunkError\r\n","import React from 'react'\r\nimport { ToastContainer } from '@heswap/uikit'\r\nimport useToast from 'hooks/useToast'\r\n\r\nconst ToastListener = () => {\r\n  const { toasts, remove } = useToast()\r\n\r\n  const handleRemove = (id: string) => remove(id)\r\n\r\n  return <ToastContainer toasts={toasts} onRemove={handleRemove} />\r\n}\r\n\r\nexport default ToastListener\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Spinner } from '@heswap/uikit'\r\nimport Page from './layout/Page'\r\n\r\nconst Wrapper = styled(Page)`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\n\r\nconst PageLoader: React.FC = () => {\r\n  return (\r\n    <Wrapper>\r\n      <Spinner />\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default PageLoader\r\n","import React, { useState, useCallback } from 'react'\r\nimport { FallingBunnies, FallingBunniesProps, useKonamiCheatCode } from '@heswap/uikit'\r\n\r\nconst EasterEgg: React.FC<FallingBunniesProps> = (props) => {\r\n  const [show, setShow] = useState(false)\r\n  const startFalling = useCallback(() => setShow(true), [setShow])\r\n  useKonamiCheatCode(startFalling)\r\n\r\n  if (show) {\r\n    return (\r\n      <div onAnimationEnd={() => setShow(false)}>\r\n        <FallingBunnies {...props} />\r\n      </div>\r\n    )\r\n  }\r\n  return null\r\n}\r\n\r\nexport default React.memo(EasterEgg)\r\n","import BigNumber from 'bignumber.js'\r\nimport { Pool } from 'state/types'\r\nimport { getRoi, tokenEarnedPerThousandDollarsCompounding } from 'utils/compoundApyHelpers'\r\nimport { getBalanceNumber, getFullDisplayBalance, getDecimalAmount } from 'utils/formatBalance'\r\n\r\nexport const convertSharesToCake = (\r\n  shares: BigNumber,\r\n  cakePerFullShare: BigNumber,\r\n  decimals = 18,\r\n  decimalsToRound = 3,\r\n) => {\r\n  const sharePriceNumber = getBalanceNumber(cakePerFullShare, decimals)\r\n  const amountInCake = new BigNumber(shares.multipliedBy(sharePriceNumber))\r\n  const cakeAsNumberBalance = getBalanceNumber(amountInCake, decimals)\r\n  const cakeAsBigNumber = getDecimalAmount(new BigNumber(cakeAsNumberBalance), decimals)\r\n  const cakeAsDisplayBalance = getFullDisplayBalance(amountInCake, decimals, decimalsToRound)\r\n  return { cakeAsNumberBalance, cakeAsBigNumber, cakeAsDisplayBalance }\r\n}\r\n\r\nexport const convertCakeToShares = (\r\n  cake: BigNumber,\r\n  cakePerFullShare: BigNumber,\r\n  decimals = 18,\r\n  decimalsToRound = 3,\r\n) => {\r\n  const sharePriceNumber = getBalanceNumber(cakePerFullShare, decimals)\r\n  const amountInShares = new BigNumber(cake.dividedBy(sharePriceNumber))\r\n  const sharesAsNumberBalance = getBalanceNumber(amountInShares, decimals)\r\n  const sharesAsBigNumber = getDecimalAmount(new BigNumber(sharesAsNumberBalance), decimals)\r\n  const sharesAsDisplayBalance = getFullDisplayBalance(amountInShares, decimals, decimalsToRound)\r\n  return { sharesAsNumberBalance, sharesAsBigNumber, sharesAsDisplayBalance }\r\n}\r\n\r\nconst MANUAL_POOL_COMPOUND_FREQUENCY = 1\r\n\r\nexport const getAprData = (pool: Pool) => {\r\n  const { earningTokenPrice, apr } = pool\r\n  // special handling for tokens like tBTC or BIFI where the daily token rewards for $1000 dollars will be less than 0.001 of that token\r\n  const isHighValueToken = Math.round(earningTokenPrice / 1000) > 0\r\n  const roundingDecimals = isHighValueToken ? 4 : 2\r\n\r\n  //   Estimate & manual for now. 288 = once every 5 mins. We can change once we have a better sense of this\r\n  const compoundFrequency = MANUAL_POOL_COMPOUND_FREQUENCY\r\n\r\n  return { apr, isHighValueToken, roundingDecimals, compoundFrequency }\r\n}\r\n\r\nexport const getPoolBlockInfo = (pool: Pool, currentBlock: number) => {\r\n  const { startBlock, endBlock, isFinished } = pool\r\n  const shouldShowBlockCountdown = Boolean(!isFinished && startBlock && endBlock)\r\n  const blocksUntilStart = Math.max(startBlock - currentBlock, 0)\r\n  const blocksRemaining = Math.max(endBlock - currentBlock, 0)\r\n  const hasPoolStarted = blocksUntilStart === 0 && blocksRemaining > 0\r\n  const blocksToDisplay = hasPoolStarted ? blocksRemaining : blocksUntilStart\r\n  return { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay }\r\n}\r\n","import React from 'react'\r\nimport { Flex, TooltipText, IconButton, useModal, CalculateIcon, Skeleton, useTooltip } from '@heswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport Balance from 'components/Balance'\r\nimport ApyCalculatorModal from 'components/ApyCalculatorModal'\r\nimport { Pool } from 'state/types'\r\nimport { BASE_EXCHANGE_URL } from 'config'\r\nimport { getAprData } from 'views/Pools/helpers'\r\n\r\ninterface AprRowProps {\r\n  pool: Pool\r\n}\r\n\r\nconst AprRow: React.FC<AprRowProps> = ({ pool }) => {\r\n  const { t } = useTranslation()\r\n  const { stakingToken, earningToken, isFinished, apr, earningTokenPrice } = pool\r\n\r\n  const tooltipContent = t('This pool’s rewards aren’t compounded automatically, so we show APR')\r\n\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(tooltipContent, { placement: 'bottom-start' })\r\n\r\n  const { apr: earningsPercentageToDisplay, roundingDecimals, compoundFrequency } = getAprData(pool)\r\n\r\n  const apyModalLink =\r\n    stakingToken.address &&\r\n    `${BASE_EXCHANGE_URL}/#/swap?outputCurrency=${stakingToken.address[process.env.REACT_APP_CHAIN_ID]}`\r\n\r\n  const [onPresentApyModal] = useModal(\r\n    <ApyCalculatorModal\r\n      tokenPrice={earningTokenPrice}\r\n      apr={apr}\r\n      linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\r\n      linkHref={apyModalLink || BASE_EXCHANGE_URL}\r\n      earningTokenSymbol={earningToken.symbol}\r\n      roundingDecimals={roundingDecimals}\r\n      compoundFrequency={compoundFrequency}\r\n      performanceFee={0}\r\n    />,\r\n  )\r\n\r\n  return (\r\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\r\n      {tooltipVisible && tooltip}\r\n      <TooltipText ref={targetRef}>{`${t('APR')}:`}</TooltipText>\r\n      {isFinished || !apr ? (\r\n        <Skeleton width=\"82px\" height=\"32px\" />\r\n      ) : (\r\n        <Flex alignItems=\"center\">\r\n          <Balance\r\n            fontSize=\"16px\"\r\n            isDisabled={isFinished}\r\n            value={earningsPercentageToDisplay}\r\n            decimals={2}\r\n            unit=\"%\"\r\n            bold\r\n          />\r\n          <IconButton onClick={onPresentApyModal} variant=\"text\" scale=\"sm\">\r\n            <CalculateIcon color=\"textSubtle\" width=\"18px\" />\r\n          </IconButton>\r\n        </Flex>\r\n      )}\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default AprRow\r\n","import styled, { css, keyframes } from 'styled-components'\r\nimport { Card, Box } from '@heswap/uikit'\r\n\r\nconst PromotedGradient = keyframes`\r\n  0% {\r\n    background-position: 50% 0%;\r\n  }\r\n  50% {\r\n    background-position: 50% 100%;\r\n  }\r\n  100% {\r\n    background-position: 50% 0%;\r\n  }\r\n`\r\n\r\ninterface PromotedStyleCardProps {\r\n  isDesktop: boolean\r\n}\r\n\r\nexport const StyledCard = styled(Card)<{ isPromoted?: PromotedStyleCardProps; isFinished?: boolean }>`\r\n  max-width: 352px;\r\n  margin: 0 8px 24px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-self: baseline;\r\n  position: relative;\r\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'secondary']};\r\n  box-shadow: ${({ theme }) => theme.shadows.step};\r\n\r\n  ${({ isPromoted, theme }) =>\r\n    isPromoted\r\n      ? css`\r\n          background: linear-gradient(180deg, ${theme.colors.primaryBright}, ${theme.colors.secondary});\r\n          padding: 1px 1px 3px 1px;\r\n          background-size: 400% 400%;\r\n        `\r\n      : `background: ${(props) => props.theme.card.background};`}\r\n\r\n  ${({ isPromoted }) =>\r\n    isPromoted &&\r\n    isPromoted.isDesktop &&\r\n    css`\r\n      animation: ${PromotedGradient} 3s ease infinite;\r\n    `}\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    margin: 0 12px 46px;\r\n  }\r\n`\r\n\r\nexport const StyledCardInner = styled(Box)`\r\n  background: ${({ theme }) => theme.card.background};\r\n  border-radius: ${({ theme }) => theme.radii.card};\r\n`\r\n\r\nexport default StyledCard\r\n","import React from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport styled from 'styled-components'\r\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport {\r\n  Flex,\r\n  MetamaskIcon,\r\n  Text,\r\n  TooltipText,\r\n  LinkExternal,\r\n  TimerIcon,\r\n  Skeleton,\r\n  useTooltip,\r\n  Button,\r\n  Link,\r\n} from '@heswap/uikit'\r\nimport { BASE_BSC_SCAN_URL, BASE_URL } from 'config'\r\nimport { useBlock } from 'state/hooks'\r\nimport { Pool } from 'state/types'\r\nimport { getAddress } from 'utils/addressHelpers'\r\nimport { registerToken } from 'utils/wallet'\r\nimport { getBscScanBlockCountdownUrl } from 'utils/bscscan'\r\nimport Balance from 'components/Balance'\r\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\r\n\r\ninterface ExpandedFooterProps {\r\n  pool: Pool\r\n  account: string\r\n}\r\n\r\nconst ExpandedWrapper = styled(Flex)`\r\n  svg {\r\n    height: 14px;\r\n    width: 14px;\r\n  }\r\n`\r\n\r\nconst ExpandedFooter: React.FC<ExpandedFooterProps> = ({ pool, account }) => {\r\n  const { t } = useTranslation()\r\n  const { currentBlock } = useBlock()\r\n\r\n  const { stakingToken, earningToken, totalStaked, endBlock, stakingLimit, contractAddress, sousId } = pool\r\n\r\n  const tokenAddress = earningToken.address ? getAddress(earningToken.address) : ''\r\n  const poolContractAddress = getAddress(contractAddress)\r\n  const imageSrc = `${BASE_URL}/images/tokens/${tokenAddress}.png`\r\n  const isMetaMaskInScope = !!(window as WindowChain).ethereum?.isMetaMask\r\n\r\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\r\n    getPoolBlockInfo(pool, currentBlock)\r\n\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\r\n    t('Subtracted automatically from each yield harvest and burned.'),\r\n    { placement: 'bottom-start' },\r\n  )\r\n\r\n  const getTotalStakedBalance = () => {\r\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\r\n  }\r\n\r\n  return (\r\n    <ExpandedWrapper flexDirection=\"column\">\r\n      <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\r\n        <Text small>{t('Total staked')}:</Text>\r\n        <Flex alignItems=\"flex-start\">\r\n          {totalStaked ? (\r\n            <>\r\n              <Balance small value={getTotalStakedBalance()} />\r\n              <Text small ml=\"4px\">\r\n                {stakingToken.symbol}\r\n              </Text>\r\n            </>\r\n          ) : (\r\n            <Skeleton width=\"90px\" height=\"21px\" />\r\n          )}\r\n        </Flex>\r\n      </Flex>\r\n      {stakingLimit && stakingLimit.gt(0) && (\r\n        <Flex mb=\"2px\" justifyContent=\"space-between\">\r\n          <Text small>{t('Max. stake per user')}:</Text>\r\n          <Text small>{`${getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0)} ${stakingToken.symbol}`}</Text>\r\n        </Flex>\r\n      )}\r\n      {shouldShowBlockCountdown && (\r\n        <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Text small>{hasPoolStarted ? t('Ends in') : t('Starts in')}:</Text>\r\n          {blocksRemaining || blocksUntilStart ? (\r\n            <Flex alignItems=\"center\">\r\n              <Link external href={getBscScanBlockCountdownUrl(endBlock)}>\r\n                <Balance small value={blocksToDisplay} decimals={0} color=\"primary\" />\r\n                <Text small ml=\"4px\" color=\"primary\" textTransform=\"lowercase\">\r\n                  {t('Blocks')}\r\n                </Text>\r\n                <TimerIcon ml=\"4px\" color=\"primary\" />\r\n              </Link>\r\n            </Flex>\r\n          ) : (\r\n            <Skeleton width=\"54px\" height=\"21px\" />\r\n          )}\r\n        </Flex>\r\n      )}\r\n      <Flex mb=\"2px\" justifyContent=\"flex-end\">\r\n        <LinkExternal bold={false} small href={earningToken.projectLink}>\r\n          {t('View Project Site')}\r\n        </LinkExternal>\r\n      </Flex>\r\n      {poolContractAddress && (\r\n        <Flex mb=\"2px\" justifyContent=\"flex-end\">\r\n          <LinkExternal bold={false} small href={`${BASE_BSC_SCAN_URL}/address/${poolContractAddress}`}>\r\n            {t('View Contract')}\r\n          </LinkExternal>\r\n        </Flex>\r\n      )}\r\n      {account && isMetaMaskInScope && tokenAddress && (\r\n        <Flex justifyContent=\"flex-end\">\r\n          <Button\r\n            variant=\"text\"\r\n            p=\"0\"\r\n            height=\"auto\"\r\n            onClick={() => registerToken(tokenAddress, earningToken.symbol, earningToken.decimals, imageSrc)}\r\n          >\r\n            <Text color=\"primary\" fontSize=\"14px\">\r\n              {t('Add to Metamask')}\r\n            </Text>\r\n            <MetamaskIcon ml=\"4px\" />\r\n          </Button>\r\n        </Flex>\r\n      )}\r\n    </ExpandedWrapper>\r\n  )\r\n}\r\n\r\nexport default React.memo(ExpandedFooter)\r\n","import React, { useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport styled from 'styled-components'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { Flex, CardFooter, ExpandableLabel, HelpIcon, useTooltip } from '@heswap/uikit'\r\nimport { Pool } from 'state/types'\r\nimport { CompoundingPoolTag, ManualPoolTag } from 'components/Tags'\r\nimport ExpandedFooter from './ExpandedFooter'\r\n\r\ninterface FooterProps {\r\n  pool: Pool\r\n  account: string\r\n}\r\n\r\nconst ExpandableButtonWrapper = styled(Flex)`\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  button {\r\n    padding: 0;\r\n  }\r\n`\r\n\r\nconst Footer: React.FC<FooterProps> = ({ pool, account }) => {\r\n  const { t } = useTranslation()\r\n  const [isExpanded, setIsExpanded] = useState(false)\r\n\r\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually.')\r\n  const autoTooltipText = t(\r\n    'Any funds you stake in this pool will be automagically harvested and restaked (compounded) for you.',\r\n  )\r\n\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(manualTooltipText, {\r\n    placement: 'bottom',\r\n  })\r\n\r\n  return (\r\n    <CardFooter>\r\n      <ExpandableButtonWrapper>\r\n        <Flex alignItems=\"center\">\r\n          <ManualPoolTag />\r\n          {tooltipVisible && tooltip}\r\n          <Flex ref={targetRef}>\r\n            <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\r\n          </Flex>\r\n        </Flex>\r\n        <ExpandableLabel expanded={isExpanded} onClick={() => setIsExpanded(!isExpanded)}>\r\n          {isExpanded ? t('Hide') : t('Details')}\r\n        </ExpandableLabel>\r\n      </ExpandableButtonWrapper>\r\n      {isExpanded && <ExpandedFooter pool={pool} account={account} />}\r\n    </CardFooter>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport { CardHeader, Heading, Text, Flex, Image } from '@heswap/uikit'\r\nimport styled from 'styled-components'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nconst Wrapper = styled(CardHeader)<{ isFinished?: boolean; background?: string }>`\r\n  background: ${({ isFinished, background, theme }) =>\r\n    isFinished ? theme.colors.backgroundDisabled : theme.colors.gradients[background]};\r\n  border-radius: ${({ theme }) => `${theme.radii.card} ${theme.radii.card} 0 0`};\r\n`\r\n\r\nconst StyledCardHeader: React.FC<{\r\n  earningTokenSymbol: string\r\n  stakingTokenSymbol: string\r\n  isFinished?: boolean\r\n  isStaking?: boolean\r\n}> = ({ earningTokenSymbol, stakingTokenSymbol, isFinished = false, isStaking = false }) => {\r\n  const { t } = useTranslation()\r\n  const poolImageSrc = `${earningTokenSymbol}-${stakingTokenSymbol}.svg`.toLocaleLowerCase()\r\n  const isCakePool = earningTokenSymbol === 'CAKE' && stakingTokenSymbol === 'CAKE'\r\n  const background = isStaking ? 'bubblegum' : 'cardHeader'\r\n\r\n  const getHeadingPrefix = () => {\r\n    if (isCakePool) {\r\n      // manual cake\r\n      return t('HSW')\r\n    }\r\n    // all other pools\r\n    return t('Earn')\r\n  }\r\n\r\n  const getSubHeading = () => {\r\n    if (isCakePool) {\r\n      return t('Earn CAKE, stake CAKE')\r\n    }\r\n    return t('Stake %symbol%', { symbol: stakingTokenSymbol })\r\n  }\r\n\r\n  return (\r\n    <Wrapper isFinished={isFinished} background={background}>\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\r\n        <Flex flexDirection=\"column\">\r\n          <Heading color={isFinished ? 'textDisabled' : 'body'} scale=\"lg\">\r\n            {`${getHeadingPrefix()} ${earningTokenSymbol}`}\r\n          </Heading>\r\n          <Text color={isFinished ? 'textDisabled' : 'textSubtle'}>{getSubHeading()}</Text>\r\n        </Flex>\r\n        <Image src={`${process.env.PUBLIC_URL}/images/pools/${poolImageSrc}`} alt={earningTokenSymbol} width={64} height={64} />\r\n      </Flex>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default StyledCardHeader\r\n","import React from 'react'\r\nimport { Button, AutoRenewIcon, Skeleton } from '@heswap/uikit'\r\nimport { useSousApprove } from 'hooks/useApprove'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useERC20 } from 'hooks/useContract'\r\nimport { getAddress } from 'utils/addressHelpers'\r\nimport { Pool } from 'state/types'\r\n\r\ninterface ApprovalActionProps {\r\n  pool: Pool\r\n  isLoading?: boolean\r\n}\r\n\r\nconst ApprovalAction: React.FC<ApprovalActionProps> = ({ pool, isLoading = false }) => {\r\n  const { sousId, stakingToken, earningToken } = pool\r\n  const { t } = useTranslation()\r\n  const stakingTokenContract = useERC20(stakingToken.address ? getAddress(stakingToken.address) : '')\r\n  const { handleApprove, requestedApproval } = useSousApprove(stakingTokenContract, sousId, earningToken.symbol)\r\n\r\n  return (\r\n    <>\r\n      {isLoading ? (\r\n        <Skeleton width=\"100%\" height=\"52px\" />\r\n      ) : (\r\n        <Button\r\n          isLoading={requestedApproval}\r\n          endIcon={requestedApproval ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\r\n          disabled={requestedApproval}\r\n          onClick={handleApprove}\r\n          width=\"100%\"\r\n        >\r\n          {t('Enable')}\r\n        </Button>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ApprovalAction\r\n","import React from 'react'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport styled from 'styled-components'\r\nimport { Modal, Text, Button, OpenNewIcon, Link } from '@heswap/uikit'\r\nimport { BASE_EXCHANGE_URL } from 'config'\r\nimport useTheme from 'hooks/useTheme'\r\n\r\ninterface NotEnoughTokensModalProps {\r\n  tokenSymbol: string\r\n  onDismiss?: () => void\r\n}\r\n\r\nconst StyledLink = styled(Link)`\r\n  width: 100%;\r\n`\r\n\r\nconst NotEnoughTokensModal: React.FC<NotEnoughTokensModalProps> = ({ tokenSymbol, onDismiss }) => {\r\n  const { t } = useTranslation()\r\n  const { theme } = useTheme()\r\n\r\n  return (\r\n    <Modal\r\n      title={t('%symbol% required', { symbol: tokenSymbol })}\r\n      onDismiss={onDismiss}\r\n      headerBackground={theme.colors.gradients.cardHeader}\r\n    >\r\n      <Text color=\"failure\" bold>\r\n        {t('Insufficient %symbol% balance', { symbol: tokenSymbol })}\r\n      </Text>\r\n      <Text mt=\"24px\">{t('You’ll need %symbol% to stake in this pool!', { symbol: tokenSymbol })}</Text>\r\n      <Text>\r\n        {t('Buy some %symbol%, or make sure your %symbol% isn’t in another pool or LP.', {\r\n          symbol: tokenSymbol,\r\n        })}\r\n      </Text>\r\n      <Button mt=\"24px\" as=\"a\" external href={BASE_EXCHANGE_URL}>\r\n        {t('Buy')} {tokenSymbol}\r\n      </Button>\r\n      <StyledLink href=\"https://yieldwatch.net\" external>\r\n        <Button variant=\"secondary\" mt=\"8px\" width=\"100%\">\r\n          {t('Locate Assets')}\r\n          <OpenNewIcon color=\"primary\" ml=\"4px\" />\r\n        </Button>\r\n      </StyledLink>\r\n      <Button variant=\"text\" onClick={onDismiss}>\r\n        {t('Close Window')}\r\n      </Button>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default NotEnoughTokensModal\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button } from '@heswap/uikit'\r\n\r\ninterface PercentageButtonProps {\r\n  onClick: () => void\r\n}\r\n\r\nconst StyledButton = styled(Button)`\r\n  flex-grow: 1;\r\n`\r\n\r\nconst PercentageButton: React.FC<PercentageButtonProps> = ({ children, onClick }) => {\r\n  return (\r\n    <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={onClick}>\r\n      {children}\r\n    </StyledButton>\r\n  )\r\n}\r\n\r\nexport default PercentageButton\r\n","import React, { useEffect, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Modal, Text, Flex, Image, Button, Slider, BalanceInput, AutoRenewIcon, Link } from '@heswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { BASE_EXCHANGE_URL } from 'config'\r\nimport { useSousStake } from 'hooks/useStake'\r\nimport { useSousUnstake } from 'hooks/useUnstake'\r\nimport useTheme from 'hooks/useTheme'\r\nimport useToast from 'hooks/useToast'\r\nimport BigNumber from 'bignumber.js'\r\nimport { getFullDisplayBalance, formatNumber, getDecimalAmount } from 'utils/formatBalance'\r\nimport { Pool } from 'state/types'\r\nimport { getAddress } from 'utils/addressHelpers'\r\nimport PercentageButton from './PercentageButton'\r\n\r\ninterface StakeModalProps {\r\n  isBnbPool: boolean\r\n  pool: Pool\r\n  stakingTokenBalance: BigNumber\r\n  stakingTokenPrice: number\r\n  referrer: string\r\n  isRemovingStake?: boolean\r\n  onDismiss?: () => void\r\n}\r\n\r\nconst StyledLink = styled(Link)`\r\n  width: 100%;\r\n`\r\n\r\nconst StakeModal: React.FC<StakeModalProps> = ({\r\n  isBnbPool,\r\n  pool,\r\n  stakingTokenBalance,\r\n  stakingTokenPrice,\r\n  referrer,\r\n  isRemovingStake = false,\r\n  onDismiss,\r\n}) => {\r\n  const { sousId, stakingToken, userData, stakingLimit, earningToken } = pool\r\n  const { t } = useTranslation()\r\n  const { theme } = useTheme()\r\n  const { onStake } = useSousStake(sousId, isBnbPool)\r\n  const { onUnstake } = useSousUnstake(sousId, pool.enableEmergencyWithdraw)\r\n  const { toastSuccess, toastError } = useToast()\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const [stakeAmount, setStakeAmount] = useState('')\r\n  const [hasReachedStakeLimit, setHasReachedStakedLimit] = useState(false)\r\n  const [percent, setPercent] = useState(0)\r\n  const getCalculatedStakingLimit = () => {\r\n    if (isRemovingStake) {\r\n      return userData.stakedBalance\r\n    }\r\n    return stakingLimit.gt(0) && stakingTokenBalance.gt(stakingLimit) ? stakingLimit : stakingTokenBalance\r\n  }\r\n\r\n  const usdValueStaked = stakeAmount && formatNumber(new BigNumber(stakeAmount).times(stakingTokenPrice).toNumber())\r\n\r\n  useEffect(() => {\r\n    if (stakingLimit.gt(0) && !isRemovingStake) {\r\n      const fullDecimalStakeAmount = getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals)\r\n      setHasReachedStakedLimit(fullDecimalStakeAmount.plus(userData.stakedBalance).gt(stakingLimit))\r\n    }\r\n  }, [stakeAmount, stakingLimit, userData, stakingToken, isRemovingStake, setHasReachedStakedLimit])\r\n\r\n  const handleStakeInputChange = (input: string) => {\r\n    if (input) {\r\n      const convertedInput = getDecimalAmount(new BigNumber(input), stakingToken.decimals)\r\n      const percentage = Math.floor(convertedInput.dividedBy(getCalculatedStakingLimit()).multipliedBy(100).toNumber())\r\n      setPercent(Math.min(percentage, 100))\r\n    } else {\r\n      setPercent(0)\r\n    }\r\n    setStakeAmount(input)\r\n  }\r\n\r\n  const handleChangePercent = (sliderPercent: number) => {\r\n    if (sliderPercent > 0) {\r\n      const percentageOfStakingMax = getCalculatedStakingLimit().dividedBy(100).multipliedBy(sliderPercent)\r\n      const amountToStake = getFullDisplayBalance(percentageOfStakingMax, stakingToken.decimals, stakingToken.decimals)\r\n      setStakeAmount(amountToStake)\r\n    } else {\r\n      setStakeAmount('')\r\n    }\r\n    setPercent(sliderPercent)\r\n  }\r\n\r\n  const handleConfirmClick = async () => {\r\n    setPendingTx(true)\r\n\r\n    if (isRemovingStake) {\r\n      // unstaking\r\n      try {\r\n        await onUnstake(stakeAmount, stakingToken.decimals)\r\n        toastSuccess(\r\n          `${t('Unstaked')}!`,\r\n          t('Your %symbol% earnings have also been harvested to your wallet!', {\r\n            symbol: earningToken.symbol,\r\n          }),\r\n        )\r\n        setPendingTx(false)\r\n        onDismiss()\r\n      } catch (e) {\r\n        toastError(t('Canceled'), t('Please try again and confirm the transaction.'))\r\n        setPendingTx(false)\r\n      }\r\n    } else {\r\n      try {\r\n        // staking\r\n        await onStake(stakeAmount, stakingToken.decimals, referrer)\r\n        toastSuccess(\r\n          `${t('Staked')}!`,\r\n          t('Your %symbol% funds have been staked in the pool!', {\r\n            symbol: stakingToken.symbol,\r\n          }),\r\n        )\r\n        setPendingTx(false)\r\n        onDismiss()\r\n      } catch (e) {\r\n        toastError(t('Canceled'), t('Please try again and confirm the transaction.'))\r\n        setPendingTx(false)\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      title={isRemovingStake ? t('Unstake') : t('Stake in Pool')}\r\n      onDismiss={onDismiss}\r\n      headerBackground={theme.colors.gradients.cardHeader}\r\n    >\r\n      {stakingLimit.gt(0) && !isRemovingStake && (\r\n        <Text color=\"secondary\" bold mb=\"24px\" style={{ textAlign: 'center' }} fontSize=\"16px\">\r\n          {t('Max stake for this pool: %amount% %token%', {\r\n            amount: getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0),\r\n            token: stakingToken.symbol,\r\n          })}\r\n        </Text>\r\n      )}\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\r\n        <Text bold>{isRemovingStake ? t('Unstake') : t('Stake')}:</Text>\r\n        <Flex alignItems=\"center\" minWidth=\"70px\">\r\n          <Image\r\n            src={`${process.env.PUBLIC_URL}/images/tokens/${getAddress(stakingToken.address)}.png`}\r\n            width={24}\r\n            height={24}\r\n            alt={stakingToken.symbol}\r\n          />\r\n          <Text ml=\"4px\" bold>\r\n            {stakingToken.symbol}\r\n          </Text>\r\n        </Flex>\r\n      </Flex>\r\n      <BalanceInput\r\n        value={stakeAmount}\r\n        onUserInput={handleStakeInputChange}\r\n        currencyValue={stakingTokenPrice !== 0 && `~${usdValueStaked || 0} USD`}\r\n        isWarning={hasReachedStakeLimit}\r\n        decimals={stakingToken.decimals}\r\n      />\r\n      {hasReachedStakeLimit && (\r\n        <Text color=\"failure\" fontSize=\"12px\" style={{ textAlign: 'right' }} mt=\"4px\">\r\n          {t('Maximum total stake: %amount% %token%', {\r\n            amount: getFullDisplayBalance(new BigNumber(stakingLimit), stakingToken.decimals, 0),\r\n            token: stakingToken.symbol,\r\n          })}\r\n        </Text>\r\n      )}\r\n      <Text ml=\"auto\" color=\"textSubtle\" fontSize=\"12px\" mb=\"8px\">\r\n        {t('Balance: %balance%', {\r\n          balance: getFullDisplayBalance(getCalculatedStakingLimit(), stakingToken.decimals),\r\n        })}\r\n      </Text>\r\n      <Slider\r\n        min={0}\r\n        max={100}\r\n        value={percent}\r\n        onValueChanged={handleChangePercent}\r\n        name=\"stake\"\r\n        valueLabel={`${percent}%`}\r\n        step={1}\r\n      />\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\r\n        <PercentageButton onClick={() => handleChangePercent(25)}>25%</PercentageButton>\r\n        <PercentageButton onClick={() => handleChangePercent(50)}>50%</PercentageButton>\r\n        <PercentageButton onClick={() => handleChangePercent(75)}>75%</PercentageButton>\r\n        <PercentageButton onClick={() => handleChangePercent(100)}>{t('Max')}</PercentageButton>\r\n      </Flex>\r\n      <Button\r\n        isLoading={pendingTx}\r\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\r\n        onClick={handleConfirmClick}\r\n        disabled={!stakeAmount || parseFloat(stakeAmount) === 0 || hasReachedStakeLimit}\r\n        mt=\"24px\"\r\n      >\r\n        {pendingTx ? t('Confirming') : t('Confirm')}\r\n      </Button>\r\n      {!isRemovingStake && (\r\n        <StyledLink external href={BASE_EXCHANGE_URL}>\r\n          <Button width=\"100%\" mt=\"8px\" variant=\"secondary\">\r\n            {t('Get %symbol%', { symbol: stakingToken.symbol })}\r\n          </Button>\r\n        </StyledLink>\r\n      )}\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default StakeModal\r\n","import React from 'react'\r\nimport { Flex, Text, Button, IconButton, AddIcon, MinusIcon, useModal, Skeleton, useTooltip } from '@heswap/uikit'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { Pool } from 'state/types'\r\nimport Balance from 'components/Balance'\r\nimport NotEnoughTokensModal from '../Modals/NotEnoughTokensModal'\r\nimport StakeModal from '../Modals/StakeModal'\r\n\r\ninterface StakeActionsProps {\r\n  pool: Pool\r\n  stakingTokenBalance: BigNumber\r\n  stakedBalance: BigNumber\r\n  isBnbPool: boolean\r\n  isStaked: ConstrainBoolean\r\n  referrer: string\r\n  isLoading?: boolean\r\n}\r\n\r\nconst StakeAction: React.FC<StakeActionsProps> = ({\r\n  pool,\r\n  stakingTokenBalance,\r\n  stakedBalance,\r\n  isBnbPool,\r\n  isStaked,\r\n  referrer,\r\n  isLoading = false,\r\n}) => {\r\n  const { stakingToken, stakingTokenPrice, stakingLimit, isFinished, userData } = pool\r\n  const { t } = useTranslation()\r\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\r\n  const stakedTokenDollarBalance = getBalanceNumber(\r\n    stakedBalance.multipliedBy(stakingTokenPrice),\r\n    stakingToken.decimals,\r\n  )\r\n\r\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\r\n\r\n  const [onPresentStake] = useModal(\r\n    <StakeModal\r\n      isBnbPool={isBnbPool}\r\n      pool={pool}\r\n      stakingTokenBalance={stakingTokenBalance}\r\n      stakingTokenPrice={stakingTokenPrice}\r\n      referrer={referrer}\r\n    />,\r\n  )\r\n\r\n  const [onPresentUnstake] = useModal(\r\n    <StakeModal\r\n      stakingTokenBalance={stakingTokenBalance}\r\n      isBnbPool={isBnbPool}\r\n      pool={pool}\r\n      stakingTokenPrice={stakingTokenPrice}\r\n      referrer={referrer}\r\n      isRemovingStake\r\n    />,\r\n  )\r\n\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\r\n    t('You’ve already staked the maximum amount you can stake in this pool!'),\r\n    { placement: 'bottom' },\r\n  )\r\n\r\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\r\n\r\n  const renderStakeAction = () => {\r\n    return isStaked ? (\r\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\r\n        <Flex flexDirection=\"column\">\r\n          <>\r\n            <Balance bold fontSize=\"20px\" decimals={3} value={stakedTokenBalance} />\r\n            {stakingTokenPrice !== 0 && (\r\n              <Text fontSize=\"12px\" color=\"textSubtle\">\r\n                <Balance\r\n                  fontSize=\"12px\"\r\n                  color=\"textSubtle\"\r\n                  decimals={2}\r\n                  value={stakedTokenDollarBalance}\r\n                  prefix=\"~\"\r\n                  unit=\" USD\"\r\n                />\r\n              </Text>\r\n            )}\r\n          </>\r\n        </Flex>\r\n        <Flex>\r\n          <IconButton variant=\"secondary\" onClick={onPresentUnstake} mr=\"6px\">\r\n            <MinusIcon color=\"primary\" width=\"24px\" />\r\n          </IconButton>\r\n          {reachStakingLimit ? (\r\n            <span ref={targetRef}>\r\n              <IconButton variant=\"secondary\" disabled>\r\n                <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\r\n              </IconButton>\r\n            </span>\r\n          ) : (\r\n            <IconButton\r\n              variant=\"secondary\"\r\n              onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}\r\n              disabled={isFinished}\r\n            >\r\n              <AddIcon color=\"primary\" width=\"24px\" height=\"24px\" />\r\n            </IconButton>\r\n          )}\r\n        </Flex>\r\n        {tooltipVisible && tooltip}\r\n      </Flex>\r\n    ) : (\r\n      <Button disabled={isFinished} onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>\r\n        {t('Stake')}\r\n      </Button>\r\n    )\r\n  }\r\n\r\n  return <Flex flexDirection=\"column\">{isLoading ? <Skeleton width=\"100%\" height=\"52px\" /> : renderStakeAction()}</Flex>\r\n}\r\n\r\nexport default StakeAction\r\n","import React, { useState } from 'react'\r\nimport {\r\n  Modal,\r\n  Text,\r\n  Button,\r\n  Heading,\r\n  Flex,\r\n  AutoRenewIcon,\r\n  ButtonMenu,\r\n  ButtonMenuItem,\r\n  HelpIcon,\r\n  useTooltip,\r\n} from '@heswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useTheme from 'hooks/useTheme'\r\nimport { useSousHarvest } from 'hooks/useHarvest'\r\nimport { useSousStake } from 'hooks/useStake'\r\nimport useToast from 'hooks/useToast'\r\nimport { Token } from 'config/constants/types'\r\n\r\ninterface CollectModalProps {\r\n  formattedBalance: string\r\n  fullBalance: string\r\n  earningToken: Token\r\n  earningsDollarValue: string\r\n  sousId: number\r\n  isBnbPool: boolean\r\n  referrer: string\r\n  isCompoundPool?: boolean\r\n  onDismiss?: () => void\r\n}\r\n\r\nconst CollectModal: React.FC<CollectModalProps> = ({\r\n  formattedBalance,\r\n  fullBalance,\r\n  earningToken,\r\n  earningsDollarValue,\r\n  sousId,\r\n  isBnbPool,\r\n  referrer,\r\n  isCompoundPool = false,\r\n  onDismiss,\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const { theme } = useTheme()\r\n  const { toastSuccess, toastError } = useToast()\r\n  const { onReward } = useSousHarvest(sousId, isBnbPool)\r\n  const { onStake } = useSousStake(sousId, isBnbPool)\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const [shouldCompound, setShouldCompound] = useState(isCompoundPool)\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\r\n    <>\r\n      <Text mb=\"12px\">{t('Compound: collect and restake CAKE into pool.')}</Text>\r\n      <Text>{t('Harvest: collect CAKE and send to wallet')}</Text>\r\n    </>,\r\n    { placement: 'bottom-end', tooltipOffset: [20, 10] },\r\n  )\r\n\r\n  const handleHarvestConfirm = async () => {\r\n    setPendingTx(true)\r\n    // compounding\r\n    if (shouldCompound) {\r\n      try {\r\n        await onStake(fullBalance, earningToken.decimals, referrer)\r\n        toastSuccess(\r\n          `${t('Compounded')}!`,\r\n          t('Your %symbol% earnings have been re-invested into the pool!', { symbol: earningToken.symbol }),\r\n        )\r\n        setPendingTx(false)\r\n        onDismiss()\r\n      } catch (e) {\r\n        toastError(t('Canceled'), t('Please try again and confirm the transaction.'))\r\n        setPendingTx(false)\r\n      }\r\n    } else {\r\n      // harvesting\r\n      try {\r\n        await onReward()\r\n        toastSuccess(\r\n          `${t('Harvested')}!`,\r\n          t('Your %symbol% earnings have been sent to your wallet!', { symbol: earningToken.symbol }),\r\n        )\r\n        setPendingTx(false)\r\n        onDismiss()\r\n      } catch (e) {\r\n        toastError(t('Canceled'), t('Please try again and confirm the transaction.'))\r\n        setPendingTx(false)\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      title={`${earningToken.symbol} ${isCompoundPool ? t('Collect') : t('Harvest')}`}\r\n      onDismiss={onDismiss}\r\n      headerBackground={theme.colors.gradients.cardHeader}\r\n    >\r\n      {isCompoundPool && (\r\n        <Flex justifyContent=\"center\" alignItems=\"center\" mb=\"24px\">\r\n          <ButtonMenu\r\n            activeIndex={shouldCompound ? 0 : 1}\r\n            scale=\"sm\"\r\n            variant=\"subtle\"\r\n            onItemClick={(index) => setShouldCompound(!index)}\r\n          >\r\n            <ButtonMenuItem as=\"button\">{t('Compound')}</ButtonMenuItem>\r\n            <ButtonMenuItem as=\"button\">{t('Harvest')}</ButtonMenuItem>\r\n          </ButtonMenu>\r\n          <Flex ml=\"10px\" ref={targetRef}>\r\n            <HelpIcon color=\"textSubtle\" />\r\n          </Flex>\r\n          {tooltipVisible && tooltip}\r\n        </Flex>\r\n      )}\r\n\r\n      <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"24px\">\r\n        <Text>{shouldCompound ? t('Compounding') : t('Harvesting')}:</Text>\r\n        <Flex flexDirection=\"column\">\r\n          <Heading>\r\n            {formattedBalance} {earningToken.symbol}\r\n          </Heading>\r\n          <Text fontSize=\"12px\" color=\"textSubtle\">{`~${earningsDollarValue || 0} USD`}</Text>\r\n        </Flex>\r\n      </Flex>\r\n\r\n      <Button\r\n        mt=\"8px\"\r\n        onClick={handleHarvestConfirm}\r\n        isLoading={pendingTx}\r\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\r\n      >\r\n        {pendingTx ? t('Confirming') : t('Confirm')}\r\n      </Button>\r\n      <Button variant=\"text\" onClick={onDismiss} pb=\"0px\">\r\n        {t('Close Window')}\r\n      </Button>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default CollectModal\r\n","import React from 'react'\r\nimport { Flex, Text, Button, Heading, useModal, Skeleton } from '@heswap/uikit'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Token } from 'config/constants/types'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { getFullDisplayBalance, getBalanceNumber, formatNumber } from 'utils/formatBalance'\r\nimport Balance from 'components/Balance'\r\nimport CollectModal from '../Modals/CollectModal'\r\n\r\ninterface HarvestActionsProps {\r\n  earnings: BigNumber\r\n  earningToken: Token\r\n  sousId: number\r\n  earningTokenPrice: number\r\n  referrer: string\r\n  isBnbPool: boolean\r\n  isLoading?: boolean\r\n}\r\n\r\nconst HarvestActions: React.FC<HarvestActionsProps> = ({\r\n  earnings,\r\n  earningToken,\r\n  sousId,\r\n  isBnbPool,\r\n  earningTokenPrice,\r\n  referrer,\r\n  isLoading = false,\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\r\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\r\n\r\n  const earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\r\n  const earningsDollarValue = formatNumber(earningTokenDollarBalance)\r\n\r\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\r\n  const hasEarnings = earnings.toNumber() > 0\r\n  const isCompoundPool = sousId === 0\r\n\r\n  const [onPresentCollect] = useModal(\r\n    <CollectModal\r\n      formattedBalance={formattedBalance}\r\n      fullBalance={fullBalance}\r\n      earningToken={earningToken}\r\n      earningsDollarValue={earningsDollarValue}\r\n      sousId={sousId}\r\n      isBnbPool={isBnbPool}\r\n      isCompoundPool={isCompoundPool}\r\n      referrer={referrer}\r\n    />,\r\n  )\r\n\r\n  return (\r\n    <Flex flexDirection=\"column\" mb=\"16px\">\r\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\r\n        <Flex flexDirection=\"column\">\r\n          {isLoading ? (\r\n            <Skeleton width=\"80px\" height=\"48px\" />\r\n          ) : (\r\n            <>\r\n              {hasEarnings ? (\r\n                <Balance bold fontSize=\"20px\" decimals={5} value={earningTokenBalance} />\r\n              ) : (\r\n                <Heading color=\"textDisabled\">0</Heading>\r\n              )}\r\n              {earningTokenPrice !== 0 && (\r\n                <Text fontSize=\"12px\" color={hasEarnings ? 'textSubtle' : 'textDisabled'}>\r\n                  ~\r\n                  {hasEarnings ? (\r\n                    <Balance\r\n                      display=\"inline\"\r\n                      fontSize=\"12px\"\r\n                      color=\"textSubtle\"\r\n                      decimals={2}\r\n                      value={earningTokenDollarBalance}\r\n                      unit=\" USD\"\r\n                    />\r\n                  ) : (\r\n                    '0 USD'\r\n                  )}\r\n                </Text>\r\n              )}\r\n            </>\r\n          )}\r\n        </Flex>\r\n        <Flex>\r\n          <Button disabled={!hasEarnings} onClick={onPresentCollect}>\r\n            {isCompoundPool ? t('Collect') : t('Harvest')}\r\n          </Button>\r\n        </Flex>\r\n      </Flex>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default HarvestActions\r\n","import BigNumber from 'bignumber.js'\r\nimport React from 'react'\r\nimport styled from 'styled-components'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport { Flex, Text, Box } from '@heswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { PoolCategory } from 'config/constants/types'\r\nimport { Pool } from 'state/types'\r\nimport ApprovalAction from './ApprovalAction'\r\nimport StakeActions from './StakeActions'\r\nimport HarvestActions from './HarvestActions'\r\n\r\nconst InlineText = styled(Text)`\r\n  display: inline;\r\n`\r\n\r\ninterface CardActionsProps {\r\n  pool: Pool\r\n  stakedBalance: BigNumber\r\n  referrer: string\r\n}\r\n\r\nconst CardActions: React.FC<CardActionsProps> = ({ pool, stakedBalance, referrer }) => {\r\n  const { sousId, stakingToken, earningToken, harvest, poolCategory, userData, earningTokenPrice } = pool\r\n  // Pools using native BNB behave differently than pools using a token\r\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\r\n  const { t } = useTranslation()\r\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\r\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\r\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\r\n  const needsApproval = !allowance.gt(0) && !isBnbPool\r\n  const isStaked = stakedBalance.gt(0)\r\n  const isLoading = !userData\r\n\r\n  return (\r\n    <Flex flexDirection=\"column\">\r\n      <Flex flexDirection=\"column\">\r\n        {harvest && (\r\n          <>\r\n            <Box display=\"inline\">\r\n              <InlineText color=\"secondary\" textTransform=\"uppercase\" bold fontSize=\"12px\">\r\n                {`${earningToken.symbol} `}\r\n              </InlineText>\r\n              <InlineText color=\"textSubtle\" textTransform=\"uppercase\" bold fontSize=\"12px\">\r\n                {t('Earned')}\r\n              </InlineText>\r\n            </Box>\r\n            <HarvestActions\r\n              earnings={earnings}\r\n              earningToken={earningToken}\r\n              sousId={sousId}\r\n              earningTokenPrice={earningTokenPrice}\r\n              isBnbPool={isBnbPool}\r\n              isLoading={isLoading}\r\n              referrer={referrer}\r\n            />\r\n          </>\r\n        )}\r\n        <Box display=\"inline\">\r\n          <InlineText color={isStaked ? 'secondary' : 'textSubtle'} textTransform=\"uppercase\" bold fontSize=\"12px\">\r\n            {isStaked ? stakingToken.symbol : t('Stake')}{' '}\r\n          </InlineText>\r\n          <InlineText color={isStaked ? 'textSubtle' : 'secondary'} textTransform=\"uppercase\" bold fontSize=\"12px\">\r\n            {isStaked ? t('Staked') : `${stakingToken.symbol}`}\r\n          </InlineText>\r\n        </Box>\r\n        {needsApproval ? (\r\n          <ApprovalAction pool={pool} isLoading={isLoading} />\r\n        ) : (\r\n          <StakeActions\r\n            isLoading={isLoading}\r\n            pool={pool}\r\n            stakingTokenBalance={stakingTokenBalance}\r\n            stakedBalance={stakedBalance}\r\n            isBnbPool={isBnbPool}\r\n            isStaked={isStaked}\r\n            referrer={referrer}\r\n          />\r\n        )}\r\n      </Flex>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default CardActions\r\n","import BigNumber from 'bignumber.js'\r\nimport React from 'react'\r\nimport { CardBody, Flex, Text, CardRibbon } from '@heswap/uikit'\r\nimport UnlockButton from 'components/UnlockButton'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport { Pool } from 'state/types'\r\nimport AprRow from './AprRow'\r\nimport { StyledCard, StyledCardInner } from './StyledCard'\r\nimport CardFooter from './CardFooter'\r\nimport StyledCardHeader from './StyledCardHeader'\r\nimport CardActions from './CardActions'\r\n\r\nconst PoolCard: React.FC<{ pool: Pool; account: string; referrer: string }> = ({ pool, account, referrer }) => {\r\n  const { sousId, stakingToken, earningToken, isFinished, userData } = pool\r\n  const { t } = useTranslation()\r\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\r\n  const accountHasStakedBalance = stakedBalance.gt(0)\r\n\r\n  return (\r\n    <StyledCard\r\n      isFinished={isFinished && sousId !== 0}\r\n      ribbon={isFinished && <CardRibbon variantColor=\"textDisabled\" text={t('Finished')} />}\r\n    >\r\n      <StyledCardInner>\r\n        <StyledCardHeader\r\n          isStaking={accountHasStakedBalance}\r\n          earningTokenSymbol={earningToken.symbol}\r\n          stakingTokenSymbol={stakingToken.symbol}\r\n          isFinished={isFinished && sousId !== 0}\r\n        />\r\n        <CardBody>\r\n          <AprRow pool={pool} />\r\n          <Flex mt=\"24px\" flexDirection=\"column\">\r\n            {account ? (\r\n              <CardActions pool={pool} stakedBalance={stakedBalance} referrer={referrer} />\r\n            ) : (\r\n              <>\r\n                <Text mb=\"10px\" textTransform=\"uppercase\" fontSize=\"12px\" color=\"textSubtle\" bold>\r\n                  {t('Start earning')}\r\n                </Text>\r\n                <UnlockButton />\r\n              </>\r\n            )}\r\n          </Flex>\r\n        </CardBody>\r\n        <CardFooter pool={pool} account={account} />\r\n      </StyledCardInner>\r\n    </StyledCard>\r\n  )\r\n}\r\n\r\nexport default PoolCard\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useRouteMatch, Link } from 'react-router-dom'\r\nimport { ButtonMenu, ButtonMenuItem, Toggle, Text, Flex, NotificationDot, useMatchBreakpoints } from '@heswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useTheme from 'hooks/useTheme'\r\nimport ToggleView, { ViewMode } from './ToggleView'\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-radius: ${({ theme }) => theme.radii.card};\r\n\r\n  a {\r\n    padding-left: 12px;\r\n    padding-right: 12px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    margin-left: 16px;\r\n  }\r\n`\r\n\r\nconst StyledMenu = styled(ButtonMenu)`\r\n  border: none;\r\n  border-radius: 8px;\r\n  background-color: rgb(16, 38, 72);\r\n`\r\n\r\nconst PoolTabButtons = ({ stakedOnly, setStakedOnly, hasStakeInFinishedPools, viewMode, setViewMode }) => {\r\n  const { url, isExact } = useRouteMatch()\r\n  const { isXs, isSm } = useMatchBreakpoints()\r\n  const { t } = useTranslation()\r\n  const { theme } = useTheme()\r\n\r\n  const viewModeToggle = <ToggleView viewMode={viewMode} onToggle={(mode: ViewMode) => setViewMode(mode)} />\r\n\r\n  const liveOrFinishedSwitch = (\r\n    <Wrapper>\r\n      <StyledMenu activeIndex={isExact ? 0 : 1} scale=\"sm\" variant=\"subtle\">\r\n        <ButtonMenuItem\r\n          as={Link}\r\n          to={url}\r\n          variant={isExact ? 'primary' : 'text'}\r\n          style={{\r\n            height: '40px',\r\n            display: 'inline-flex',\r\n            alignItems: 'center',\r\n            borderRadius: '8px',\r\n            paddingLeft: '16px',\r\n            paddingRight: '16px',\r\n            backgroundColor: isExact ? theme.colors.primary : 'transparent',\r\n            color: theme.colors[isExact ? 'backgroundAlt' : 'text'],\r\n            fontSize: '14px'\r\n          }}\r\n        >\r\n          {t('Live')}\r\n        </ButtonMenuItem>\r\n        <ButtonMenuItem\r\n          as={Link}\r\n          to={`${url}/history`}\r\n          variant={!isExact ? 'primary' : 'text'}\r\n          style={{\r\n            height: '40px',\r\n            display: 'inline-flex',\r\n            alignItems: 'center',\r\n            borderRadius: '8px',\r\n            paddingLeft: '16px',\r\n            paddingRight: '16px',\r\n            backgroundColor: !isExact ? theme.colors.primary : 'transparent',\r\n            color: theme.colors[!isExact ? 'backgroundAlt' : 'text'],\r\n            fontSize: '14px'\r\n          }}\r\n        >\r\n          <NotificationDot show={hasStakeInFinishedPools}>\r\n            <span>{t('Finished')}</span>\r\n          </NotificationDot>\r\n        </ButtonMenuItem>\r\n      </StyledMenu>\r\n    </Wrapper>\r\n  )\r\n\r\n  const stakedOnlySwitch = (\r\n    <Flex mt={['4px', null, 0, null]} ml={[0, null, '24px', null]} justifyContent=\"center\" alignItems=\"center\">\r\n      <Toggle scale=\"sm\" checked={stakedOnly} onChange={() => setStakedOnly((prev) => !prev)} />\r\n      <Text ml={['4px', '4px', '8px']}>{t('Staked only')}</Text>\r\n    </Flex>\r\n  )\r\n\r\n  if (isXs || isSm) {\r\n    return (\r\n      <Flex\r\n        mb=\"24px\"\r\n        justifyContent=\"space-between\"\r\n        flexWrap=\"wrap\"\r\n        style={{ gap: '8px' }}\r\n      >\r\n        {viewModeToggle}\r\n        {liveOrFinishedSwitch}\r\n        {stakedOnlySwitch}\r\n      </Flex>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Flex\r\n      alignItems=\"center\"\r\n      justifyContent={['space-around', 'space-around', 'flex-start']}\r\n      mb={['24px', '24px', '24px', '0px']}\r\n    >\r\n      {viewModeToggle}\r\n      {liveOrFinishedSwitch}\r\n      {stakedOnlySwitch}\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default PoolTabButtons\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, Button, HelpIcon, Link } from '@heswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nconst ButtonText = styled(Text)`\r\n  display: none;\r\n  ${({ theme }) => theme.mediaQueries.xs} {\r\n    display: block;\r\n  }\r\n`\r\n\r\nconst StyledLink = styled(Link)`\r\n  margin-right: 16px;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n\r\n  &:hover {\r\n    text-decoration: none;\r\n  }\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    flex: 1;\r\n  }\r\n`\r\n\r\nconst HelpButton = () => {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <StyledLink external href=\"https://docs.pancakeswap.finance/syrup-pools/syrup-pool\">\r\n      <Button px={['14px', null, null, null, '20px']} variant=\"subtle\">\r\n        <ButtonText color=\"backgroundAlt\" bold fontSize=\"16px\">\r\n          {t('Help')}\r\n        </ButtonText>\r\n        <HelpIcon color=\"backgroundAlt\" ml={[null, null, null, 0, '6px']} />\r\n      </Button>\r\n    </StyledLink>\r\n  )\r\n}\r\n\r\nexport default HelpButton\r\n","import { Flex, Text } from '@heswap/uikit'\r\nimport styled from 'styled-components'\r\n\r\nconst BaseCell = styled.div`\r\n  color: black;\r\n\r\n  padding: 24px 8px;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n`\r\n\r\nexport const CellContent = styled(Flex)`\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  max-height: 40px;\r\n  ${Text} {\r\n    line-height: 1;\r\n  }\r\n`\r\n\r\nexport default BaseCell\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Text, Image, useMatchBreakpoints } from '@heswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { Pool } from 'state/types'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport BaseCell, { CellContent } from './BaseCell'\r\n\r\ninterface NameCellProps {\r\n  pool: Pool\r\n}\r\n\r\nconst StyledCell = styled(BaseCell)`\r\n  flex: 5;\r\n  flex-direction: row;\r\n  padding-left: 12px;\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    flex: 1 0 150px;\r\n    padding-left: 32px;\r\n  }\r\n`\r\n\r\nconst NameCell: React.FC<NameCellProps> = ({ pool }) => {\r\n  const { t } = useTranslation()\r\n  const { isXs, isSm } = useMatchBreakpoints()\r\n  const { sousId, stakingToken, earningToken, userData, isFinished } = pool\r\n\r\n  const stakingTokenSymbol = stakingToken.symbol\r\n  const earningTokenSymbol = earningToken.symbol\r\n  const iconFile = `${earningTokenSymbol}-${stakingTokenSymbol}.svg`.toLocaleLowerCase()\r\n\r\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\r\n  const isStaked = stakedBalance.gt(0)\r\n  const isManualCakePool = sousId === 0\r\n\r\n  const showStakedTag = isStaked\r\n\r\n  let title = `${t('Earn')} ${earningTokenSymbol}`\r\n  let subtitle = `${t('Stake')} ${stakingTokenSymbol}`\r\n  const showSubtitle = sousId !== 0 || (sousId === 0 && !isXs && !isSm)\r\n\r\n  if (isManualCakePool) {\r\n    title = t('Manual CAKE')\r\n    subtitle = `${t('Earn')} CAKE ${t('Stake').toLocaleLowerCase()} CAKE`\r\n  }\r\n\r\n  return (\r\n    <StyledCell role=\"cell\">\r\n      <Image src={`${process.env.PUBLIC_URL}/images/pools/${iconFile}`} alt=\"icon\" width={40} height={40} mr=\"8px\" />\r\n      <CellContent>\r\n        {showStakedTag && (\r\n          <Text fontSize=\"12px\" bold color={isFinished ? 'failure' : 'secondary'} textTransform=\"uppercase\">\r\n            {t('Staked')}\r\n          </Text>\r\n        )}\r\n        <Text bold={!isXs && !isSm} small={isXs || isSm}>\r\n          {title}\r\n        </Text>\r\n        {showSubtitle && (\r\n          <Text fontSize=\"12px\" color=\"textSubtle\">\r\n            {subtitle}\r\n          </Text>\r\n        )}\r\n      </CellContent>\r\n    </StyledCell>\r\n  )\r\n}\r\n\r\nexport default NameCell\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Skeleton, Text, useTooltip, HelpIcon, Flex, Box, useModal, useMatchBreakpoints } from '@heswap/uikit'\r\nimport { Pool } from 'state/types'\r\nimport BigNumber from 'bignumber.js'\r\nimport { PoolCategory } from 'config/constants/types'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport { formatNumber, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\r\nimport Balance from 'components/Balance'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport BaseCell, { CellContent } from './BaseCell'\r\nimport CollectModal from '../../PoolCard/Modals/CollectModal'\r\n\r\ninterface EarningsCellProps {\r\n  pool: Pool\r\n  account: string\r\n  userDataLoaded: boolean\r\n  referrer: string\r\n}\r\n\r\nconst StyledCell = styled(BaseCell)`\r\n  flex: 4.5;\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    flex: 1 0 120px;\r\n  }\r\n`\r\n\r\nconst HelpIconWrapper = styled.div`\r\n  align-self: center;\r\n`\r\n\r\nconst EarningsCell: React.FC<EarningsCellProps> = ({ pool, account, userDataLoaded, referrer }) => {\r\n  const { t } = useTranslation()\r\n  const { isXs, isSm } = useMatchBreakpoints()\r\n  const { sousId, earningToken, poolCategory, userData, earningTokenPrice } = pool\r\n  const isManualCakePool = sousId === 0\r\n\r\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\r\n  // These will be reassigned later if its Auto CAKE vault\r\n  const earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\r\n  const earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\r\n  const hasEarnings = account && earnings.gt(0)\r\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\r\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\r\n  const earningsDollarValue = formatNumber(earningTokenDollarBalance)\r\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\r\n\r\n  const labelText = t('%asset% Earned', { asset: earningToken.symbol })\r\n\r\n  const [onPresentCollect] = useModal(\r\n    <CollectModal\r\n      formattedBalance={formattedBalance}\r\n      fullBalance={fullBalance}\r\n      earningToken={earningToken}\r\n      earningsDollarValue={earningsDollarValue}\r\n      sousId={sousId}\r\n      isBnbPool={isBnbPool}\r\n      isCompoundPool={isManualCakePool}\r\n      referrer={referrer}\r\n    />,\r\n  )\r\n\r\n  const handleEarningsClick = (event: React.MouseEvent<HTMLElement>) => {\r\n    event.stopPropagation()\r\n    onPresentCollect()\r\n  }\r\n\r\n  return (\r\n    <StyledCell role=\"cell\">\r\n      <CellContent>\r\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\r\n          {labelText}\r\n        </Text>\r\n        {!userDataLoaded && account ? (\r\n          <Skeleton width=\"80px\" height=\"16px\" />\r\n        ) : (\r\n          <>\r\n            <Flex>\r\n              <Box mr=\"8px\" height=\"32px\" onClick={hasEarnings ? handleEarningsClick : undefined}>\r\n                <Balance\r\n                  mt=\"4px\"\r\n                  bold={!isXs && !isSm}\r\n                  fontSize={isXs || isSm ? '14px' : '16px'}\r\n                  color={hasEarnings ? 'primary' : 'textDisabled'}\r\n                  decimals={hasEarnings ? 5 : 1}\r\n                  value={hasEarnings ? earningTokenBalance : 0}\r\n                />\r\n                {hasEarnings ? (\r\n                  <Balance\r\n                    display=\"inline\"\r\n                    fontSize=\"12px\"\r\n                    color={hasEarnings ? 'textSubtle' : 'textDisabled'}\r\n                    decimals={2}\r\n                    value={earningTokenDollarBalance}\r\n                    unit=\" USD\"\r\n                    prefix=\"~\"\r\n                  />\r\n                ) : (\r\n                  <Text mt=\"4px\" fontSize=\"12px\" color={hasEarnings ? 'textSubtle' : 'textDisabled'}>\r\n                    0 USD\r\n                  </Text>\r\n                )}\r\n              </Box>\r\n            </Flex>\r\n          </>\r\n        )}\r\n      </CellContent>\r\n    </StyledCell>\r\n  )\r\n}\r\n\r\nexport default EarningsCell\r\n","import React from 'react'\r\nimport { Flex, useModal, CalculateIcon, IconButton, Skeleton, FlexProps } from '@heswap/uikit'\r\nimport { BASE_EXCHANGE_URL } from 'config'\r\nimport ApyCalculatorModal from 'components/ApyCalculatorModal'\r\nimport Balance from 'components/Balance'\r\nimport { Pool } from 'state/types'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { getAprData } from 'views/Pools/helpers'\r\n\r\ninterface AprProps extends FlexProps {\r\n  pool: Pool\r\n  showIcon: boolean\r\n  performanceFee?: number\r\n}\r\n\r\nconst Apr: React.FC<AprProps> = ({ pool, showIcon, performanceFee = 0, ...props }) => {\r\n  const { stakingToken, earningToken, isFinished, earningTokenPrice, apr } = pool\r\n  const { t } = useTranslation()\r\n\r\n  const { apr: earningsPercentageToDisplay, roundingDecimals, compoundFrequency } = getAprData(pool)\r\n\r\n  const apyModalLink =\r\n    stakingToken.address &&\r\n    `${BASE_EXCHANGE_URL}/#/swap?outputCurrency=${stakingToken.address[process.env.REACT_APP_CHAIN_ID]}`\r\n\r\n  const [onPresentApyModal] = useModal(\r\n    <ApyCalculatorModal\r\n      tokenPrice={earningTokenPrice}\r\n      apr={apr}\r\n      linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\r\n      linkHref={apyModalLink || BASE_EXCHANGE_URL}\r\n      earningTokenSymbol={earningToken.symbol}\r\n      roundingDecimals={roundingDecimals}\r\n      compoundFrequency={compoundFrequency}\r\n      performanceFee={performanceFee}\r\n    />,\r\n  )\r\n\r\n  const openRoiModal = (event: React.MouseEvent<HTMLElement>) => {\r\n    event.stopPropagation()\r\n    onPresentApyModal()\r\n  }\r\n\r\n  return (\r\n    <Flex alignItems=\"center\" justifyContent=\"space-between\" {...props}>\r\n      {earningsPercentageToDisplay || isFinished ? (\r\n        <>\r\n          <Flex>\r\n            <Balance\r\n              onClick={openRoiModal}\r\n              fontSize=\"16px\"\r\n              isDisabled={isFinished}\r\n              value={isFinished ? 0 : earningsPercentageToDisplay}\r\n              decimals={2}\r\n              unit=\"%\"\r\n            />\r\n          </Flex>\r\n          {!isFinished && showIcon && (\r\n            <Flex>\r\n              <IconButton\r\n                onClick={openRoiModal}\r\n                variant=\"text\"\r\n                width=\"20px\"\r\n                height=\"20px\"\r\n                mr={['-14px', '-14px', '0px']}\r\n              >\r\n                <CalculateIcon color=\"textSubtle\" width=\"20px\" />\r\n              </IconButton>\r\n            </Flex>\r\n          )}\r\n        </>\r\n      ) : (\r\n        <Skeleton width=\"80px\" height=\"16px\" />\r\n      )}\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default Apr\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, useMatchBreakpoints } from '@heswap/uikit'\r\nimport { Pool } from 'state/types'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport BaseCell, { CellContent } from './BaseCell'\r\nimport Apr from '../Apr'\r\n\r\ninterface AprCellProps {\r\n  pool: Pool\r\n  performanceFee: number\r\n}\r\n\r\nconst StyledCell = styled(BaseCell)`\r\n  flex: 1 0 50px;\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    flex: 0 0 120px;\r\n  }\r\n`\r\n\r\nconst AprCell: React.FC<AprCellProps> = ({ pool, performanceFee }) => {\r\n  const { t } = useTranslation()\r\n  const { isXs, isSm } = useMatchBreakpoints()\r\n  return (\r\n    <StyledCell role=\"cell\">\r\n      <CellContent>\r\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\r\n          {t('APR')}\r\n        </Text>\r\n        <Apr pool={pool} performanceFee={0} showIcon={!isXs && !isSm} alignItems=\"flex-start\" />\r\n      </CellContent>\r\n    </StyledCell>\r\n  )\r\n}\r\n\r\nexport default AprCell\r\n","import React, { useMemo } from 'react'\r\nimport { Flex, Skeleton, Text } from '@heswap/uikit'\r\nimport styled from 'styled-components'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport BigNumber from 'bignumber.js'\r\nimport Balance from 'components/Balance'\r\nimport { Pool } from 'state/types'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport BaseCell, { CellContent } from './BaseCell'\r\n\r\ninterface TotalStakedCellProps {\r\n  pool: Pool\r\n}\r\n\r\nconst StyledCell = styled(BaseCell)`\r\n  flex: 2 0 100px;\r\n`\r\n\r\nconst TotalStakedCell: React.FC<TotalStakedCellProps> = ({ pool }) => {\r\n  const { t } = useTranslation()\r\n  const { sousId, stakingToken, totalStaked } = pool\r\n\r\n  const isManualCakePool = sousId === 0\r\n\r\n  const totalStakedBalance = useMemo(() => {\r\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\r\n  }, [totalStaked, stakingToken.decimals])\r\n\r\n  return (\r\n    <StyledCell role=\"cell\">\r\n      <CellContent>\r\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\r\n          {t('Total staked')}\r\n        </Text>\r\n        {totalStakedBalance ? (\r\n          <Flex height=\"100%\" alignItems=\"center\">\r\n            <Balance fontSize=\"16px\" value={totalStakedBalance} decimals={0} unit={` ${stakingToken.symbol}`} />\r\n          </Flex>\r\n        ) : (\r\n          <Skeleton width=\"80px\" height=\"16px\" />\r\n        )}\r\n      </CellContent>\r\n    </StyledCell>\r\n  )\r\n}\r\n\r\nexport default TotalStakedCell\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Flex, Link, Skeleton, Text, TimerIcon } from '@heswap/uikit'\r\nimport { getBscScanBlockCountdownUrl } from 'utils/bscscan'\r\nimport { Pool } from 'state/types'\r\nimport { useBlock } from 'state/hooks'\r\nimport Balance from 'components/Balance'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\r\nimport BaseCell, { CellContent } from './BaseCell'\r\n\r\ninterface FinishCellProps {\r\n  pool: Pool\r\n}\r\n\r\nconst StyledCell = styled(BaseCell)`\r\n  flex: 2 0 100px;\r\n`\r\n\r\nconst EndsInCell: React.FC<FinishCellProps> = ({ pool }) => {\r\n  const { sousId, totalStaked, endBlock, isFinished } = pool\r\n  const { currentBlock } = useBlock()\r\n  const { t } = useTranslation()\r\n\r\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\r\n    getPoolBlockInfo(pool, currentBlock)\r\n\r\n  const isCakePool = sousId === 0\r\n\r\n  const renderBlocks = shouldShowBlockCountdown ? (\r\n    <Flex alignItems=\"center\">\r\n      <Flex flex=\"1.3\">\r\n        <Balance fontSize=\"16px\" value={blocksToDisplay} decimals={0} />\r\n        <Text ml=\"4px\" textTransform=\"lowercase\">\r\n          {t('Blocks')}\r\n        </Text>\r\n      </Flex>\r\n      <Flex flex=\"1\">\r\n        <Link external href={getBscScanBlockCountdownUrl(endBlock)} onClick={(e) => e.stopPropagation()}>\r\n          <TimerIcon ml=\"4px\" />\r\n        </Link>\r\n      </Flex>\r\n    </Flex>\r\n  ) : (\r\n    <Text>-</Text>\r\n  )\r\n\r\n  // A bit hacky way to determine if public data is loading relying on totalStaked\r\n  // Opted to go for this since we don't really need a separate publicDataLoaded flag\r\n  // anywhere else\r\n  const isLoadingPublicData = !totalStaked.gt(0) || !currentBlock || (!blocksRemaining && !blocksUntilStart)\r\n  const showLoading = isLoadingPublicData && !isCakePool && !isFinished\r\n  return (\r\n    <StyledCell role=\"cell\">\r\n      <CellContent>\r\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\r\n          {hasPoolStarted || !shouldShowBlockCountdown ? t('Ends in') : t('Starts in')}\r\n        </Text>\r\n        {showLoading ? <Skeleton width=\"80px\" height=\"16px\" /> : renderBlocks}\r\n      </CellContent>\r\n    </StyledCell>\r\n  )\r\n}\r\n\r\nexport default EndsInCell\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, ChevronDownIcon } from '@heswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport BaseCell from './BaseCell'\r\n\r\ninterface ExpandActionCellProps {\r\n  expanded: boolean\r\n  isFullLayout: boolean\r\n}\r\n\r\nconst StyledCell = styled(BaseCell)`\r\n  flex-direction: row;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n  flex: 1;\r\n  padding-right: 12px;\r\n  padding-left: 0px;\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    flex: 0 0 120px;\r\n    padding-right: 32px;\r\n    padding-left: 8px;\r\n  }\r\n`\r\n\r\nconst ArrowIcon = styled(ChevronDownIcon)<{ toggled: boolean }>`\r\n  transform: ${({ toggled }) => (toggled ? 'rotate(180deg)' : 'rotate(0)')};\r\n  height: 24px;\r\n`\r\n\r\nconst TotalStakedCell: React.FC<ExpandActionCellProps> = ({ expanded, isFullLayout }) => {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <StyledCell role=\"cell\">\r\n      {isFullLayout && (\r\n        <Text color=\"primary\" bold>\r\n          {expanded ? t('Hide') : t('Details')}\r\n        </Text>\r\n      )}\r\n      <ArrowIcon color=\"primary\" toggled={expanded} />\r\n    </StyledCell>\r\n  )\r\n}\r\n\r\nexport default TotalStakedCell\r\n","import styled from 'styled-components'\r\n\r\nexport const ActionContainer = styled.div`\r\n  padding: 16px;\r\n  border: 2px solid ${({ theme }) => theme.colors.input};\r\n  border-radius: ${({ theme }) => theme.radii.card};\r\n  flex-grow: 1;\r\n  flex-basis: 0;\r\n  margin-bottom: 16px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    margin-left: 12px;\r\n    margin-right: 12px;\r\n    margin-bottom: 0;\r\n    height: 130px;\r\n    max-height: 130px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.xl} {\r\n    margin-left: 32px;\r\n    margin-right: 0;\r\n    margin-bottom: 0;\r\n    height: 130px;\r\n    max-height: 130px;\r\n  }\r\n`\r\n\r\nexport const ActionTitles = styled.div`\r\n  font-weight: 600;\r\n  font-size: 12px;\r\n`\r\n\r\nexport const ActionContent = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button, Text, useModal, Flex, TooltipText, useTooltip, Skeleton } from '@heswap/uikit'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { PoolCategory } from 'config/constants/types'\r\nimport { formatNumber, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport Balance from 'components/Balance'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport { Pool } from 'state/types'\r\n\r\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\r\nimport CollectModal from '../../PoolCard/Modals/CollectModal'\r\n\r\ninterface HarvestActionProps extends Pool {\r\n  userDataLoaded: boolean\r\n  referrer: string\r\n}\r\n\r\nconst StyledButton = styled(Button)`\r\n  border-radius: 8px;\r\n`\r\n\r\nconst HarvestAction: React.FunctionComponent<HarvestActionProps> = ({\r\n  sousId,\r\n  poolCategory,\r\n  earningToken,\r\n  userData,\r\n  userDataLoaded,\r\n  earningTokenPrice,\r\n  referrer,\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n\r\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\r\n  // These will be reassigned later if its Auto CAKE vault\r\n  const earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\r\n  const earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\r\n  const hasEarnings = earnings.gt(0)\r\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\r\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\r\n  const earningsDollarValue = formatNumber(earningTokenDollarBalance)\r\n  const isCompoundPool = sousId === 0\r\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\r\n\r\n  const displayBalance = hasEarnings ? earningTokenBalance : 0\r\n  const [onPresentCollect] = useModal(\r\n    <CollectModal\r\n      formattedBalance={formattedBalance}\r\n      fullBalance={fullBalance}\r\n      earningToken={earningToken}\r\n      earningsDollarValue={earningsDollarValue}\r\n      sousId={sousId}\r\n      isBnbPool={isBnbPool}\r\n      isCompoundPool={isCompoundPool}\r\n      referrer={referrer}\r\n    />,\r\n  )\r\n\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\r\n    t('Subtracted automatically from each yield harvest and burned.'),\r\n    { placement: 'bottom-start' },\r\n  )\r\n\r\n  const actionTitle = (\r\n    <>\r\n      <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\r\n        {earningToken.symbol}{' '}\r\n      </Text>\r\n      <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\r\n        {t('Earned')}\r\n      </Text>\r\n    </>\r\n  )\r\n\r\n  if (!account) {\r\n    return (\r\n      <ActionContainer>\r\n        <ActionTitles>{actionTitle}</ActionTitles>\r\n        <ActionContent>\r\n          <Balance pt=\"8px\" lineHeight=\"1\" bold fontSize=\"20px\" decimals={5} value={0} />\r\n          <StyledButton disabled>{isCompoundPool ? t('Collect') : t('Harvest')}</StyledButton>\r\n        </ActionContent>\r\n      </ActionContainer>\r\n    )\r\n  }\r\n\r\n  if (!userDataLoaded) {\r\n    return (\r\n      <ActionContainer>\r\n        <ActionTitles>{actionTitle}</ActionTitles>\r\n        <ActionContent>\r\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\r\n        </ActionContent>\r\n      </ActionContainer>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <ActionContainer>\r\n      <ActionTitles>{actionTitle}</ActionTitles>\r\n      <ActionContent>\r\n        <Flex flex=\"1\" pt=\"16px\" flexDirection=\"column\" alignSelf=\"flex-start\">\r\n          <Balance lineHeight=\"1\" bold fontSize=\"20px\" decimals={5} value={displayBalance} />\r\n          {hasEarnings ? (\r\n            <Balance\r\n              display=\"inline\"\r\n              fontSize=\"12px\"\r\n              color={hasEarnings ? 'textSubtle' : 'textDisabled'}\r\n              decimals={2}\r\n              value={earningTokenDollarBalance}\r\n              unit=\" USD\"\r\n              prefix=\"~\"\r\n            />\r\n          ) : (\r\n            <Text fontSize=\"12px\" color={hasEarnings ? 'textSubtle' : 'textDisabled'}>\r\n              0 USD\r\n            </Text>\r\n          )}\r\n        </Flex>\r\n        <Button disabled={!hasEarnings} onClick={onPresentCollect}>\r\n          {isCompoundPool ? t('Collect') : t('Harvest')}\r\n        </Button>\r\n      </ActionContent>\r\n    </ActionContainer>\r\n  )\r\n}\r\n\r\nexport default HarvestAction\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Button, useModal, IconButton, AddIcon, MinusIcon, Skeleton, useTooltip, Flex, Text } from '@heswap/uikit'\r\nimport UnlockButton from 'components/UnlockButton'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { Pool } from 'state/types'\r\nimport Balance from 'components/Balance'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useSousApprove } from 'hooks/useApprove'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { PoolCategory } from 'config/constants/types'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport { getAddress } from 'utils/addressHelpers'\r\nimport { useERC20 } from 'hooks/useContract'\r\nimport { convertSharesToCake } from 'views/Pools/helpers'\r\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\r\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\r\nimport StakeModal from '../../PoolCard/Modals/StakeModal'\r\n\r\nconst IconButtonWrapper = styled.div`\r\n  display: flex;\r\n`\r\n\r\ninterface StackedActionProps {\r\n  pool: Pool\r\n  userDataLoaded: boolean\r\n  referrer: string\r\n}\r\n\r\nconst Staked: React.FunctionComponent<StackedActionProps> = ({ pool, userDataLoaded, referrer }) => {\r\n  const { sousId, stakingToken, earningToken, stakingLimit, isFinished, poolCategory, userData, stakingTokenPrice } =\r\n    pool\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n\r\n  const stakingTokenContract = useERC20(stakingToken.address ? getAddress(stakingToken.address) : '')\r\n  const { handleApprove: handlePoolApprove, requestedApproval: requestedPoolApproval } = useSousApprove(\r\n    stakingTokenContract,\r\n    sousId,\r\n    earningToken.symbol,\r\n  )\r\n\r\n  const handleApprove = handlePoolApprove\r\n  const requestedApproval = requestedPoolApproval\r\n\r\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\r\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\r\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\r\n  const isNotVaultAndHasStake = stakedBalance.gt(0)\r\n\r\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\r\n\r\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\r\n  const stakedTokenDollarBalance = getBalanceNumber(\r\n    stakedBalance.multipliedBy(stakingTokenPrice),\r\n    stakingToken.decimals,\r\n  )\r\n\r\n  const needsApproval = !allowance.gt(0) && !isBnbPool\r\n\r\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\r\n\r\n  const [onPresentStake] = useModal(\r\n    <StakeModal\r\n      isBnbPool={isBnbPool}\r\n      pool={pool}\r\n      stakingTokenBalance={stakingTokenBalance}\r\n      stakingTokenPrice={stakingTokenPrice}\r\n      referrer={referrer}\r\n    />,\r\n  )\r\n\r\n  const [onPresentUnstake] = useModal(\r\n    <StakeModal\r\n      stakingTokenBalance={stakingTokenBalance}\r\n      isBnbPool={isBnbPool}\r\n      pool={pool}\r\n      stakingTokenPrice={stakingTokenPrice}\r\n      referrer={referrer}\r\n      isRemovingStake\r\n    />,\r\n  )\r\n\r\n  const onStake = () => {\r\n    onPresentStake()\r\n  }\r\n\r\n  const onUnstake = () => {\r\n    onPresentUnstake()\r\n  }\r\n\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\r\n    t(\"You've already staked the maximum amount you can stake in this pool!\"),\r\n    { placement: 'bottom' },\r\n  )\r\n\r\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\r\n\r\n  if (!account) {\r\n    return (\r\n      <ActionContainer>\r\n        <ActionTitles>\r\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\r\n            {t('Start staking')}\r\n          </Text>\r\n        </ActionTitles>\r\n        <ActionContent>\r\n          <UnlockButton width=\"100%\" />\r\n        </ActionContent>\r\n      </ActionContainer>\r\n    )\r\n  }\r\n\r\n  if (!userDataLoaded) {\r\n    return (\r\n      <ActionContainer>\r\n        <ActionTitles>\r\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\r\n            {t('Start staking')}\r\n          </Text>\r\n        </ActionTitles>\r\n        <ActionContent>\r\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\r\n        </ActionContent>\r\n      </ActionContainer>\r\n    )\r\n  }\r\n\r\n  if (needsApproval) {\r\n    return (\r\n      <ActionContainer>\r\n        <ActionTitles>\r\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\r\n            {t('Enable pool')}\r\n          </Text>\r\n        </ActionTitles>\r\n        <ActionContent>\r\n          <Button width=\"100%\" disabled={requestedApproval} onClick={handleApprove} variant=\"secondary\">\r\n            {t('Enable')}\r\n          </Button>\r\n        </ActionContent>\r\n      </ActionContainer>\r\n    )\r\n  }\r\n\r\n  // Wallet connected, user data loaded and approved\r\n  if (isNotVaultAndHasStake) {\r\n    return (\r\n      <ActionContainer>\r\n        <ActionTitles>\r\n          <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\r\n            {stakingToken.symbol}{' '}\r\n          </Text>\r\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\r\n            {t('Staked')}\r\n          </Text>\r\n        </ActionTitles>\r\n        <ActionContent>\r\n          <Flex flex=\"1\" pt=\"16px\" flexDirection=\"column\" alignSelf=\"flex-start\">\r\n            <Balance lineHeight=\"1\" bold fontSize=\"20px\" decimals={5} value={stakedTokenBalance} />\r\n            <Balance\r\n              fontSize=\"12px\"\r\n              display=\"inline\"\r\n              color=\"textSubtle\"\r\n              decimals={2}\r\n              value={stakedTokenDollarBalance}\r\n              unit=\" USD\"\r\n              prefix=\"~\"\r\n            />\r\n          </Flex>\r\n          <IconButtonWrapper>\r\n            <IconButton variant=\"secondary\" onClick={onUnstake} mr=\"6px\">\r\n              <MinusIcon color=\"primary\" width=\"14px\" />\r\n            </IconButton>\r\n            {reachStakingLimit ? (\r\n              <span ref={targetRef}>\r\n                <IconButton variant=\"secondary\" disabled>\r\n                  <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\r\n                </IconButton>\r\n              </span>\r\n            ) : (\r\n              <IconButton\r\n                variant=\"secondary\"\r\n                onClick={stakingTokenBalance.gt(0) ? onStake : onPresentTokenRequired}\r\n                disabled={isFinished}\r\n              >\r\n                <AddIcon color=\"primary\" width=\"14px\" />\r\n              </IconButton>\r\n            )}\r\n          </IconButtonWrapper>\r\n          {tooltipVisible && tooltip}\r\n        </ActionContent>\r\n      </ActionContainer>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <ActionContainer>\r\n      <ActionTitles>\r\n        <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\r\n          {t('Stake')}{' '}\r\n        </Text>\r\n        <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\r\n          {stakingToken.symbol}\r\n        </Text>\r\n      </ActionTitles>\r\n      <ActionContent>\r\n        <Button\r\n          width=\"100%\"\r\n          onClick={stakingTokenBalance.gt(0) ? onStake : onPresentTokenRequired}\r\n          variant=\"secondary\"\r\n          disabled={isFinished}\r\n        >\r\n          {t('Stake')}\r\n        </Button>\r\n      </ActionContent>\r\n    </ActionContainer>\r\n  )\r\n}\r\n\r\nexport default Staked\r\n","import React from 'react'\r\nimport styled, { keyframes, css } from 'styled-components'\r\nimport {\r\n  Box,\r\n  Button,\r\n  Flex,\r\n  HelpIcon,\r\n  Link,\r\n  LinkExternal,\r\n  MetamaskIcon,\r\n  Skeleton,\r\n  Text,\r\n  TimerIcon,\r\n  useTooltip,\r\n} from '@heswap/uikit'\r\nimport { BASE_URL } from 'config'\r\nimport { getBscScanBlockCountdownUrl } from 'utils/bscscan'\r\nimport { useBlock } from 'state/hooks'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Pool } from 'state/types'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport Balance from 'components/Balance'\r\nimport { CompoundingPoolTag, ManualPoolTag } from 'components/Tags'\r\nimport { getAddress } from 'utils/addressHelpers'\r\nimport { registerToken } from 'utils/wallet'\r\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\r\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\r\nimport Harvest from './Harvest'\r\nimport Stake from './Stake'\r\nimport Apr from '../Apr'\r\n\r\nconst expandAnimation = keyframes`\r\n  from {\r\n    max-height: 0px;\r\n  }\r\n  to {\r\n    max-height: 700px;\r\n  }\r\n`\r\n\r\nconst collapseAnimation = keyframes`\r\n  from {\r\n    max-height: 700px;\r\n  }\r\n  to {\r\n    max-height: 0px;\r\n  }\r\n`\r\n\r\nconst StyledActionPanel = styled.div<{ expanded: boolean }>`\r\n  animation: ${({ expanded }) =>\r\n    expanded\r\n      ? css`\r\n          ${expandAnimation} 300ms linear forwards\r\n        `\r\n      : css`\r\n          ${collapseAnimation} 300ms linear forwards\r\n        `};\r\n  overflow: hidden;\r\n  background: ${({ theme }) => theme.colors.dropdown};\r\n  display: flex;\r\n  flex-direction: column-reverse;\r\n  justify-content: center;\r\n  padding: 12px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    flex-direction: row;\r\n    padding: 16px 32px;\r\n  }\r\n`\r\n\r\nconst ActionContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    flex-direction: row;\r\n    align-items: center;\r\n    flex-grow: 1;\r\n    flex-basis: 0;\r\n  }\r\n`\r\n\r\ntype MediaBreakpoints = {\r\n  isXs: boolean\r\n  isSm: boolean\r\n  isMd: boolean\r\n  isLg: boolean\r\n  isXl: boolean\r\n}\r\n\r\ninterface ActionPanelProps {\r\n  account: string\r\n  pool: Pool\r\n  userDataLoaded: boolean\r\n  expanded: boolean\r\n  breakpoints: MediaBreakpoints\r\n  referrer: string\r\n}\r\n\r\nconst InfoSection = styled(Box)`\r\n  flex-grow: 0;\r\n  flex-shrink: 0;\r\n  flex-basis: auto;\r\n  padding: 8px 8px;\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    padding: 0;\r\n    flex-basis: 230px;\r\n  }\r\n`\r\n\r\nconst ActionPanel: React.FC<ActionPanelProps> = ({\r\n  account,\r\n  pool,\r\n  userDataLoaded,\r\n  expanded,\r\n  breakpoints,\r\n  referrer,\r\n}) => {\r\n  const { sousId, stakingToken, earningToken, totalStaked, endBlock, stakingLimit } = pool\r\n  const { t } = useTranslation()\r\n  const { currentBlock } = useBlock()\r\n  const { isXs, isSm, isMd } = breakpoints\r\n  const showSubtitle = (isXs || isSm) && sousId === 0\r\n\r\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\r\n    getPoolBlockInfo(pool, currentBlock)\r\n\r\n  const isMetaMaskInScope = !!(window as WindowChain).ethereum?.isMetaMask\r\n  const tokenAddress = earningToken.address ? getAddress(earningToken.address) : ''\r\n  const imageSrc = `${BASE_URL}/images/tokens/${tokenAddress}.png`\r\n\r\n  const getTotalStakedBalance = () => {\r\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\r\n  }\r\n\r\n  const {\r\n    targetRef: totalStakedTargetRef,\r\n    tooltip: totalStakedTooltip,\r\n    tooltipVisible: totalStakedTooltipVisible,\r\n  } = useTooltip(t('Total amount of %symbol% staked in this pool', { symbol: stakingToken.symbol }), {\r\n    placement: 'bottom',\r\n  })\r\n\r\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually.')\r\n\r\n  const {\r\n    targetRef: tagTargetRef,\r\n    tooltip: tagTooltip,\r\n    tooltipVisible: tagTooltipVisible,\r\n  } = useTooltip(manualTooltipText, {\r\n    placement: 'bottom-start',\r\n  })\r\n\r\n  const maxStakeRow = stakingLimit.gt(0) ? (\r\n    <Flex mb=\"8px\" justifyContent=\"space-between\">\r\n      <Text>{t('Max. stake per user')}:</Text>\r\n      <Text>{`${getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0)} ${stakingToken.symbol}`}</Text>\r\n    </Flex>\r\n  ) : null\r\n\r\n  const blocksRow =\r\n    blocksRemaining || blocksUntilStart ? (\r\n      <Flex mb=\"8px\" justifyContent=\"space-between\">\r\n        <Text>{hasPoolStarted ? t('Ends in') : t('Starts in')}:</Text>\r\n        <Flex>\r\n          <Link external href={getBscScanBlockCountdownUrl(endBlock)}>\r\n            <Balance fontSize=\"16px\" value={blocksToDisplay} decimals={0} color=\"primary\" />\r\n            <Text ml=\"4px\" color=\"primary\" textTransform=\"lowercase\">\r\n              {t('Blocks')}\r\n            </Text>\r\n            <TimerIcon ml=\"4px\" color=\"primary\" />\r\n          </Link>\r\n        </Flex>\r\n      </Flex>\r\n    ) : (\r\n      <Skeleton width=\"56px\" height=\"16px\" />\r\n    )\r\n\r\n  const aprRow = (\r\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"8px\">\r\n      <Text>{t('APR')}:</Text>\r\n      <Apr pool={pool} showIcon performanceFee={0} />\r\n    </Flex>\r\n  )\r\n\r\n  const totalStakedRow = (\r\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"8px\">\r\n      <Text maxWidth={['50px', '100%']}>{t('Total staked')}:</Text>\r\n      <Flex alignItems=\"center\">\r\n        {totalStaked ? (\r\n          <>\r\n            <Balance fontSize=\"16px\" value={getTotalStakedBalance()} decimals={0} unit={` ${stakingToken.symbol}`} />\r\n            <span ref={totalStakedTargetRef}>\r\n              <HelpIcon color=\"textSubtle\" width=\"20px\" ml=\"6px\" />\r\n            </span>\r\n          </>\r\n        ) : (\r\n          <Skeleton width=\"56px\" height=\"16px\" />\r\n        )}\r\n        {totalStakedTooltipVisible && totalStakedTooltip}\r\n      </Flex>\r\n    </Flex>\r\n  )\r\n\r\n  return (\r\n    <StyledActionPanel expanded={expanded}>\r\n      <InfoSection>\r\n        {maxStakeRow}\r\n        {(isXs || isSm) && aprRow}\r\n        {(isXs || isSm || isMd) && totalStakedRow}\r\n        {shouldShowBlockCountdown && blocksRow}\r\n        <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\r\n          <LinkExternal href={`https://pancakeswap.info/token/${getAddress(earningToken.address)}`} bold={false}>\r\n            {t('Info site')}\r\n          </LinkExternal>\r\n        </Flex>\r\n        <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\r\n          <LinkExternal href={earningToken.projectLink} bold={false}>\r\n            {t('Project site')}\r\n          </LinkExternal>\r\n        </Flex>\r\n        {account && isMetaMaskInScope && tokenAddress && (\r\n          <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\r\n            <Button\r\n              variant=\"text\"\r\n              p=\"0\"\r\n              height=\"auto\"\r\n              onClick={() => registerToken(tokenAddress, earningToken.symbol, earningToken.decimals, imageSrc)}\r\n            >\r\n              <Text color=\"primary\">{t('Add to Metamask')}</Text>\r\n              <MetamaskIcon ml=\"4px\" />\r\n            </Button>\r\n          </Flex>\r\n        )}\r\n        <ManualPoolTag />\r\n        {tagTooltipVisible && tagTooltip}\r\n        <span ref={tagTargetRef}>\r\n          <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\r\n        </span>\r\n      </InfoSection>\r\n      <ActionContainer>\r\n        {showSubtitle && (\r\n          <Text mt=\"4px\" mb=\"16px\" color=\"textSubtle\">\r\n            {`${t('Earn')} CAKE ${t('Stake').toLocaleLowerCase()} CAKE`}\r\n          </Text>\r\n        )}\r\n        <Harvest {...pool} userDataLoaded={userDataLoaded} referrer={referrer} />\r\n        <Stake pool={pool} userDataLoaded={userDataLoaded} referrer={referrer} />\r\n      </ActionContainer>\r\n    </StyledActionPanel>\r\n  )\r\n}\r\n\r\nexport default ActionPanel\r\n","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { useMatchBreakpoints } from '@heswap/uikit'\r\nimport { Pool } from 'state/types'\r\nimport useDelayedUnmount from 'hooks/useDelayedUnmount'\r\nimport NameCell from './Cells/NameCell'\r\nimport EarningsCell from './Cells/EarningsCell'\r\nimport AprCell from './Cells/AprCell'\r\nimport TotalStakedCell from './Cells/TotalStakedCell'\r\nimport EndsInCell from './Cells/EndsInCell'\r\nimport ExpandActionCell from './Cells/ExpandActionCell'\r\nimport ActionPanel from './ActionPanel/ActionPanel'\r\n\r\ninterface PoolRowProps {\r\n  pool: Pool\r\n  account: string\r\n  userDataLoaded: boolean\r\n  referrer: string\r\n}\r\n\r\nconst StyledRow = styled.div`\r\n  background-color: transparent;\r\n  display: flex;\r\n  cursor: pointer;\r\n`\r\n\r\nconst PoolRow: React.FC<PoolRowProps> = ({ pool, account, userDataLoaded, referrer }) => {\r\n  const { isXs, isSm, isMd, isLg, isXl } = useMatchBreakpoints()\r\n  const [expanded, setExpanded] = useState(false)\r\n  const shouldRenderActionPanel = useDelayedUnmount(expanded, 300)\r\n\r\n  const toggleExpanded = () => {\r\n    setExpanded((prev) => !prev)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <StyledRow role=\"row\" onClick={toggleExpanded}>\r\n        <NameCell pool={pool} />\r\n        <EarningsCell pool={pool} account={account} userDataLoaded={userDataLoaded} referrer={referrer} />\r\n        <AprCell pool={pool} performanceFee={0} />\r\n        {(isLg || isXl) && <TotalStakedCell pool={pool} />}\r\n        {isXl && <EndsInCell pool={pool} />}\r\n        <ExpandActionCell expanded={expanded} isFullLayout={isMd || isLg || isXl} />\r\n      </StyledRow>\r\n      {shouldRenderActionPanel && (\r\n        <ActionPanel\r\n          account={account}\r\n          pool={pool}\r\n          userDataLoaded={userDataLoaded}\r\n          expanded={expanded}\r\n          breakpoints={{ isXs, isSm, isMd, isLg, isXl }}\r\n          referrer={referrer}\r\n        />\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PoolRow\r\n","import React, { useRef } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button, ChevronUpIcon } from '@heswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { Pool } from 'state/types'\r\nimport PoolRow from './PoolRow'\r\n\r\ninterface PoolsTableProps {\r\n  pools: Pool[]\r\n  userDataLoaded: boolean\r\n  account: string\r\n  referrer: string\r\n}\r\n\r\nconst StyledTable = styled.div`\r\n  border-radius: ${({ theme }) => theme.radii.card};\r\n\r\n  background-color: ${({ theme }) => theme.card.background};\r\n  > div:not(:last-child) {\r\n    border-bottom: 2px solid ${({ theme }) => theme.colors.disabled};\r\n  }\r\n`\r\n\r\nconst StyledTableBorder = styled.div`\r\n  border-radius: ${({ theme }) => theme.radii.card};\r\n  background-color: ${({ theme }) => theme.colors.cardBorder};\r\n  padding: 1px 1px 3px 1px;\r\n  background-size: 400% 400%;\r\n`\r\n\r\nconst ScrollButtonContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  padding-top: 5px;\r\n  padding-bottom: 5px;\r\n`\r\n\r\nconst PoolsTable: React.FC<PoolsTableProps> = ({ pools, userDataLoaded, account, referrer }) => {\r\n  const { t } = useTranslation()\r\n  const tableWrapperEl = useRef<HTMLDivElement>(null)\r\n  const scrollToTop = (): void => {\r\n    tableWrapperEl.current.scrollIntoView({\r\n      behavior: 'smooth',\r\n    })\r\n  }\r\n  return (\r\n    <StyledTableBorder>\r\n      <StyledTable role=\"table\" ref={tableWrapperEl}>\r\n        {pools.map((pool) => (\r\n          <PoolRow\r\n            key={pool.sousId}\r\n            pool={pool}\r\n            account={account}\r\n            userDataLoaded={userDataLoaded}\r\n            referrer={referrer}\r\n          />\r\n        ))}\r\n        <ScrollButtonContainer>\r\n          <Button variant=\"text\" onClick={scrollToTop}>\r\n            {t('To Top')}\r\n            <ChevronUpIcon color=\"primary\" />\r\n          </Button>\r\n        </ScrollButtonContainer>\r\n      </StyledTable>\r\n    </StyledTableBorder>\r\n  )\r\n}\r\n\r\nexport default PoolsTable\r\n","import React, { useEffect, useMemo, useRef, useState } from 'react'\r\nimport { useLocation } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { Box, Flex, Heading, Image, Text } from '@heswap/uikit'\r\nimport orderBy from 'lodash/orderBy'\r\nimport partition from 'lodash/partition'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport usePersistState from 'hooks/usePersistState'\r\nimport { usePools, useFetchPublicPoolsData, usePollFarmsData } from 'state/hooks'\r\nimport { latinise } from 'utils/latinise'\r\nimport { isAddress } from 'utils/addressHelpers'\r\nimport { AddressZero } from '@ethersproject/constants'\r\nimport FlexLayout from 'components/layout/Flex'\r\nimport Page from 'components/layout/Page'\r\nimport PageHeader from 'components/PageHeader'\r\nimport SearchInput from 'components/SearchInput'\r\nimport Select, { OptionProps } from 'components/Select'\r\nimport { Pool } from 'state/types'\r\nimport PoolCard from './components/PoolCard'\r\nimport PoolTabButtons from './components/PoolTabButtons'\r\nimport HelpButton from './components/HelpButton'\r\nimport PoolsTable from './components/PoolsTable/PoolsTable'\r\nimport { ViewMode } from './components/ToggleView'\r\nimport { getAprData } from './helpers'\r\n\r\nconst CardLayout = styled(FlexLayout)`\r\n  justify-content: center;\r\n`\r\n\r\nconst PoolControls = styled(Flex)`\r\n  gap: 8px;\r\n  flex-direction: column;\r\n  margin-bottom: 24px;\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    flex-direction: row;\r\n  }\r\n`\r\n\r\nconst SearchSortContainer = styled(Flex)`\r\n  gap: 10px;\r\n  justify-content: space-between;\r\n`\r\n\r\nconst ControlStretch = styled(Flex)`\r\n  > div {\r\n    flex: 1;\r\n  }\r\n`\r\n\r\nconst NUMBER_OF_POOLS_VISIBLE = 12\r\n\r\nconst Title = styled(Heading).attrs({\r\n  as: 'h1',\r\n  scale: 'xl',\r\n})`\r\n  color: ${({ theme }) => theme.colors.backgroundAlt};\r\n  font-weight: 600;\r\n  line-height: 1.4;\r\n`\r\n\r\nconst Description = styled(Heading).attrs({\r\n  as: 'h2',\r\n  scale: 'md',\r\n  color: 'textSubtle',\r\n})`\r\n  font-weight: 300;\r\n  line-height: 1.4;\r\n`\r\n\r\nconst Pools: React.FC = () => {\r\n  const location = useLocation()\r\n  let referrer = AddressZero\r\n  if (location.pathname.substring(7) && isAddress(location.pathname.substring(7))) {\r\n    referrer = location.pathname.substring(7)\r\n    console.log(`referral link, ref=${referrer}`)\r\n  } else {\r\n    console.log('not referral link')\r\n  }\r\n\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n  const { pools, userDataLoaded } = usePools(account)\r\n  const [stakedOnly, setStakedOnly] = usePersistState(false, { localStorageKey: 'pancake_pool_staked' })\r\n  const [numberOfPoolsVisible, setNumberOfPoolsVisible] = useState(NUMBER_OF_POOLS_VISIBLE)\r\n  const [observerIsSet, setObserverIsSet] = useState(false)\r\n  const loadMoreRef = useRef<HTMLDivElement>(null)\r\n  const [viewMode, setViewMode] = usePersistState(ViewMode.TABLE, { localStorageKey: 'pancake_farm_view' })\r\n  const [searchQuery, setSearchQuery] = useState('')\r\n  const [sortOption, setSortOption] = useState('hot')\r\n\r\n  // TODO aren't arrays in dep array checked just by reference, i.e. it will rerender every time reference changes?\r\n  const [finishedPools, openPools] = useMemo(() => partition(pools, (pool) => pool.isFinished), [pools])\r\n  const stakedOnlyFinishedPools = useMemo(\r\n    () =>\r\n      finishedPools.filter((pool) => {\r\n        return pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)\r\n      }),\r\n    [finishedPools],\r\n  )\r\n  const stakedOnlyOpenPools = useMemo(\r\n    () =>\r\n      openPools.filter((pool) => {\r\n        return pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)\r\n      }),\r\n    [openPools],\r\n  )\r\n  const hasStakeInFinishedPools = stakedOnlyFinishedPools.length > 0\r\n\r\n  usePollFarmsData()\r\n  useFetchPublicPoolsData()\r\n\r\n  useEffect(() => {\r\n    const showMorePools = (entries) => {\r\n      const [entry] = entries\r\n      if (entry.isIntersecting) {\r\n        setNumberOfPoolsVisible((poolsCurrentlyVisible) => poolsCurrentlyVisible + NUMBER_OF_POOLS_VISIBLE)\r\n      }\r\n    }\r\n\r\n    if (!observerIsSet) {\r\n      const loadMoreObserver = new IntersectionObserver(showMorePools, {\r\n        rootMargin: '0px',\r\n        threshold: 1,\r\n      })\r\n      loadMoreObserver.observe(loadMoreRef.current)\r\n      setObserverIsSet(true)\r\n    }\r\n  }, [observerIsSet])\r\n\r\n  const showFinishedPools = location.pathname.includes('history')\r\n\r\n  const handleChangeSearchQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setSearchQuery(event.target.value)\r\n  }\r\n\r\n  const handleSortOptionChange = (option: OptionProps): void => {\r\n    setSortOption(option.value)\r\n  }\r\n\r\n  const sortPools = (poolsToSort: Pool[]) => {\r\n    switch (sortOption) {\r\n      case 'apr':\r\n        // Ternary is needed to prevent pools without APR (like MIX) getting top spot\r\n        return orderBy(poolsToSort, (pool: Pool) => (pool.apr ? getAprData(pool).apr : 0), 'desc')\r\n      case 'earned':\r\n        return orderBy(\r\n          poolsToSort,\r\n          (pool: Pool) => {\r\n            if (!pool.userData || !pool.earningTokenPrice) {\r\n              return 0\r\n            }\r\n            return pool.userData.pendingReward.times(pool.earningTokenPrice).toNumber()\r\n          },\r\n          'desc',\r\n        )\r\n      case 'totalStaked':\r\n        return orderBy(poolsToSort, (pool: Pool) => pool.totalStaked.toNumber(), 'desc')\r\n      default:\r\n        return poolsToSort\r\n    }\r\n  }\r\n\r\n  const poolsToShow = () => {\r\n    let chosenPools = []\r\n    if (showFinishedPools) {\r\n      chosenPools = finishedPools\r\n    } else {\r\n      chosenPools = openPools\r\n    }\r\n\r\n    if (searchQuery) {\r\n      const lowercaseQuery = latinise(searchQuery.toLowerCase())\r\n      chosenPools = chosenPools.filter((pool) =>\r\n        latinise(pool.earningToken.symbol.toLowerCase()).includes(lowercaseQuery),\r\n      )\r\n    }\r\n\r\n    return sortPools(chosenPools).slice(0, numberOfPoolsVisible)\r\n  }\r\n\r\n  const cardLayout = (\r\n    <CardLayout>\r\n      {poolsToShow().map((pool) => (\r\n        <PoolCard key={pool.sousId} pool={pool} account={account} referrer={referrer} />\r\n      ))}\r\n    </CardLayout>\r\n  )\r\n\r\n  const tableLayout = (\r\n    <PoolsTable pools={poolsToShow()} account={account} userDataLoaded={userDataLoaded} referrer={referrer} />\r\n  )\r\n\r\n  return (\r\n    <>\r\n      <PageHeader>\r\n        <Flex justifyContent=\"space-between\" flexDirection={['column', null, null, 'row']} position=\"relative\">\r\n          <Flex flex=\"1\" flexDirection=\"column\" mr={['8px', 0]}>\r\n            <Title mb=\"24px\">{t('Syrup Pools')}</Title>\r\n            <Description>{t('Just stake some tokens to earn.')}</Description>\r\n            <Description>{t('High APR, low risk.')}</Description>\r\n          </Flex>\r\n          <Image\r\n            src={`${process.env.PUBLIC_URL}/images/luckychip-card.png`}\r\n            alt=\"\"\r\n            width={360}\r\n            height={180}\r\n          />\r\n          <Box position=\"absolute\" top={32} right={32}>\r\n            <HelpButton />\r\n          </Box>\r\n        </Flex>\r\n      </PageHeader>\r\n      <Page>\r\n        <PoolControls justifyContent=\"space-between\">\r\n          <PoolTabButtons\r\n            stakedOnly={stakedOnly}\r\n            setStakedOnly={setStakedOnly}\r\n            hasStakeInFinishedPools={hasStakeInFinishedPools}\r\n            viewMode={viewMode}\r\n            setViewMode={setViewMode}\r\n          />\r\n          <SearchSortContainer>\r\n            <Flex flexDirection=\"column\" width=\"50%\">\r\n              <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\">\r\n                {t('Sort by')}\r\n              </Text>\r\n              <ControlStretch>\r\n                <Select\r\n                  options={[\r\n                    {\r\n                      label: t('Hot'),\r\n                      value: 'hot',\r\n                    },\r\n                    {\r\n                      label: t('APR'),\r\n                      value: 'apr',\r\n                    },\r\n                    {\r\n                      label: t('Earned'),\r\n                      value: 'earned',\r\n                    },\r\n                    {\r\n                      label: t('Total staked'),\r\n                      value: 'totalStaked',\r\n                    },\r\n                  ]}\r\n                  onChange={handleSortOptionChange}\r\n                />\r\n              </ControlStretch>\r\n            </Flex>\r\n            <Flex flexDirection=\"column\" width=\"50%\">\r\n              <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\">\r\n                {t('Search')}\r\n              </Text>\r\n              <ControlStretch>\r\n                <SearchInput onChange={handleChangeSearchQuery} placeholder=\"Search Pools\" />\r\n              </ControlStretch>\r\n            </Flex>\r\n          </SearchSortContainer>\r\n        </PoolControls>\r\n        {showFinishedPools && (\r\n          <Text fontSize=\"20px\" color=\"failure\" pb=\"32px\">\r\n            {t('These pools are no longer distributing rewards. Please unstake your tokens.')}\r\n          </Text>\r\n        )}\r\n        {viewMode === ViewMode.CARD ? cardLayout : tableLayout}\r\n        <div ref={loadMoreRef} />\r\n        <Image\r\n          mx=\"auto\"\r\n          mt=\"12px\"\r\n          src={`${process.env.PUBLIC_URL}/images/3d-syrup-bunnies.png`}\r\n          alt=\"Pancake illustration\"\r\n          width={192}\r\n          height={184.5}\r\n        />\r\n      </Page>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Pools\r\n","import React, { CSSProperties, useRef } from 'react'\r\nimport { noop } from 'lodash'\r\n\r\nfunction getRandom(min, max) {\r\n  return (Math.floor(Math.random() * (max - min)) + min) * 90\r\n}\r\n\r\nlet xRnd = 0\r\nlet yRnd = 0\r\n\r\nexport interface RollingDiceProps {\r\n  style: CSSProperties;\r\n}\r\n\r\nconst RollingDice: React.FC<RollingDiceProps> = ({ style }) => {\r\n  const cubeRef = useRef<HTMLDivElement>(null)\r\n\r\n  const handleClick = (evt: React.MouseEvent<HTMLElement>) => {\r\n    evt.preventDefault()\r\n    xRnd += getRandom(12, 24)\r\n    yRnd += getRandom(12, 24)\r\n    const transform = `translateZ(-500px) rotateX(${xRnd}deg) rotateY(${yRnd}deg)`\r\n    cubeRef.current.style.webkitTransform = transform\r\n    cubeRef.current.style.transform = transform\r\n  }\r\n\r\n  return (\r\n    <div id=\"rolling-dice-wrapper\" style={style}>\r\n      <div id=\"rolling-dice-platform\" role=\"button\" tabIndex={0} onClick={handleClick} onKeyPress={noop}>\r\n        <div id=\"rolling-dice-cube\" ref={cubeRef}>\r\n          <div className=\"rolling-dice-side front\">\r\n            <div className=\"dot center\" />\r\n          </div>\r\n          <div className=\"rolling-dice-side front inner\" />\r\n          <div className=\"rolling-dice-side top\">\r\n            <div className=\"dot dtop dleft\" />\r\n            <div className=\"dot dbottom dright\" />\r\n          </div>\r\n          <div className=\"rolling-dice-side top inner\" />\r\n          <div className=\"rolling-dice-side right\">\r\n            <div className=\"dot dtop dleft\" />\r\n            <div className=\"dot center\" />\r\n            <div className=\"dot dbottom dright\" />\r\n          </div>\r\n          <div className=\"rolling-dice-side right inner\" />\r\n          <div className=\"rolling-dice-side left\">\r\n            <div className=\"dot dtop dleft\" />\r\n            <div className=\"dot dtop dright\" />\r\n            <div className=\"dot dbottom dleft\" />\r\n            <div className=\"dot dbottom dright\" />\r\n          </div>\r\n          <div className=\"rolling-dice-side left inner\" />\r\n          <div className=\"rolling-dice-side bottom\">\r\n            <div className=\"dot center\" />\r\n            <div className=\"dot dtop dleft\" />\r\n            <div className=\"dot dtop dright\" />\r\n            <div className=\"dot dbottom dleft\" />\r\n            <div className=\"dot dbottom dright\" />\r\n          </div>\r\n          <div className=\"rolling-dice-side bottom inner\" />\r\n          <div className=\"rolling-dice-side back\">\r\n            <div className=\"dot dtop dleft\" />\r\n            <div className=\"dot dtop dright\" />\r\n            <div className=\"dot dbottom dleft\" />\r\n            <div className=\"dot dbottom dright\" />\r\n            <div className=\"dot center dleft\" />\r\n            <div className=\"dot center dright\" />\r\n          </div>\r\n          <div className=\"rolling-dice-side back inner\" />\r\n          <div className=\"rolling-dice-side cover x\" />\r\n          <div className=\"rolling-dice-side cover y\" />\r\n          <div className=\"rolling-dice-side cover z\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RollingDice\r\n","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { BaseLayout, Box, Button, CardsLayout, Flex, Heading, Image, useMatchBreakpoints } from '@heswap/uikit'\r\nimport RollingDice from 'components/RollingDice'\r\nimport Page from 'components/layout/Page'\r\nimport PageHeader from './PageHeader'\r\nimport HistoryTable from './HistoryTable'\r\n\r\nconst LeftLogo = styled(Image).attrs(() => {\r\n  const { isXs, isSm, isMd, isLg, isXl } = useMatchBreakpoints()\r\n  let width = 0\r\n  let height = 0\r\n  if (isXs) {\r\n    width = 32\r\n    height = 32\r\n  } else if (isSm) {\r\n    width = 48\r\n    height = 48\r\n  } else if (isMd) {\r\n    width = 64\r\n    height = 64\r\n  } else if (isLg) {\r\n    width = 96\r\n    height = 96\r\n  } else if (isXl) {\r\n    width = 128\r\n    height = 128\r\n  }\r\n  return {\r\n    src: `${process.env.PUBLIC_URL}/images/luckychip-token.png`,\r\n    alt: '',\r\n    width,\r\n    height,\r\n  }\r\n})`\r\n  position: absolute;\r\n  top: 96px;\r\n  left: 32px;\r\n`\r\n\r\nconst RightLogo = styled(Image).attrs(() => {\r\n  const { isXs, isSm, isMd, isLg, isXl } = useMatchBreakpoints()\r\n  let width = 0\r\n  let height = 0\r\n  if (isXs) {\r\n    width = 32\r\n    height = 32\r\n  } else if (isSm) {\r\n    width = 48\r\n    height = 48\r\n  } else if (isMd) {\r\n    width = 64\r\n    height = 64\r\n  } else if (isLg) {\r\n    width = 96\r\n    height = 96\r\n  } else if (isXl) {\r\n    width = 128\r\n    height = 128\r\n  }\r\n  return {\r\n    src: `${process.env.PUBLIC_URL}/images/luckychip-token.png`,\r\n    alt: '',\r\n    width,\r\n    height,\r\n  }\r\n})`\r\n  position: absolute;\r\n  top: 96px;\r\n  right: 32px;\r\n`\r\n\r\nconst GradientPanel = styled(Box)`\r\n  border-radius: ${({ theme }) => theme.radii.card};\r\n  background: linear-gradient(235deg, rgb(51, 111, 245) 4.05%, rgba(17, 81, 225, 0.32) 103.52%);\r\n  padding: 32px;\r\n`\r\n\r\nconst InfoLayout = styled(CardsLayout)`\r\n  grid-gap: 24px;\r\n`\r\n\r\nconst PickUpLayout = styled(BaseLayout)`\r\n  & > div {\r\n    grid-column: span 3;\r\n    ${({ theme }) => theme.mediaQueries.sm} {\r\n      grid-column: span 4;\r\n    }\r\n  }\r\n`\r\n\r\nconst WhitePanel = styled(Box)`\r\n  border-radius: ${({ theme }) => theme.radii.card};\r\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\r\n  padding: 32px 8px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    padding: 16px;\r\n  }\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    padding: 24px;\r\n  }\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    padding: 32px;\r\n  }\r\n`\r\n\r\nconst Label = styled(Heading).attrs({\r\n  as: 'h2',\r\n  scale: 'md',\r\n})`\r\n  color: ${({ theme }) => theme.colors.backgroundAlt};\r\n  font-weight: 300;\r\n  line-height: 1.4;\r\n`\r\n\r\nconst Value = styled(Heading).attrs({\r\n  as: 'h1',\r\n  scale: 'xl',\r\n})`\r\n  color: ${({ theme }) => theme.colors.warning};\r\n  font-weight: 600;\r\n  line-height: 1.4;\r\n`\r\n\r\nconst SideWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\n\r\nconst Side = styled.div.attrs({\r\n  className: 'rolling-dice-side',\r\n})<{ checked: boolean }>`\r\n  transform: scale(0.5);\r\n  margin: -40px;\r\n  background: ${({ checked, theme }) => checked ? theme.colors.secondary : theme.colors.backgroundAlt};\r\n\r\n  & > .dot {\r\n    background: ${({ checked, theme }) => checked ? theme.colors.backgroundAlt : '#444'};\r\n    box-shadow: inset 5px 0 10px ${({ checked }) => checked ? '#888' : '#000'};\r\n  }\r\n`\r\n\r\nconst StyledButton = styled(Button)`\r\n  border-radius: 8px;\r\n  background-color: ${({ theme }) => theme.colors.secondary};\r\n`\r\n\r\nconst fakeRecords = [];\r\nfor (let i = 0; i < 100; i++) {\r\n  const bets = [];\r\n  for (let j = 1; j <= 6; j++) {\r\n    if (Math.random() < 0.5) {\r\n      bets.push(j)\r\n    }\r\n  }\r\n  fakeRecords.push({\r\n    id: i + 1,\r\n    bets,\r\n    outcome: Math.ceil(Math.random() * 5) + 1\r\n  })\r\n}\r\n\r\nconst Dice: React.FC = () => {\r\n  const [sideToggles, setSideToggles] = useState([true, false, false, false, false, false])\r\n  const [records, setRecords] = useState(fakeRecords)\r\n\r\n  const handleSideClick = (index) => {\r\n    const toggles = [...sideToggles]\r\n    toggles[index] = !toggles[index]\r\n    setSideToggles(toggles)\r\n  }\r\n\r\n  const getWinningChance = () => {\r\n    const toggled = sideToggles.filter(x => x)\r\n    const result = toggled.length * 100 / 6\r\n    return parseFloat(result.toFixed(2)).toString() // remove trailing zero\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <PageHeader>\r\n        <Flex position=\"relative\">\r\n          <RollingDice style={{ zIndex: 1 }} />\r\n          <LeftLogo />\r\n          <RightLogo />\r\n        </Flex>\r\n      </PageHeader>\r\n      <Page>\r\n        <GradientPanel>\r\n          <InfoLayout>\r\n            <Box style={{ textAlign: 'center' }}>\r\n              <Label>Winning Chance</Label>\r\n              <Value>{getWinningChance()}%</Value>\r\n            </Box>\r\n            <Box style={{ textAlign: 'center' }}>\r\n              <Label>Winning Bet Pays</Label>\r\n              <Value>0.000</Value>\r\n              <Label>ANT</Label>\r\n              <Label>(with tax and fee)</Label>\r\n            </Box>\r\n            <Box style={{ textAlign: 'center' }}>\r\n              <Label>Winning Return Rate</Label>\r\n              <Value>5.88x</Value>\r\n            </Box>\r\n          </InfoLayout>\r\n        </GradientPanel>\r\n        <GradientPanel mt=\"32px\">\r\n          <PickUpLayout>\r\n            <SideWrapper>\r\n              <Side checked={sideToggles[0]} onClick={() => handleSideClick(0)}>\r\n                <div className=\"dot center\" />\r\n              </Side>\r\n            </SideWrapper>\r\n            <SideWrapper>\r\n              <Side checked={sideToggles[1]} onClick={() => handleSideClick(1)}>\r\n                <div className=\"dot dtop dleft\" />\r\n                <div className=\"dot dbottom dright\" />\r\n              </Side>\r\n            </SideWrapper>\r\n            <SideWrapper>\r\n              <Side checked={sideToggles[2]} onClick={() => handleSideClick(2)}>\r\n                <div className=\"dot dtop dleft\" />\r\n                <div className=\"dot center\" />\r\n                <div className=\"dot dbottom dright\" />\r\n              </Side>\r\n            </SideWrapper>\r\n            <SideWrapper>\r\n              <Side checked={sideToggles[3]} onClick={() => handleSideClick(3)}>\r\n                <div className=\"dot dtop dleft\" />\r\n                <div className=\"dot dtop dright\" />\r\n                <div className=\"dot dbottom dleft\" />\r\n                <div className=\"dot dbottom dright\" />\r\n              </Side>\r\n            </SideWrapper>\r\n            <SideWrapper>\r\n              <Side checked={sideToggles[4]} onClick={() => handleSideClick(4)}>\r\n                <div className=\"dot center\" />\r\n                <div className=\"dot dtop dleft\" />\r\n                <div className=\"dot dtop dright\" />\r\n                <div className=\"dot dbottom dleft\" />\r\n                <div className=\"dot dbottom dright\" />\r\n              </Side>\r\n            </SideWrapper>\r\n            <SideWrapper>\r\n              <Side checked={sideToggles[5]} onClick={() => handleSideClick(5)}>\r\n                <div className=\"dot dtop dleft\" />\r\n                <div className=\"dot dtop dright\" />\r\n                <div className=\"dot dbottom dleft\" />\r\n                <div className=\"dot dbottom dright\" />\r\n                <div className=\"dot center dleft\" />\r\n                <div className=\"dot center dright\" />\r\n              </Side>\r\n            </SideWrapper>\r\n          </PickUpLayout>\r\n          <Box mt=\"24px\" style={{ textAlign: 'center' }}>\r\n            <StyledButton>Unlock Wallet</StyledButton>\r\n          </Box>\r\n          <Box mt=\"16px\" style={{ textAlign: 'center' }}>\r\n            <Label>Unlock wallet to bet</Label>\r\n          </Box>\r\n        </GradientPanel>\r\n        <WhitePanel mt=\"32px\">\r\n          <HistoryTable records={records} />\r\n        </WhitePanel>\r\n      </Page>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Dice\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Box } from '@heswap/uikit'\r\nimport Container from '../../components/layout/Container'\r\n\r\nconst Outer = styled(Box)<{ background?: string }>`\r\n  background: ${({ theme, background }) => background || theme.colors.gradients.bubblegum};\r\n`\r\n\r\nconst Inner = styled(Container)`\r\n  padding-bottom: 160px;\r\n`\r\n\r\nconst PageHeader: React.FC<{ background?: string }> = ({ background, children, ...props }) => (\r\n  <Outer background={background} {...props}>\r\n    <Inner>{children}</Inner>\r\n  </Outer>\r\n)\r\n\r\nexport default PageHeader\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport GrommetIcon, {\r\n  GiDiceSixFacesOne,\r\n  GiDiceSixFacesTwo,\r\n  GiDiceSixFacesThree,\r\n  GiDiceSixFacesFour,\r\n  GiDiceSixFacesFive,\r\n  GiDiceSixFacesSix,\r\n  GiInvertedDice1,\r\n  GiInvertedDice2,\r\n  GiInvertedDice3,\r\n  GiInvertedDice4,\r\n  GiInvertedDice5,\r\n  GiInvertedDice6,\r\n} from 'react-icons/gi'\r\nimport { Box, Flex, Text, useMatchBreakpoints } from '@heswap/uikit'\r\nimport useTheme from 'hooks/useTheme'\r\nimport { HistoryRowProps } from './types'\r\n\r\nconst StyledFlex = styled(Flex)`\r\n  padding-top: 8px;\r\n  padding-bottom: 8px;\r\n`\r\n\r\nconst Outcome = styled(Box)`\r\n  text-align: center;\r\n\r\n  > ${Flex} {\r\n    width: 88px;\r\n\r\n    ${({ theme }) => theme.mediaQueries.sm} {\r\n      width: 96px;\r\n    }\r\n\r\n    > ${Text} {\r\n      flex: 1;\r\n    }\r\n  }\r\n`\r\n\r\nconst HistoryRow: React.FC<HistoryRowProps> = ({ id, bets, outcome }) => {\r\n  const { isXs, isSm, isMd, isLg, isXl } = useMatchBreakpoints()\r\n  const { theme } = useTheme()\r\n\r\n  const renderSide = (side: number, filled: boolean, color: string) => {\r\n    let size = '0'\r\n    if (isXs) {\r\n      size = '24px'\r\n    } else if (isSm) {\r\n      size = '24px'\r\n    } else if (isMd) {\r\n      size = '32px'\r\n    } else if (isLg) {\r\n      size = '32px'\r\n    } else if (isXl) {\r\n      size = '32px'\r\n    }\r\n    if (side === 1) {\r\n      return React.createElement(filled ? GiDiceSixFacesOne : GiInvertedDice1, { size, color })\r\n    }\r\n    if (side === 2) {\r\n      return React.createElement(filled ? GiDiceSixFacesTwo : GiInvertedDice2, { size, color })\r\n    }\r\n    if (side === 3) {\r\n      return React.createElement(filled ? GiDiceSixFacesThree : GiInvertedDice3, { size, color })\r\n    }\r\n    if (side === 4) {\r\n      return React.createElement(filled ? GiDiceSixFacesFour : GiInvertedDice4, { size, color })\r\n    }\r\n    if (side === 5) {\r\n      return React.createElement(filled ? GiDiceSixFacesFive : GiInvertedDice5, { size, color })\r\n    }\r\n    if (side === 6) {\r\n      return React.createElement(filled ? GiDiceSixFacesSix : GiInvertedDice6, { size, color })\r\n    }\r\n    return null\r\n  }\r\n  \r\n  return (\r\n    <StyledFlex>\r\n      <div style={{ textAlign: 'center' }}>\r\n        <Text fontSize=\"16px\" bold color=\"primary\">#</Text>\r\n        <Text fontSize=\"24px\" bold color=\"textSubtle\" width=\"40px\">{id}</Text>\r\n      </div>\r\n      <Box mx={['8px', '16px', '32px', '64px', '128px']} style={{ flex: 1 }}>\r\n        <Text fontSize=\"16px\" bold color=\"primary\">Betting</Text>\r\n        <Flex justifyContent=\"space-between\">\r\n          {[1, 2, 3, 4, 5, 6].map((side, index) => (\r\n            <Box key={index.toString()}>\r\n              {renderSide(side, bets.includes(side), theme.colors[bets.includes(side) ? 'primary' : 'textSubtle'])}\r\n            </Box>\r\n          ))}\r\n        </Flex>\r\n      </Box>\r\n      <Outcome>\r\n        <Text fontSize=\"16px\" bold color=\"primary\">Outcome</Text>\r\n        <Flex alignItems=\"center\">\r\n          {renderSide(outcome, true, theme.colors[bets.includes(outcome) ? 'success' : 'failure'])}\r\n          <Text\r\n            fontSize=\"16px\"\r\n            bold\r\n            color={bets.includes(outcome) ? 'success' : 'failure'}\r\n            display=\"inline-block\"\r\n          >\r\n            {bets.includes(outcome) ? 'WIN' : 'LOSS'}\r\n          </Text>\r\n        </Flex>\r\n      </Outcome>\r\n    </StyledFlex>\r\n  )\r\n}\r\n\r\nexport default HistoryRow\r\n","import React, { useRef } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button, ChevronUpIcon } from '@heswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport HistoryRow from './HistoryRow'\r\nimport { HistoryRowProps } from './types'\r\n\r\ninterface HistoryTableProps {\r\n  records: Array<HistoryRowProps>;\r\n}\r\n\r\nconst Table = styled.div`\r\n  border-radius: ${({ theme }) => theme.radii.card};\r\n  background-color: ${({ theme }) => theme.card.background};\r\n\r\n  > div:not(:last-child) {\r\n    border-bottom: 2px solid ${({ theme }) => theme.colors.disabled};\r\n  }\r\n`\r\n\r\nconst ScrollButtonContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  padding-top: 5px;\r\n  padding-bottom: 5px;\r\n`\r\n\r\nconst HistoryTable: React.FC<HistoryTableProps> = ({ records }) => {\r\n  const { t } = useTranslation()\r\n  const tableRef = useRef<HTMLDivElement>(null)\r\n\r\n  const scrollToTop = () => {\r\n    tableRef.current.scrollIntoView({\r\n      behavior: 'smooth'\r\n    })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Table ref={tableRef}>\r\n        {records.map((record, index) => (\r\n          <HistoryRow key={index.toString()} {...record} />\r\n        ))}\r\n      </Table>\r\n      <ScrollButtonContainer>\r\n        <Button variant=\"text\" onClick={scrollToTop}>\r\n          {t('To Top')}\r\n          <ChevronUpIcon color=\"primary\" />\r\n        </Button>\r\n      </ScrollButtonContainer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default HistoryTable","import { createBrowserHistory } from 'history'\r\n\r\n// Manually create the history object so we can access outside the Router e.g. in modals\r\nconst history = createBrowserHistory({\r\n  basename: process.env.PUBLIC_URL\r\n})\r\n\r\nexport default history\r\n","import React, { lazy } from 'react'\r\nimport { Router, Redirect, Route, Switch } from 'react-router-dom'\r\nimport { ResetCSS } from '@heswap/uikit'\r\nimport BigNumber from 'bignumber.js'\r\nimport useEagerConnect from 'hooks/useEagerConnect'\r\nimport { usePollCoreFarmData, usePollBlockNumber } from 'state/hooks'\r\nimport GlobalStyle from './style/Global'\r\nimport Menu from './components/Menu'\r\nimport SuspenseWithChunkError from './components/SuspenseWithChunkError'\r\nimport ToastListener from './components/ToastListener'\r\nimport PageLoader from './components/PageLoader'\r\nimport EasterEgg from './components/EasterEgg'\r\nimport Pools from './views/Pools'\r\nimport Dice from './views/Dice'\r\nimport history from './routerHistory'\r\n\r\n// Route-based code splitting\r\n// Only pool is included in the main bundle because of it's the most visited page\r\nconst Home = lazy(() => import('./views/Home'))\r\nconst Farms = lazy(() => import('./views/Farms'))\r\nconst NotFound = lazy(() => import('./views/NotFound'))\r\nconst Referrals = lazy(() => import('./views/Referrals'))\r\n\r\n// This config is required for number formatting\r\nBigNumber.config({\r\n  EXPONENTIAL_AT: 1000,\r\n  DECIMAL_PLACES: 80,\r\n})\r\n\r\nconst App: React.FC = () => {\r\n  usePollBlockNumber()\r\n  useEagerConnect()\r\n  usePollCoreFarmData()\r\n\r\n  return (\r\n    <Router history={history}>\r\n      <ResetCSS />\r\n      <GlobalStyle />\r\n      <Menu>\r\n        <SuspenseWithChunkError fallback={<PageLoader />}>\r\n          <Switch>\r\n            <Route path=\"/\" exact>\r\n              <Home />\r\n            </Route>\r\n            <Route path=\"/farms\">\r\n              <Farms />\r\n            </Route>\r\n            <Route path=\"/farms/:referrer\">\r\n              <Farms />\r\n            </Route>\r\n            <Route path=\"/pools\">\r\n              <Pools />\r\n            </Route>\r\n            <Route path=\"/pools/:referrer\">\r\n              <Pools />\r\n            </Route>\r\n            {/* Redirect */}\r\n            <Route path=\"/staking\">\r\n              <Redirect to=\"/pools\" />\r\n            </Route>\r\n            <Route path=\"/referrals\">\r\n              <Referrals />\r\n            </Route>\r\n            <Route path=\"/syrup\">\r\n              <Redirect to=\"/pools\" />\r\n            </Route>\r\n            <Route path=\"/dice\">\r\n              <Dice />\r\n            </Route>\r\n            {/* 404 */}\r\n            <Route component={NotFound} />\r\n          </Switch>\r\n        </SuspenseWithChunkError>\r\n      </Menu>\r\n      <EasterEgg iterations={2} />\r\n      <ToastListener />\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default React.memo(App)\r\n","import React from 'react'\r\nimport { ModalProvider } from '@heswap/uikit'\r\nimport { Web3ReactProvider } from '@web3-react/core'\r\nimport { HelmetProvider } from 'react-helmet-async'\r\nimport { Provider } from 'react-redux'\r\nimport { getLibrary } from 'utils/web3React'\r\nimport { ThemeContextProvider } from 'contexts/ThemeContext'\r\nimport { LanguageProvider } from 'contexts/Localization'\r\nimport { RefreshContextProvider } from 'contexts/RefreshContext'\r\nimport { ToastsProvider } from 'contexts/ToastsContext'\r\nimport store from 'state'\r\n\r\nconst Providers: React.FC = ({ children }) => {\r\n  return (\r\n    <Web3ReactProvider getLibrary={getLibrary}>\r\n      <Provider store={store}>\r\n        <ToastsProvider>\r\n          <HelmetProvider>\r\n            <ThemeContextProvider>\r\n              <LanguageProvider>\r\n                <RefreshContextProvider>\r\n                  <ModalProvider>{children}</ModalProvider>\r\n                </RefreshContextProvider>\r\n              </LanguageProvider>\r\n            </ThemeContextProvider>\r\n          </HelmetProvider>\r\n        </ToastsProvider>\r\n      </Provider>\r\n    </Web3ReactProvider>\r\n  )\r\n}\r\n\r\nexport default Providers\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport Providers from './Providers'\r\nimport 'index.css'\r\nimport 'slick-carousel/slick/slick.css'\r\nimport 'slick-carousel/slick/slick-theme.css'\r\nimport 'components/RollingDice/styles.css'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Providers>\r\n      <App />\r\n    </Providers>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n)\r\n","import BigNumber from 'bignumber.js'\r\nimport poolsConfig from 'config/constants/pools'\r\nimport sousChefABI from 'config/abi/sousChef.json'\r\nimport cakeABI from 'config/abi/cake.json'\r\nimport wbnbABI from 'config/abi/weth.json'\r\nimport multicall from 'utils/multicall'\r\nimport { getAddress, getWbnbAddress } from 'utils/addressHelpers'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport { getSousChefV2Contract } from 'utils/contractHelpers'\r\n\r\nexport const fetchPoolsBlockLimits = async () => {\r\n  const poolsWithEnd = poolsConfig.filter((p) => p.sousId !== 0)\r\n  const callsStartBlock = poolsWithEnd.map((poolConfig) => {\r\n    return {\r\n      address: getAddress(poolConfig.contractAddress),\r\n      name: 'startBlock',\r\n    }\r\n  })\r\n  const callsEndBlock = poolsWithEnd.map((poolConfig) => {\r\n    return {\r\n      address: getAddress(poolConfig.contractAddress),\r\n      name: 'bonusEndBlock',\r\n    }\r\n  })\r\n\r\n  const starts = await multicall(sousChefABI, callsStartBlock)\r\n  const ends = await multicall(sousChefABI, callsEndBlock)\r\n\r\n  return poolsWithEnd.map((cakePoolConfig, index) => {\r\n    const startBlock = starts[index]\r\n    const endBlock = ends[index]\r\n    return {\r\n      sousId: cakePoolConfig.sousId,\r\n      startBlock: new BigNumber(startBlock).toJSON(),\r\n      endBlock: new BigNumber(endBlock).toJSON(),\r\n    }\r\n  })\r\n}\r\n\r\nexport const fetchPoolsTotalStaking = async () => {\r\n  const nonBnbPools = poolsConfig.filter((p) => p.stakingToken.symbol !== 'BNB')\r\n  const bnbPool = poolsConfig.filter((p) => p.stakingToken.symbol === 'BNB')\r\n\r\n  const callsNonBnbPools = nonBnbPools.map((poolConfig) => {\r\n    return {\r\n      address: getAddress(poolConfig.stakingToken.address),\r\n      name: 'balanceOf',\r\n      params: [getAddress(poolConfig.contractAddress)],\r\n    }\r\n  })\r\n\r\n  const callsBnbPools = bnbPool.map((poolConfig) => {\r\n    return {\r\n      address: getWbnbAddress(),\r\n      name: 'balanceOf',\r\n      params: [getAddress(poolConfig.contractAddress)],\r\n    }\r\n  })\r\n\r\n  const nonBnbPoolsTotalStaked = await multicall(cakeABI, callsNonBnbPools)\r\n  const bnbPoolsTotalStaked = await multicall(wbnbABI, callsBnbPools)\r\n\r\n  return [\r\n    ...nonBnbPools.map((p, index) => ({\r\n      sousId: p.sousId,\r\n      totalStaked: new BigNumber(nonBnbPoolsTotalStaked[index]).toJSON(),\r\n    })),\r\n    ...bnbPool.map((p, index) => ({\r\n      sousId: p.sousId,\r\n      totalStaked: new BigNumber(bnbPoolsTotalStaked[index]).toJSON(),\r\n    })),\r\n  ]\r\n}\r\n\r\nexport const fetchPoolStakingLimit = async (sousId: number): Promise<BigNumber> => {\r\n  try {\r\n    const sousContract = getSousChefV2Contract(sousId)\r\n    const stakingLimit = await sousContract.methods.poolLimitPerUser().call()\r\n    return new BigNumber(stakingLimit)\r\n  } catch (error) {\r\n    return BIG_ZERO\r\n  }\r\n}\r\n\r\nexport const fetchPoolsStakingLimits = async (\r\n  poolsWithStakingLimit: number[],\r\n): Promise<{ [key: string]: BigNumber }> => {\r\n  const validPools = poolsConfig\r\n    .filter((p) => p.stakingToken.symbol !== 'BNB' && !p.isFinished)\r\n    .filter((p) => !poolsWithStakingLimit.includes(p.sousId))\r\n\r\n  // Get the staking limit for each valid pool\r\n  // Note: We cannot batch the calls via multicall because V1 pools do not have \"poolLimitPerUser\" and will throw an error\r\n  const stakingLimitPromises = validPools.map((validPool) => fetchPoolStakingLimit(validPool.sousId))\r\n  const stakingLimits = await Promise.all(stakingLimitPromises)\r\n\r\n  return stakingLimits.reduce((accum, stakingLimit, index) => {\r\n    return {\r\n      ...accum,\r\n      [validPools[index].sousId]: stakingLimit,\r\n    }\r\n  }, {})\r\n}\r\n","import poolsConfig from 'config/constants/pools'\r\nimport sousChefABI from 'config/abi/sousChef.json'\r\nimport erc20ABI from 'config/abi/erc20.json'\r\nimport multicall from 'utils/multicall'\r\nimport { getMasterChefContract } from 'utils/contractHelpers'\r\nimport { getAddress } from 'utils/addressHelpers'\r\nimport web3NoAccount from 'utils/web3'\r\nimport BigNumber from 'bignumber.js'\r\n\r\n// Pool 0, Cake / Cake is a different kind of contract (master chef)\r\n// BNB pools use the native BNB token (wrapping ? unwrapping is done at the contract level)\r\nconst nonBnbPools = poolsConfig.filter((p) => p.stakingToken.symbol !== 'BNB')\r\nconst bnbPools = poolsConfig.filter((p) => p.stakingToken.symbol === 'BNB')\r\nconst nonMasterPools = poolsConfig.filter((p) => p.sousId !== 0)\r\nconst masterChefContract = getMasterChefContract()\r\n\r\nexport const fetchPoolsAllowance = async (account) => {\r\n  const calls = nonBnbPools.map((p) => ({\r\n    address: getAddress(p.stakingToken.address),\r\n    name: 'allowance',\r\n    params: [account, getAddress(p.contractAddress)],\r\n  }))\r\n\r\n  const allowances = await multicall(erc20ABI, calls)\r\n  return nonBnbPools.reduce(\r\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(allowances[index]).toJSON() }),\r\n    {},\r\n  )\r\n}\r\n\r\nexport const fetchUserBalances = async (account) => {\r\n  // Non BNB pools\r\n  const calls = nonBnbPools.map((p) => ({\r\n    address: getAddress(p.stakingToken.address),\r\n    name: 'balanceOf',\r\n    params: [account],\r\n  }))\r\n  const tokenBalancesRaw = await multicall(erc20ABI, calls)\r\n  const tokenBalances = nonBnbPools.reduce(\r\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(tokenBalancesRaw[index]).toJSON() }),\r\n    {},\r\n  )\r\n\r\n  // BNB pools\r\n  const bnbBalance = await web3NoAccount.eth.getBalance(account)\r\n  const bnbBalances = bnbPools.reduce(\r\n    (acc, pool) => ({ ...acc, [pool.sousId]: new BigNumber(bnbBalance).toJSON() }),\r\n    {},\r\n  )\r\n\r\n  return { ...tokenBalances, ...bnbBalances }\r\n}\r\n\r\nexport const fetchUserStakeBalances = async (account) => {\r\n  const calls = nonMasterPools.map((p) => ({\r\n    address: getAddress(p.contractAddress),\r\n    name: 'userInfo',\r\n    params: [account],\r\n  }))\r\n  const userInfo = await multicall(sousChefABI, calls)\r\n  const stakedBalances = nonMasterPools.reduce(\r\n    (acc, pool, index) => ({\r\n      ...acc,\r\n      [pool.sousId]: new BigNumber(userInfo[index].amount._hex).toJSON(),\r\n    }),\r\n    {},\r\n  )\r\n\r\n  // Cake / Cake pool\r\n  const { amount: masterPoolAmount } = await masterChefContract.methods.userInfo('0', account).call()\r\n\r\n  return { ...stakedBalances, 0: new BigNumber(masterPoolAmount).toJSON() }\r\n}\r\n\r\nexport const fetchUserPendingRewards = async (account) => {\r\n  const calls = nonMasterPools.map((p) => ({\r\n    address: getAddress(p.contractAddress),\r\n    name: 'pendingReward',\r\n    params: [account],\r\n  }))\r\n  const res = await multicall(sousChefABI, calls)\r\n  const pendingRewards = nonMasterPools.reduce(\r\n    (acc, pool, index) => ({\r\n      ...acc,\r\n      [pool.sousId]: new BigNumber(res[index]).toJSON(),\r\n    }),\r\n    {},\r\n  )\r\n\r\n  // Cake / Cake pool\r\n  const pendingReward = await masterChefContract.methods.pendingHSW('0', account).call()\r\n\r\n  return { ...pendingRewards, 0: new BigNumber(pendingReward).toJSON() }\r\n}\r\n","/* eslint-disable no-param-reassign */\r\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport BigNumber from 'bignumber.js'\r\nimport poolsConfig from 'config/constants/pools'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport { PoolsState, Pool, AppThunk } from 'state/types'\r\nimport { getPoolApr } from 'utils/apr'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { getAddress } from 'utils/addressHelpers'\r\nimport { fetchPoolsBlockLimits, fetchPoolsStakingLimits, fetchPoolsTotalStaking } from './fetchPools'\r\nimport {\r\n  fetchPoolsAllowance,\r\n  fetchUserBalances,\r\n  fetchUserStakeBalances,\r\n  fetchUserPendingRewards,\r\n} from './fetchPoolsUser'\r\nimport { getTokenPricesFromFarm } from './helpers'\r\n\r\nconst initialState: PoolsState = {\r\n  data: [...poolsConfig],\r\n  userDataLoaded: false,\r\n}\r\n\r\n// Thunks\r\nexport const fetchPoolsPublicDataAsync = (currentBlock: number) => async (dispatch, getState) => {\r\n  const blockLimits = await fetchPoolsBlockLimits()\r\n  const totalStakings = await fetchPoolsTotalStaking()\r\n\r\n  const prices = getTokenPricesFromFarm(getState().farms.data)\r\n\r\n  const liveData = poolsConfig.map((pool) => {\r\n    const blockLimit = blockLimits.find((entry) => entry.sousId === pool.sousId)\r\n    const totalStaking = totalStakings.find((entry) => entry.sousId === pool.sousId)\r\n    const isPoolEndBlockExceeded = currentBlock > 0 && blockLimit ? currentBlock > Number(blockLimit.endBlock) : false\r\n    const isPoolFinished = pool.isFinished || isPoolEndBlockExceeded\r\n\r\n    const stakingTokenAddress = pool.stakingToken.address ? getAddress(pool.stakingToken.address).toLowerCase() : null\r\n    const stakingTokenPrice = stakingTokenAddress ? prices[stakingTokenAddress] : 0\r\n\r\n    const earningTokenAddress = pool.earningToken.address ? getAddress(pool.earningToken.address).toLowerCase() : null\r\n    const earningTokenPrice = earningTokenAddress ? prices[earningTokenAddress] : 0\r\n    const apr = !isPoolFinished\r\n      ? getPoolApr(\r\n          stakingTokenPrice,\r\n          earningTokenPrice,\r\n          getBalanceNumber(new BigNumber(totalStaking.totalStaked), pool.stakingToken.decimals),\r\n          parseFloat(pool.tokenPerBlock),\r\n        )\r\n      : 0\r\n\r\n    return {\r\n      ...blockLimit,\r\n      ...totalStaking,\r\n      stakingTokenPrice,\r\n      earningTokenPrice,\r\n      apr,\r\n      isFinished: isPoolFinished,\r\n    }\r\n  })\r\n\r\n  dispatch(setPoolsPublicData(liveData))\r\n}\r\n\r\nexport const fetchPoolsStakingLimitsAsync = () => async (dispatch, getState) => {\r\n  const poolsWithStakingLimit = getState()\r\n    .pools.data.filter(({ stakingLimit }) => stakingLimit !== null && stakingLimit !== undefined)\r\n    .map((pool) => pool.sousId)\r\n\r\n  const stakingLimits = await fetchPoolsStakingLimits(poolsWithStakingLimit)\r\n\r\n  const stakingLimitData = poolsConfig.map((pool) => {\r\n    if (poolsWithStakingLimit.includes(pool.sousId)) {\r\n      return { sousId: pool.sousId }\r\n    }\r\n    const stakingLimit = stakingLimits[pool.sousId] || BIG_ZERO\r\n    return {\r\n      sousId: pool.sousId,\r\n      stakingLimit: stakingLimit.toJSON(),\r\n    }\r\n  })\r\n\r\n  dispatch(setPoolsPublicData(stakingLimitData))\r\n}\r\n\r\nexport const fetchPoolsUserDataAsync =\r\n  (account: string): AppThunk =>\r\n  async (dispatch) => {\r\n    const allowances = await fetchPoolsAllowance(account)\r\n    const stakingTokenBalances = await fetchUserBalances(account)\r\n    const stakedBalances = await fetchUserStakeBalances(account)\r\n    const pendingRewards = await fetchUserPendingRewards(account)\r\n\r\n    const userData = poolsConfig.map((pool) => ({\r\n      sousId: pool.sousId,\r\n      allowance: allowances[pool.sousId],\r\n      stakingTokenBalance: stakingTokenBalances[pool.sousId],\r\n      stakedBalance: stakedBalances[pool.sousId],\r\n      pendingReward: pendingRewards[pool.sousId],\r\n    }))\r\n\r\n    dispatch(setPoolsUserData(userData))\r\n  }\r\n\r\nexport const updateUserAllowance =\r\n  (sousId: number, account: string): AppThunk =>\r\n  async (dispatch) => {\r\n    const allowances = await fetchPoolsAllowance(account)\r\n    dispatch(updatePoolsUserData({ sousId, field: 'allowance', value: allowances[sousId] }))\r\n  }\r\n\r\nexport const updateUserBalance =\r\n  (sousId: number, account: string): AppThunk =>\r\n  async (dispatch) => {\r\n    const tokenBalances = await fetchUserBalances(account)\r\n    dispatch(updatePoolsUserData({ sousId, field: 'stakingTokenBalance', value: tokenBalances[sousId] }))\r\n  }\r\n\r\nexport const updateUserStakedBalance =\r\n  (sousId: number, account: string): AppThunk =>\r\n  async (dispatch) => {\r\n    const stakedBalances = await fetchUserStakeBalances(account)\r\n    dispatch(updatePoolsUserData({ sousId, field: 'stakedBalance', value: stakedBalances[sousId] }))\r\n  }\r\n\r\nexport const updateUserPendingReward =\r\n  (sousId: number, account: string): AppThunk =>\r\n  async (dispatch) => {\r\n    const pendingRewards = await fetchUserPendingRewards(account)\r\n    dispatch(updatePoolsUserData({ sousId, field: 'pendingReward', value: pendingRewards[sousId] }))\r\n  }\r\n\r\nexport const PoolsSlice = createSlice({\r\n  name: 'Pools',\r\n  initialState,\r\n  reducers: {\r\n    setPoolsPublicData: (state, action) => {\r\n      const livePoolsData: Pool[] = action.payload\r\n      state.data = state.data.map((pool) => {\r\n        const livePoolData = livePoolsData.find((entry) => entry.sousId === pool.sousId)\r\n        return { ...pool, ...livePoolData }\r\n      })\r\n    },\r\n    setPoolsUserData: (state, action) => {\r\n      const userData = action.payload\r\n      state.data = state.data.map((pool) => {\r\n        const userPoolData = userData.find((entry) => entry.sousId === pool.sousId)\r\n        return { ...pool, userData: userPoolData }\r\n      })\r\n      state.userDataLoaded = true\r\n    },\r\n    updatePoolsUserData: (state, action) => {\r\n      const { field, value, sousId } = action.payload\r\n      const index = state.data.findIndex((p) => p.sousId === sousId)\r\n\r\n      if (index >= 0) {\r\n        state.data[index] = { ...state.data[index], userData: { ...state.data[index].userData, [field]: value } }\r\n      }\r\n    },\r\n  },\r\n})\r\n\r\n// Actions\r\nexport const { setPoolsPublicData, setPoolsUserData, updatePoolsUserData } = PoolsSlice.actions\r\n\r\nexport default PoolsSlice.reducer\r\n","import { useContext } from 'react'\r\nimport { ToastsContext } from 'contexts/ToastsContext'\r\n\r\nconst useToast = () => {\r\n  const toastContext = useContext(ToastsContext)\r\n\r\n  if (toastContext === undefined) {\r\n    throw new Error('Toasts context undefined')\r\n  }\r\n\r\n  return toastContext\r\n}\r\n\r\nexport default useToast\r\n","import { TranslatableText } from 'state/types'\r\n\r\nexport interface Address {\r\n  97?: string\r\n  56: string\r\n}\r\n\r\nexport interface Token {\r\n  symbol: string\r\n  address?: Address\r\n  decimals?: number\r\n  projectLink?: string\r\n  busdPrice?: string\r\n}\r\n\r\nexport enum PoolIds {\r\n  poolBasic = 'poolBasic',\r\n  poolUnlimited = 'poolUnlimited',\r\n}\r\n\r\nexport enum PoolCategory {\r\n  'COMMUNITY' = 'Community',\r\n  'CORE' = 'Core',\r\n  'BINANCE' = 'Binance', // Pools using native BNB behave differently than pools using a token\r\n  'AUTO' = 'Auto',\r\n}\r\n\r\nexport interface FarmConfig {\r\n  pid: number\r\n  lpSymbol: string\r\n  lpAddresses: Address\r\n  token: Token\r\n  quoteToken: Token\r\n  multiplier?: string\r\n  isCommunity?: boolean\r\n  dual?: {\r\n    rewardPerBlock: number\r\n    earnLabel: string\r\n    endBlock: number\r\n  }\r\n}\r\n\r\nexport interface PoolConfig {\r\n  sousId: number\r\n  earningToken: Token\r\n  stakingToken: Token\r\n  contractAddress: Address\r\n  poolCategory: PoolCategory\r\n  tokenPerBlock: string\r\n  sortOrder?: number\r\n  harvest?: boolean\r\n  isFinished?: boolean\r\n  enableEmergencyWithdraw?: boolean\r\n}\r\n\r\nexport type PageMeta = {\r\n  title: string\r\n  description?: string\r\n  image?: string\r\n}\r\n","import tokens from './tokens'\r\nimport { FarmConfig } from './types'\r\n\r\nconst farms: FarmConfig[] = [\r\n  /**\r\n   * These 3 farms (PID 0, 1) should always be at the top of the file.\r\n   */\r\n  {\r\n    pid: 1,\r\n    lpSymbol: 'HSW-BNB LP',\r\n    lpAddresses: {\r\n      97: '0x27a71cb648dE0169fA75FBEA902b8E6f402B746C',\r\n      56: '',\r\n    },\r\n    token: tokens.cake,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 2,\r\n    lpSymbol: 'BUSD-BNB LP',\r\n    lpAddresses: {\r\n      97: '0xC067DDB3df98EC16451211Ed24C6aBf94465Aa05',\r\n      56: '',\r\n    },\r\n    token: tokens.busd,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n]\r\n\r\nexport default farms\r\n"],"sourceRoot":""}