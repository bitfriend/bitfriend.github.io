{"version":3,"sources":["views/Referrals/components/CopyToClipboard.tsx","views/Referrals/components/GetReferralLinkCard.tsx","views/Referrals/components/ReferralDashboard.tsx","views/Referrals/components/UnlockCard.tsx","views/Referrals/index.tsx"],"names":["StyleButton","styled","Text","attrs","role","theme","colors","primary","CopyToClipboard","toCopy","props","useState","isTooltipDisplayed","setIsTooltipDisplayed","displayTooltip","setTimeout","small","bold","onClick","navigator","clipboard","permissions","writeText","then","document","queryCommandSupported","content","el","createElement","value","body","appendChild","select","execCommand","removeChild","copyToClipboardWithCommand","color","width","ml","StyledFarmStakingCard","Card","process","Block","div","GetReferralLinkCard","invite","header","account","useWeb3React","t","useTranslation","scale","mb","fontSize","style","whiteSpace","overflow","textOverflow","marginBottom","window","location","protocol","host","Unit","Line","backgroundDisabled","ReferralDashboard","referrer","setReferrer","referrals","setReferrals","commissions","setCommissions","useEffect","a","referralsContract","getReferralContract","methods","getReferrer","call","referrerTemp","referralsCount","referralsTemp","totalReferralCommissions","commissionsTemp","fetchReferralsData","substring","UnlockCard","UnlockButton","Cards","BaseLayout","mediaQueries","sm","lg","Newcards","Hero","Banner","Title","Heading","as","backgroundAlt","Description","Referrals","useTheme","background","gradients","bubblegum","Page"],"mappings":"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","file":"static/js/8.bdf1c39c.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, CopyIcon } from '@heswap/uikit'\r\n\r\ninterface Props {\r\n  toCopy: string\r\n}\r\n\r\nconst StyleButton = styled(Text).attrs({ role: 'button' })`\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n  color: ${({ theme }) => theme.colors.primary};\r\n`\r\n\r\nconst CopyToClipboard: React.FC<Props> = ({ toCopy, ...props }) => {\r\n  const [isTooltipDisplayed, setIsTooltipDisplayed] = useState(false)\r\n\r\n  const copyToClipboardWithCommand = (content: string) => {\r\n    const el = document.createElement('textarea')\r\n    el.value = content\r\n    document.body.appendChild(el)\r\n    el.select()\r\n    document.execCommand('copy')\r\n    document.body.removeChild(el)\r\n  }\r\n\r\n  function displayTooltip() {\r\n    setIsTooltipDisplayed(true)\r\n    setTimeout(() => {\r\n      setIsTooltipDisplayed(false)\r\n    }, 1000)\r\n  }\r\n\r\n  return (\r\n    <StyleButton\r\n      small\r\n      bold\r\n      onClick={() => {\r\n        if (navigator.clipboard && navigator.permissions) {\r\n          navigator.clipboard.writeText(toCopy).then(() => displayTooltip())\r\n        } else if (document.queryCommandSupported('copy')) {\r\n          copyToClipboardWithCommand(toCopy)\r\n          displayTooltip()\r\n        }\r\n      }}\r\n      {...props}\r\n    >\r\n      {isTooltipDisplayed ? <Text color=\"primary\">Copied</Text> : <Text color=\"primary\">Copy</Text>}\r\n      <CopyIcon width=\"20px\" color=\"primary\" ml=\"4px\" />\r\n    </StyleButton>\r\n  )\r\n}\r\n\r\nexport default CopyToClipboard\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Heading, Card, CardBody, Text } from '@heswap/uikit'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport CopyToClipboard from './CopyToClipboard'\r\n\r\nconst StyledFarmStakingCard = styled(Card)`\r\n  background-image: url('${process.env.REACT_APP_PUBLIC_BASE}/images/cake-bg.svg');\r\n  background-repeat: no-repeat;\r\n  background-position: top right;\r\n`\r\n\r\nconst Block = styled.div`\r\n  margin-bottom: 16px;\r\n`\r\n\r\ninterface LinkCard {\r\n  invite: string\r\n  header: string\r\n}\r\n\r\nconst GetReferralLinkCard = ({ invite, header }: LinkCard) => {\r\n  const { account } = useWeb3React()\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <StyledFarmStakingCard>\r\n      <CardBody>\r\n        <Heading scale=\"xl\" mb=\"24px\">\r\n          {t(header)}\r\n        </Heading>\r\n        <Block>\r\n          <Text\r\n            fontSize=\"16px\"\r\n            bold\r\n            style={{ whiteSpace: 'nowrap', overflow: 'hidden', textOverflow: 'ellipsis', marginBottom: '8px' }}\r\n          >\r\n            {`${window.location.protocol}//${window.location.host}/${invite}/${account}`}\r\n          </Text>\r\n        </Block>\r\n        <CopyToClipboard toCopy={`${window.location.protocol}//${window.location.host}/${invite}/${account}`}>\r\n          Copy\r\n        </CopyToClipboard>\r\n      </CardBody>\r\n    </StyledFarmStakingCard>\r\n  )\r\n}\r\n\r\nexport default GetReferralLinkCard\r\n","import React, { useState, useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Heading, Card, CardBody, Text } from '@heswap/uikit'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { getReferralContract } from 'utils/contractHelpers'\r\n\r\nconst Block = styled.div`\r\n  margin-bottom: 16px;\r\n  display: flex;\r\n  margin: auto;\r\n`\r\nconst Unit = styled.div`\r\n  width: 50%;\r\n`\r\n\r\nconst Line = styled.div`\r\n  margin-bottom: 16px;\r\n  background-color: ${({ theme }) => theme.colors.backgroundDisabled};\r\n  padding: 5px;\r\n  text-align: center;\r\n  border-radius: 20px;\r\n`\r\n\r\nconst ReferralDashboard = () => {\r\n  const { account } = useWeb3React()\r\n  const { t } = useTranslation()\r\n\r\n  const [referrer, setReferrer] = useState(``)\r\n  const [referrals, setReferrals] = useState(0)\r\n  const [commissions, setCommissions] = useState(0)\r\n\r\n  useEffect(() => {\r\n    async function fetchReferralsData() {\r\n      const referralsContract = getReferralContract()\r\n      const referrerTemp = await referralsContract.methods.getReferrer(account).call()\r\n      const referralsTemp = await referralsContract.methods.referralsCount(account).call()\r\n      const commissionsTemp = await referralsContract.methods.totalReferralCommissions(account).call()\r\n      setReferrer(referrerTemp)\r\n      setReferrals(referralsTemp)\r\n      setCommissions(commissionsTemp)\r\n    }\r\n\r\n    fetchReferralsData()\r\n  }, [account])\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <CardBody>\r\n          <Heading scale=\"xl\" mb=\"24px\">\r\n            {t('Dashboard')}\r\n          </Heading>\r\n          {referrer === `` ? (\r\n            <></>\r\n          ) : (\r\n            <Line>\r\n              <Text>\r\n                My Referrer: {referrer.substring(0, 5)}...{referrer.substring(37)}\r\n              </Text>\r\n            </Line>\r\n          )}\r\n          <Block>\r\n            <Unit>\r\n              <Text fontSize=\"18px\">Total Referrals : {referrals}</Text>\r\n            </Unit>\r\n            <Unit>\r\n              <Text fontSize=\"18px\">Total Commissions : {commissions}</Text>\r\n            </Unit>\r\n          </Block>\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ReferralDashboard\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Card, CardBody, Text } from '@heswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport UnlockButton from 'components/UnlockButton'\r\n\r\nconst StyledFarmStakingCard = styled(Card)`\r\n  background-image: url('${process.env.REACT_APP_PUBLIC_BASE}/images/cake-bg.svg');\r\n  background-repeat: no-repeat;\r\n  background-position: top right;\r\n`\r\n\r\nconst Block = styled.div`\r\n  margin: 16px 0;\r\n`\r\n\r\nconst UnlockCard = () => {\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <StyledFarmStakingCard>\r\n      <CardBody>\r\n        <Block>\r\n          <UnlockButton />\r\n        </Block>\r\n        <Block>\r\n          <Text>{t('Unlock wallet to get your unique referral link')}</Text>\r\n        </Block>\r\n      </CardBody>\r\n    </StyledFarmStakingCard>\r\n  )\r\n}\r\n\r\nexport default UnlockCard\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { BaseLayout, Heading } from '@heswap/uikit'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport Page from 'components/layout/Page'\r\nimport useTheme from 'hooks/useTheme'\r\nimport GetReferralLinkCard from './components/GetReferralLinkCard'\r\nimport ReferralDashboard from './components/ReferralDashboard'\r\nimport UnlockCard from './components/UnlockCard'\r\n\r\nconst Cards = styled(BaseLayout)`\r\n  align-items: stretch;\r\n  justify-content: stretch;\r\n  margin-bottom: 24px;\r\n  grid-gap: 24px;\r\n\r\n  & > div {\r\n    grid-column: span 6;\r\n    width: 100%;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    & > div {\r\n      grid-column: span 8;\r\n    }\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    margin-bottom: 32px;\r\n    grid-gap: 32px;\r\n\r\n    & > div {\r\n      grid-column: span 6;\r\n    }\r\n  }\r\n`\r\n\r\nconst Newcards = styled(BaseLayout)`\r\n  align-items: stretch;\r\n  justify-content: stretch;\r\n  grid-gap: 24px;\r\n  text-align: center;\r\n\r\n  & > div {\r\n    grid-column: span 12;\r\n    width: 100%;\r\n  }\r\n`\r\n\r\nconst Hero = styled.div`\r\n  padding: 96px 32px 48px 32px;\r\n  margin: 0 auto;\r\n  max-width: 1200px;\r\n  border: none;\r\n`\r\n\r\nconst Banner = styled.div`\r\n  align-items: center;\r\n  background-image: url('${process.env.REACT_APP_PUBLIC_BASE}/images/pan-bg-mobile.svg');\r\n  background-repeat: no-repeat;\r\n  background-position: top center;\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  margin: auto;\r\n  margin-bottom: 32px;\r\n  padding-top: 116px;\r\n  text-align: center;\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    background-image: url('${process.env.REACT_APP_PUBLIC_BASE}/images/pan-bg2.svg'), url('${process.env.REACT_APP_PUBLIC_BASE}/images/pan-bg.svg');\r\n    background-position: left center, right center;\r\n    height: 165px;\r\n    padding-top: 0;\r\n  }\r\n`\r\n\r\nconst Title = styled(Heading).attrs({\r\n  as: 'h1',\r\n  scale: 'xl'\r\n})`\r\n  color: ${({ theme }) => theme.colors.backgroundAlt};\r\n  font-weight: 600;\r\n  line-height: 1.4;\r\n`\r\n\r\nconst Description = styled(Heading).attrs({\r\n  as: 'h2',\r\n  scale: 'md',\r\n  color: 'textSubtle'\r\n})`\r\n  font-weight: 300;\r\n  line-height: 1.4;\r\n`\r\n\r\nconst Referrals: React.FC = () => {\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n  const { theme } = useTheme()\r\n\r\n  return (\r\n    <>\r\n      <div style={{ background: theme.colors.gradients.bubblegum }}>\r\n        <Hero>\r\n          <Banner>\r\n            <Title mb=\"24px\">\r\n              {t('Invite Your Friends. Earn Cryptocurrency Together.')}\r\n            </Title>\r\n            <Description>\r\n              {t('Earn a certain commission reward from your friends swaps on Heswap.')}\r\n            </Description>\r\n          </Banner>\r\n        </Hero>\r\n      </div>\r\n      <Page>\r\n        {account ? (\r\n          <>\r\n            <Cards>\r\n              <GetReferralLinkCard invite=\"farms\" header=\"Invite your friends to farm\" />\r\n              <GetReferralLinkCard invite=\"pools\" header=\"Invite your friends to pool\" />\r\n            </Cards>\r\n            <Newcards>\r\n              <ReferralDashboard />\r\n            </Newcards>\r\n          </>\r\n        ) : (\r\n          <Newcards>\r\n            <UnlockCard />\r\n          </Newcards>\r\n        )}\r\n      </Page>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Referrals\r\n"],"sourceRoot":""}