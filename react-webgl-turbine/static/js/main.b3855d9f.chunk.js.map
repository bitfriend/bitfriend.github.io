{"version":3,"sources":["Turbine.js","App.js","serviceWorker.js","index.js"],"names":["THREE","require","TrackballControls","_","Turbine","colors","normal","tank","shaft","disk","hub","blade","baffle","hover","_this2","this","glRenderer","WebGLRenderer","canvas","refs","painter","alpha","antialias","animate","onAnimate","scene","Scene","camera","PerspectiveCamera","position","set","props","tankDiameter","add","light","PointLight","controls","rotateSpeed","zoomSpeed","panSpeed","noZoom","noPan","staticMoving","dynamicDampingFactor","keys","addEventListener","copy","startAutoRotation","raycaster","Raycaster","normalVector","Vector2","window","event","x","clientX","width","y","clientY","height","setFromCamera","intersects","intersectObjects","children","excludeTankFromIntersects","checkFirstObject","material","color","onHoverObject","blades","forEach","index","baffles","createAxis","tankHeight","createPlane","createTank","createShaft","createDisk","createHub","changeBladeCount","bladeCount","changeBaffleCount","baffleCount","kernelAngle","stopAutoRotation","dispose","nextProps","setSize","aspect","updateProjectionMatrix","remove","axis","xArrow","xLabel","yArrow","yLabel","zArrow","zLabel","kernelAutoRotation","bladeInnerRadius","bladeOuterRadius","bladeWidth","bladeHeight","changeBladeGeometry","isEqual","updatePlane","updateTank","updateShaft","updateDisk","updateHub","updateBlades","updateBaffles","_this3","timerId","setInterval","kernelRotationDir","clearInterval","update","render","_this4","AxisHelper","Math","max","offset","Vector3","positionEndAxes","geometry","attributes","setY","getY","setZ","getZ","FontLoader","load","font","geoOption","size","curveSegments","bevelEnabled","bevelThickness","bevelSize","bevelSegments","xGeometry","TextGeometry","xMaterial","MeshBasicMaterial","Color","Mesh","xPos","getX","ArrowHelper","yGeometry","yMaterial","yPos","rotation","PI","zGeometry","zMaterial","zPos","grid","GridHelper","_ref","CylinderGeometry","createTankGeometry","MeshLambertMaterial","opacity","transparent","side","DoubleSide","shaftRadius","_ref2","createShaftGeometry","MeshPhongMaterial","diskRadius","_ref3","diskHeight","createDiskGeometry","hubRadius","_ref4","hubHeight","createHubGeometry","newValue","oldValue","i","pop","BoxGeometry","mesh","push","innerRadius","outerRadius","length","_ref5","distance","yAxis","angle","applyAxisAngle","baffleInnerRadius","_ref6","baffleOuterRadius","baffleWidth","createBaffleGeometry","_this5","onlyTank","intersect","object","uuid","filter","needle","haystack","react_default","a","createElement","ref","Component","Content","Layout","Header","Sider","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","canvasWidth","canvasHeight","unit","hoverObject","setState","innerWidth","innerHeight","handleResize","removeEventListener","field","value","defineProperty","target","checked","name","className","layout","style","overflowY","menu","theme","mode","SubMenu","key","title","icon","type","fontWeight","Item","input_number","min","defaultValue","onChange","handleChange","es_checkbox","handleAutoRotation","bind","es_radio","Group","handleRadio","src_Turbine","handleHoverObject","Boolean","location","hostname","match","ReactDOM","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b3855d9f.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nconst THREE = require('three');\nvar TrackballControls = require('three-trackballcontrols');\nvar _ = require('lodash');\n\nclass Turbine extends Component {\n  colors = {\n    normal: {\n      tank: 0xcccccc,\n      shaft: 0xdddddd,\n      disk: 0xdddddd,\n      hub: 0xdddddd,\n      blade: 0xdddddd,\n      baffle: 0xdddddd\n    },\n    hover: {\n      tank: 0x0000ff,\n      shaft: 0x00ff00,\n      disk: 0x00ff00,\n      hub: 0x00ff00,\n      blade: 0x00ff00,\n      baffle: 0x00ff00\n    }\n  }\n\n  componentDidMount() {\n    this.glRenderer = new THREE.WebGLRenderer({\n      canvas: this.refs.painter,\n      alpha: true,\n      antialias: true\n    });\n    this.glRenderer.animate(() => this.onAnimate());\n\n    this.scene = new THREE.Scene();\n\n    this.camera = new THREE.PerspectiveCamera(45, 1, 0.1, 10000);\n    this.camera.position.set(0, 0, this.props.tankDiameter * 3);\n    this.scene.add(this.camera);\n\n    this.light = new THREE.PointLight(0xffffff, 0.3);\n    this.light.position.set(0, 0, this.props.tankDiameter * 3);\n    this.scene.add(this.light);\n\n    this.controls = new TrackballControls(this.camera, this.refs.painter);\n\n    this.controls.rotateSpeed = 1.0;\n    this.controls.zoomSpeed = 1.2;\n    this.controls.panSpeed = 0.8;\n\n    this.controls.noZoom = false;\n    this.controls.noPan = false;\n\n    this.controls.staticMoving = true;\n    this.controls.dynamicDampingFactor = 0.3;\n\n    this.controls.keys = [ 65, 83, 68 ];\n\n    this.controls.addEventListener('change', () => {\n      this.light.position.copy(this.camera.position);\n    });\n    this.startAutoRotation();\n\n    this.raycaster = new THREE.Raycaster();\n    this.normalVector = new THREE.Vector2();\n    window.addEventListener('mousemove', event => {\n      // calculate mouse position in normalized device coordinates\n      // (-1 to +1) for both components\n      this.normalVector.x = ((event.clientX - 320) / this.props.width) * 2 - 1;\n      this.normalVector.y = -((event.clientY - 64) / this.props.height) * 2 + 1;\n\n      // update the picking ray with the camera and mouse position\n      this.raycaster.setFromCamera(this.normalVector, this.camera);\n\n      // calculate objects intersecting the picking ray\n      var intersects = this.raycaster.intersectObjects(this.scene.children, true);\n      intersects = this.excludeTankFromIntersects(intersects);\n      if (this.checkFirstObject(this.tank, intersects)) {\n        this.tank.material.color.set(this.colors.hover.tank);\n        this.props.onHoverObject('tank');\n      } else {\n        this.tank.material.color.set(this.colors.normal.tank);\n      }\n      if (this.checkFirstObject(this.shaft, intersects)) {\n        this.shaft.material.color.set(this.colors.hover.shaft);\n        this.props.onHoverObject('shaft');\n      } else {\n        this.shaft.material.color.set(this.colors.normal.shaft);\n      }\n      if (this.checkFirstObject(this.disk, intersects)) {\n        this.disk.material.color.set(this.colors.hover.disk);\n        this.props.onHoverObject('disk');\n      } else {\n        this.disk.material.color.set(this.colors.normal.disk);\n      }\n      if (this.checkFirstObject(this.hub, intersects)) {\n        this.hub.material.color.set(this.colors.hover.hub);\n        this.props.onHoverObject('hub');\n      } else {\n        this.hub.material.color.set(this.colors.normal.hub);\n      }\n      if (this.checkFirstObject(this.hub, intersects)) {\n        this.hub.material.color.set(this.colors.hover.hub);\n        this.props.onHoverObject('hub');\n      } else {\n        this.hub.material.color.set(this.colors.normal.hub);\n      }\n      this.blades.forEach((blade, index) => {\n        if (this.checkFirstObject(blade, intersects)) {\n          this.blades[index].material.color.set(this.colors.hover.blade);\n          this.props.onHoverObject('blade');\n        } else {\n          this.blades[index].material.color.set(this.colors.normal.blade);\n        }\n      });\n      this.baffles.forEach((baffle, index) => {\n        if (this.checkFirstObject(baffle, intersects)) {\n          this.baffles[index].material.color.set(this.colors.hover.baffle);\n          this.props.onHoverObject('baffle');\n        } else {\n          this.baffles[index].material.color.set(this.colors.normal.baffle);\n        }\n      });\n    });\n\n    this.createAxis(this.props.tankDiameter, this.props.tankHeight);\n    this.createPlane();\n\n    this.createTank();\n    this.createShaft();\n    this.createDisk();\n    this.createHub();\n\n    this.blades = [];\n    this.changeBladeCount(this.props.bladeCount, 0);\n    this.baffles = [];\n    this.changeBaffleCount(this.props.baffleCount, 0);\n\n    this.kernelAngle = 0;\n  }\n\n  componentWillUnmount() {\n    this.stopAutoRotation();\n    this.controls.dispose();\n    delete this.controls;\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.width !== this.props.width || nextProps.height !== this.props.height) {\n      this.glRenderer.setSize(nextProps.width, nextProps.height);\n      this.camera.aspect = nextProps.width / nextProps.height;\n      this.camera.updateProjectionMatrix();\n    }\n\n    if (nextProps.tankDiameter !== this.props.tankDiameter || nextProps.tankHeight !== this.props.tankHeight) {\n      this.scene.remove(this.axis);\n      this.scene.remove(this.xArrow);\n      this.scene.remove(this.xLabel);\n      this.scene.remove(this.yArrow);\n      this.scene.remove(this.yLabel);\n      this.scene.remove(this.zArrow);\n      this.scene.remove(this.zLabel);\n      this.createAxis(nextProps.tankDiameter, nextProps.tankHeight);\n    }\n\n    if (nextProps.kernelAutoRotation && !this.props.kernelAutoRotation) {\n      this.startAutoRotation();\n    } else if (!nextProps.kernelAutoRotation && this.props.kernelAutoRotation) {\n      this.stopAutoRotation();\n    }\n\n    if (nextProps.bladeCount !== this.props.bladeCount) {\n      this.changeBladeCount(nextProps.bladeCount, this.props.bladeCount);\n    }\n    if (nextProps.bladeInnerRadius !== this.props.bladeInnerRadius || nextProps.bladeOuterRadius !== this.props.bladeOuterRadius || nextProps.bladeWidth !== this.props.bladeWidth || nextProps.bladeHeight !== this.props.bladeHeight) {\n      this.changeBladeGeometry(nextProps.bladeInnerRadius, nextProps.bladeOuterRadius, nextProps.bladeWidth, nextProps.bladeHeight);\n    }\n    if (nextProps.baffleCount !== this.props.baffleCount) {\n      this.changeBaffleCount(nextProps.baffleCount, this.props.baffleCount);\n    }\n\n    if (!_.isEqual(nextProps, this.props)) {\n      this.updatePlane(nextProps);\n      this.updateTank(nextProps);\n      this.updateShaft(nextProps);\n      this.updateDisk(nextProps);\n      this.updateHub(nextProps);\n      this.updateBlades(nextProps);\n      this.updateBaffles(nextProps);\n    }\n  }\n\n  startAutoRotation() {\n    this.timerId = window.setInterval(() => {\n      switch (this.props.kernelRotationDir) {\n        case 'clockwise':\n          this.kernelAngle = (this.kernelAngle + 4) % 360;\n          this.updateBlades(this.props);\n          break;\n        case 'counter-clockwise':\n          this.kernelAngle = (this.kernelAngle - 4) % 360;\n          this.updateBlades(this.props);\n          break;\n        default:\n          break;\n      }\n    }, 60);\n  }\n\n  stopAutoRotation() {\n    if (this.timerId) {\n      window.clearInterval(this.timerId);\n    }\n  }\n\n  onAnimate() {\n    // we will get this callback every frame\n\n    // pretend cubeRotation is immutable.\n    // this helps with updates and pure rendering.\n    // React will be sure that the rotation has now updated.\n    // this.setState({\n    //   cubeRotation: new THREE.Euler(\n    //     this.props.cubeRotation.x + 0.1,\n    //     this.props.cubeRotation.y + 0.1,\n    //     0\n    //   )\n    // });\n    this.controls.update();\n\n    this.glRenderer.render(this.scene, this.camera);\n  }\n\n  createAxis(tankDiameter, tankHeight) {\n    this.axis = new THREE.AxisHelper(Math.max(tankDiameter, tankHeight));\n    var offset = new THREE.Vector3(-(tankDiameter / 2), tankHeight / 2, tankDiameter / 2);\n    // Don't change the coordinate system and display the axis reversely\n    var positionEndAxes = this.axis.geometry.attributes.position;\n    this.axis.geometry.attributes.position.setY(3, -positionEndAxes.getY(3));\n    this.axis.geometry.attributes.position.setZ(5, -positionEndAxes.getZ(5));\n    // Don't change the coordinate system and move the axis\n    this.axis.position.add(offset);\n    this.scene.add(this.axis);\n\n    var loader = new THREE.FontLoader();\n    loader.load('fonts/helvetiker_regular.typeface.json', font => {\n      var geoOption = {\n        font: font,\n        size: 10,\n        height: 2,\n        curveSegments: 12,\n        bevelEnabled: true,\n        bevelThickness: 2,\n        bevelSize: 2,\n        bevelSegments: 5\n      };\n\n      // Position of axes extremities\n      var xGeometry = new THREE.TextGeometry('X', geoOption);\n      var xMaterial = new THREE.MeshBasicMaterial({\n        color: new THREE.Color(0xff0000)\n      });\n      this.xLabel = new THREE.Mesh(xGeometry, xMaterial);\n      var xPos = new THREE.Vector3(positionEndAxes.getX(1), positionEndAxes.getY(1), positionEndAxes.getZ(1));\n      xPos.add(offset);\n      this.xLabel.position.copy(xPos).add(new THREE.Vector3(0, 10, 0));\n      this.scene.add(this.xLabel);\n      this.xArrow = new THREE.ArrowHelper(new THREE.Vector3(1, 0, 0), new THREE.Vector3(0, 0, 0), 20, 0xff0000, 10, 5);\n      this.xArrow.position.copy(xPos);\n      this.scene.add(this.xArrow);\n\n      var yGeometry = new THREE.TextGeometry('Y', geoOption);\n      var yMaterial = new THREE.MeshBasicMaterial({\n        color: new THREE.Color(0x00ff00)\n      });\n      this.yLabel = new THREE.Mesh(yGeometry, yMaterial);\n      var yPos = new THREE.Vector3(positionEndAxes.getX(3), positionEndAxes.getY(3), positionEndAxes.getZ(3));\n      yPos.add(offset);\n      this.yLabel.position.copy(yPos).add(new THREE.Vector3(0, -10, 10));\n      this.yLabel.rotation.set(-Math.PI, Math.PI / 2, 0);\n      this.scene.add(this.yLabel);\n      this.yArrow = new THREE.ArrowHelper(new THREE.Vector3(0, -1, 0), new THREE.Vector3(0, 0, 0), 20, 0x00ff00, 10, 5);\n      this.yArrow.position.copy(yPos);\n      this.scene.add(this.yArrow);\n\n      var zGeometry = new THREE.TextGeometry('Z', geoOption);\n      var zMaterial = new THREE.MeshBasicMaterial({\n        color: new THREE.Color(0x0000ff)\n      });\n      this.zLabel = new THREE.Mesh(zGeometry, zMaterial);\n      var zPos = new THREE.Vector3(positionEndAxes.getX(5), positionEndAxes.getY(5), positionEndAxes.getZ(5));\n      zPos.add(offset);\n      this.zLabel.position.copy(zPos).add(new THREE.Vector3(0, -10, 0));\n      this.zLabel.rotation.set(-Math.PI, -(Math.PI / 2), 0);\n      this.scene.add(this.zLabel);\n      this.zArrow = new THREE.ArrowHelper(new THREE.Vector3(0, 0, -1), new THREE.Vector3(0, 0, 0), 20, 0x0000ff, 10, 5);\n      this.zArrow.position.copy(zPos);\n      this.scene.add(this.zArrow);\n    });\n  }\n\n  createPlane() {\n    this.grid = new THREE.GridHelper(1000, 50);\n    this.grid.position.y = -(this.props.tankHeight / 2);\n    this.scene.add(this.grid);\n  }\n\n  updatePlane(props) {\n    this.grid.position.y = -(props.tankHeight / 2);\n  }\n\n  createTankGeometry({ tankDiameter, tankHeight }) {\n    return new THREE.CylinderGeometry(tankDiameter / 2, tankDiameter / 2, tankHeight, 30);\n  }\n\n  createTank() {\n    var geometry = this.createTankGeometry(this.props);\n    var material = new THREE.MeshLambertMaterial({\n      color: 0xcccccc,\n      opacity: 0.2,\n      transparent: true,\n      side: THREE.DoubleSide\n    });\n    this.tank = new THREE.Mesh(geometry, material);\n    this.scene.add(this.tank);\n  }\n\n  updateTank(props) {\n    delete this.tank.geometry;\n    this.tank.geometry = this.createTankGeometry(props);\n  }\n\n  createShaftGeometry({ shaftRadius, tankHeight }) {\n    return new THREE.CylinderGeometry(shaftRadius, shaftRadius, tankHeight, 30);\n  }\n\n  createShaft() {\n    var geometry = this.createShaftGeometry(this.props);\n    var material = new THREE.MeshPhongMaterial({\n      color: 0xdddddd\n    });\n    this.shaft = new THREE.Mesh(geometry, material);\n    this.scene.add(this.shaft);\n  }\n\n  updateShaft(props) {\n    delete this.shaft.geometry;\n    this.shaft.geometry = this.createShaftGeometry(props);\n  }\n\n  createDiskGeometry({ diskRadius, diskHeight }) {\n    return new THREE.CylinderGeometry(diskRadius, diskRadius, diskHeight, 30);\n  }\n\n  createDisk() {\n    var geometry = this.createDiskGeometry(this.props);\n    var material = new THREE.MeshPhongMaterial({\n      color: 0xdddddd\n    });\n    this.disk = new THREE.Mesh(geometry, material);\n    this.disk.position.set(0, -(this.props.tankHeight / 6), 0);\n    this.scene.add(this.disk);\n  }\n\n  updateDisk(props) {\n    delete this.disk.geometry;\n    this.disk.geometry = this.createDiskGeometry(props);\n    this.disk.position.set(0, -(props.tankHeight / 6), 0);\n  }\n\n  createHubGeometry({ hubRadius, hubHeight }) {\n    return new THREE.CylinderGeometry(hubRadius, hubRadius, hubHeight, 30);\n  }\n\n  createHub() {\n    var geometry = this.createHubGeometry(this.props);\n    var material = new THREE.MeshPhongMaterial({\n      color: 0xdddddd\n    });\n    this.hub = new THREE.Mesh(geometry, material);\n    this.hub.position.set(0, -(this.props.tankHeight / 6), 0);\n    this.scene.add(this.hub);\n  }\n\n  updateHub(props) {\n    delete this.hub.geometry;\n    this.hub.geometry = this.createHubGeometry(props);\n    this.hub.position.set(0, -(props.tankHeight / 6), 0);\n  }\n\n  changeBladeCount(newValue, oldValue) {\n    var i;\n    if (newValue < oldValue) {\n      for (i = oldValue - 1; i >= newValue; i--) {\n        this.scene.remove(this.blades[i]);\n        this.blades.pop();\n        delete this.blades[i];\n      }\n    } else if (newValue > oldValue) {\n      for (i = oldValue; i < newValue; i++) {\n        var blade = new THREE.BoxGeometry(this.props.bladeWidth, this.props.bladeHeight, this.props.bladeOuterRadius - this.props.bladeInnerRadius);\n        var material = new THREE.MeshPhongMaterial({ color: 0xeeeeee });\n        var mesh = new THREE.Mesh(blade, material);\n        this.blades.push(mesh);\n        this.scene.add(mesh);\n      }\n    }\n  }\n\n  changeBladeGeometry(innerRadius, outerRadius, width, height) {\n    for (var i = 0; i < this.blades.length; i++) {\n      delete this.blades[i].geometry;\n      this.blades[i].geometry = new THREE.BoxGeometry(width, height, outerRadius - innerRadius);\n    }\n  }\n\n  updateBlades({ bladeInnerRadius, bladeOuterRadius, tankHeight }) {\n    var distance = (bladeInnerRadius + bladeOuterRadius) / 2;\n    var yAxis = new THREE.Vector3(0, 1, 0);\n    var offset = new THREE.Vector3(0, -(tankHeight / 6), 0);\n    for (var i = 0; i < this.blades.length; i++) {\n      var angle = (360 * i / this.blades.length + this.kernelAngle) % 360;\n      angle = 2 * Math.PI * angle / 360;\n      this.blades[i].position.set(0, 0, distance);\n      this.blades[i].position.applyAxisAngle(yAxis, angle);\n      this.blades[i].position.add(offset);\n      this.blades[i].rotation.set(0, angle, 0);\n    }\n  }\n\n  createBaffleGeometry({ baffleInnerRadius, baffleOuterRadius, baffleWidth, tankHeight }) {\n    return new THREE.BoxGeometry(baffleWidth, tankHeight, baffleOuterRadius - baffleInnerRadius);\n  }\n\n  changeBaffleCount(newValue, oldValue) {\n    var i;\n    if (newValue < oldValue) {\n      for (i = oldValue - 1; i >= newValue; i--) {\n        this.scene.remove(this.baffles[i]);\n        this.baffles.pop();\n        delete this.baffles[i];\n      }\n    } else if (newValue > oldValue) {\n      for (i = oldValue; i < newValue; i++) {\n        var baffle = this.createBaffleGeometry(this.props);\n        var material = new THREE.MeshPhongMaterial({ color: 0xeeeeee });\n        var mesh = new THREE.Mesh(baffle, material);\n        this.baffles.push(mesh);\n        this.scene.add(mesh);\n      }\n    }\n  }\n\n  updateBaffles(props) {\n    const { baffleInnerRadius, baffleOuterRadius } = props;\n    var distance = (baffleInnerRadius + baffleOuterRadius) / 2;\n    var yAxis = new THREE.Vector3(0, 1, 0);\n    for (var i = 0; i < this.baffles.length; i++) {\n      delete this.baffles[i].geometry;\n      this.baffles[i].geometry = this.createBaffleGeometry(props);\n      var angle = 2 * Math.PI * i / this.baffles.length;\n      this.baffles[i].position.set(0, 0, distance);\n      this.baffles[i].position.applyAxisAngle(yAxis, angle);\n      this.baffles[i].rotation.set(0, angle, 0);\n    }\n  }\n\n  excludeTankFromIntersects(intersects) {\n    var onlyTank = true;\n    intersects.forEach(intersect => {\n      if (intersect.object.uuid !== this.tank.uuid) {\n        onlyTank = false;\n        return false;\n      }\n    }, this);\n    if (onlyTank) {\n      return intersects;\n    }\n    return intersects.filter((intersect, index) => {\n      return intersect.object.uuid !== this.tank.uuid;\n    }, this);\n  }\n\n  checkFirstObject(needle, haystack) {\n    if (haystack.length > 0) {\n      return needle.uuid === haystack[0].object.uuid;\n    } else {\n      return false;\n    }\n  }\n\n  render() {\n    return (\n      <canvas ref=\"painter\" width={this.props.width} height={this.props.height}></canvas>\n    );\n  }\n}\n\nTurbine.propTypes = {\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  tankDiameter: PropTypes.number.isRequired,\n  tankHeight: PropTypes.number.isRequired,\n  shaftRadius: PropTypes.number.isRequired,\n  kernelAutoRotation: PropTypes.bool,\n  kernelRotationDir: PropTypes.string,\n  diskRadius: PropTypes.number.isRequired,\n  diskHeight: PropTypes.number.isRequired,\n  hubRadius: PropTypes.number.isRequired,\n  hubHeight: PropTypes.number.isRequired,\n  bladeCount: PropTypes.number.isRequired,\n  bladeInnerRadius: PropTypes.number.isRequired,\n  bladeOuterRadius: PropTypes.number.isRequired,\n  bladeWidth: PropTypes.number.isRequired,\n  bladeHeight: PropTypes.number.isRequired,\n  baffleCount: PropTypes.number.isRequired,\n  baffleInnerRadius: PropTypes.number.isRequired,\n  baffleOuterRadius: PropTypes.number.isRequired,\n  baffleWidth: PropTypes.number.isRequired,\n  onHoverObject: PropTypes.func\n};\n\nexport default Turbine;\n","import React, { Component } from 'react';\nimport { Checkbox, Icon, InputNumber, Layout, Menu, Radio } from 'antd';\nimport Turbine from './Turbine';\n\nimport 'antd/dist/antd.css';\nimport './App.css';\n\nconst { Content, Header, Sider } = Layout;\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    const unit = 300;\n    this.state = {\n      canvasWidth: 50,\n      canvasHeight: 50,\n      tankDiameter: unit,\n      tankHeight: unit,\n      shaftRadius: unit * 2 / 75,\n      kernelAutoRotation: true,\n      kernelRotationDir: 'clockwise',\n      diskRadius: unit / 8,\n      diskHeight: unit / 75,\n      hubRadius: unit * 4 / 75,\n      hubHeight: unit / 15,\n      bladeCount: 6,\n      bladeInnerRadius: unit / 12,\n      bladeOuterRadius: unit / 6,\n      bladeWidth: unit / 75,\n      bladeHeight: unit / 15,\n      baffleCount: 4,\n      baffleInnerRadius: unit * 2 / 5,\n      baffleOuterRadius: unit / 2,\n      baffleWidth: unit / 75,\n      hoverObject: ''\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      canvasWidth: window.innerWidth - 320,\n      canvasHeight: window.innerHeight - 64\n    });\n    this.handleResize = () => {\n      this.setState({\n        canvasWidth: window.innerWidth - 320,\n        canvasHeight: window.innerHeight - 64\n      });\n    }\n    window.addEventListener('resize', this.handleResize);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleResize);\n  }\n\n  handleChange(field, value) {\n    this.setState({ [field]: value });\n  }\n\n  handleAutoRotation(event) {\n    this.setState({ kernelAutoRotation: event.target.checked });\n  }\n\n  handleRadio(event) {\n    this.setState({ kernelRotationDir: event.target.value });\n  }\n\n  handleHoverObject(name) {\n    this.setState({ hoverObject: name });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Layout style={{ height: '100%' }}>\n          <Sider width={320} style={{ overflowY: 'auto' }}>\n            <div className=\"logo\"></div>\n            <Menu theme=\"dark\" mode=\"inline\">\n              <Menu.SubMenu key=\"tank\" title={\n                <span>\n                  <Icon type={this.state.hoverObject === 'tank' ? 'environment' : 'mail'} />\n                  <span style={{\n                    fontWeight: this.state.hoverObject === 'tank' ? 'bold' : 'normal'\n                  }}>Tank</span>\n                </span>\n              }>\n                <Menu.Item key=\"menuitem1\">\n                  <span>Diameter</span>\n                  <InputNumber min={100} defaultValue={this.state.tankDiameter} onChange={(value) => this.handleChange('tankDiameter', value)} />\n                </Menu.Item>\n                <Menu.Item key=\"menuitem2\">\n                  <span>Height</span>\n                  <InputNumber min={100} defaultValue={this.state.tankHeight} onChange={(value) => this.handleChange('tankHeight', value)} />\n                </Menu.Item>\n              </Menu.SubMenu>\n              <Menu.SubMenu key=\"shaft\" title={\n                <span>\n                  <Icon type={this.state.hoverObject === 'shaft' ? 'environment' : 'mail'} />\n                  <span style={{\n                    fontWeight: this.state.hoverObject === 'shaft' ? 'bold' : 'normal'\n                  }}>Shaft</span>\n                </span>\n              }>\n                <Menu.Item key=\"menuitem3\">\n                  <span>Radius</span>\n                  <InputNumber min={1} defaultValue={this.state.shaftRadius} onChange={(value) => this.handleChange('shaftRadius', value)} />\n                </Menu.Item>\n              </Menu.SubMenu>\n              <Menu.SubMenu key=\"disk\" title={\n                <span>\n                  <Icon type={this.state.hoverObject === 'disk' ? 'environment' : 'mail'} />\n                  <span style={{\n                    fontWeight: this.state.hoverObject === 'disk' ? 'bold' : 'normal'\n                  }}>Disk</span>\n                </span>\n              }>\n                <Menu.Item key=\"menuitem4\">\n                  <span>Radius</span>\n                  <InputNumber min={1} defaultValue={this.state.diskRadius} onChange={(value) => this.handleChange('diskRadius', value)} />\n                </Menu.Item>\n                <Menu.Item key=\"menuitem5\">\n                  <span>Height</span>\n                  <InputNumber min={1} defaultValue={this.state.diskHeight} onChange={(value) => this.handleChange('diskHeight', value)} />\n                </Menu.Item>\n              </Menu.SubMenu>\n              <Menu.SubMenu key=\"hub\" title={\n                <span>\n                  <Icon type={this.state.hoverObject === 'hub' ? 'environment' : 'mail'} />\n                  <span style={{\n                    fontWeight: this.state.hoverObject === 'hub' ? 'bold' : 'normal'\n                  }}>Hub</span>\n                </span>\n              }>\n                <Menu.Item key=\"menuitem6\">\n                  <span>Radius</span>\n                  <InputNumber min={1} defaultValue={this.state.hubRadius} onChange={(value) => this.handleChange('hubRadius', value)} />\n                </Menu.Item>\n                <Menu.Item key=\"menuitem7\">\n                  <span>Height</span>\n                  <InputNumber min={1} defaultValue={this.state.hubHeight} onChange={(value) => this.handleChange('hubHeight', value)} />\n                </Menu.Item>\n              </Menu.SubMenu>\n              <Menu.SubMenu key=\"blade\" title={\n                <span>\n                  <Icon type={this.state.hoverObject === 'blade' ? 'environment' : 'mail'} />\n                  <span style={{\n                    fontWeight: this.state.hoverObject === 'blade' ? 'bold' : 'normal'\n                  }}>Blade</span>\n                </span>\n              }>\n                <Menu.Item key=\"menuitem8\">\n                  <span>Count</span>\n                  <InputNumber min={1} defaultValue={this.state.bladeCount} onChange={(value) => this.handleChange('bladeCount', value)} />\n                </Menu.Item>\n                <Menu.Item key=\"menuitem9\">\n                  <span>Inner Radius</span>\n                  <InputNumber min={1} defaultValue={this.state.bladeInnerRadius} onChange={(value) => this.handleChange('bladeInnerRadius', value)} />\n                </Menu.Item>\n                <Menu.Item key=\"menuitem10\">\n                  <span>Outer Radius</span>\n                  <InputNumber min={1} defaultValue={this.state.bladeOuterRadius} onChange={(value) => this.handleChange('bladeOuterRadius', value)} />\n                </Menu.Item>\n                <Menu.Item key=\"menuitem11\">\n                  <span>Width</span>\n                  <InputNumber min={1} defaultValue={this.state.bladeWidth} onChange={(value) => this.handleChange('bladeWidth', value)} />\n                </Menu.Item>\n                <Menu.Item key=\"menuitem12\">\n                  <span>Height</span>\n                  <InputNumber min={1} defaultValue={this.state.bladeHeight} onChange={(value) => this.handleChange('bladeHeight', value)} />\n                </Menu.Item>\n                <Menu.Item key=\"menuitem13\">\n                  <Checkbox checked={this.state.kernelAutoRotation} onChange={this.handleAutoRotation.bind(this)}>\n                    <span className=\"ant-menu-control\">Auto Rotation</span>\n                  </Checkbox>\n                </Menu.Item>\n                <Menu.Item key=\"menuitem14\">\n                  <Radio.Group onChange={this.handleRadio.bind(this)} value={this.state.kernelRotationDir}>\n                    <Radio value=\"clockwise\">\n                      <span className=\"ant-menu-control\">Clockwise</span>\n                    </Radio>\n                    <Radio value=\"counter-clockwise\">\n                      <span className=\"ant-menu-control\">Counter-Clockwise</span>\n                    </Radio>\n                  </Radio.Group>\n                </Menu.Item>\n              </Menu.SubMenu>\n              <Menu.SubMenu key=\"baffle\" title={\n                <span>\n                  <Icon type={this.state.hoverObject === 'baffle' ? 'environment' : 'mail'} />\n                  <span style={{\n                    fontWeight: this.state.hoverObject === 'baffle' ? 'bold' : 'normal'\n                  }}>Baffle</span>\n                </span>\n              }>\n                <Menu.Item key=\"menuitem15\">\n                  <span>Count</span>\n                  <InputNumber min={1} defaultValue={this.state.baffleCount} onChange={(value) => this.handleChange('baffleCount', value)} />\n                </Menu.Item>\n                <Menu.Item key=\"menuitem16\">\n                  <span>Inner Radius</span>\n                  <InputNumber min={1} defaultValue={this.state.baffleInnerRadius} onChange={(value) => this.handleChange('baffleInnerRadius', value)} />\n                </Menu.Item>\n                <Menu.Item key=\"menuitem17\">\n                  <span>Outer Radius</span>\n                  <InputNumber min={1} defaultValue={this.state.baffleOuterRadius} onChange={(value) => this.handleChange('baffleOuterRadius', value)} />\n                </Menu.Item>\n                <Menu.Item key=\"menuitem18\">\n                  <span>Width</span>\n                  <InputNumber min={1} defaultValue={this.state.baffleWidth} onChange={(value) => this.handleChange('baffleWidth', value)} />\n                </Menu.Item>\n              </Menu.SubMenu>\n            </Menu>\n          </Sider>\n          <Layout>\n            <Header>\n              <h1>Turbulent Dynamics</h1>\n            </Header>\n            <Content style={{ overflowY: 'hidden' }}>\n              <Turbine\n                width={this.state.canvasWidth}\n                height={this.state.canvasHeight}\n                tankDiameter={this.state.tankDiameter}\n                tankHeight={this.state.tankHeight}\n                shaftRadius={this.state.shaftRadius}\n                kernelAutoRotation={this.state.kernelAutoRotation}\n                kernelRotationDir={this.state.kernelRotationDir}\n                diskRadius={this.state.diskRadius}\n                diskHeight={this.state.diskHeight}\n                hubRadius={this.state.hubRadius}\n                hubHeight={this.state.hubHeight}\n                bladeCount={this.state.bladeCount}\n                bladeInnerRadius={this.state.bladeInnerRadius}\n                bladeOuterRadius={this.state.bladeOuterRadius}\n                bladeWidth={this.state.bladeWidth}\n                bladeHeight={this.state.bladeHeight}\n                baffleCount={this.state.baffleCount}\n                baffleInnerRadius={this.state.baffleInnerRadius}\n                baffleOuterRadius={this.state.baffleOuterRadius}\n                baffleWidth={this.state.baffleWidth}\n                onHoverObject={name => this.handleHoverObject(name)}\n              />\n            </Content>\n          </Layout>\n        </Layout>\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}